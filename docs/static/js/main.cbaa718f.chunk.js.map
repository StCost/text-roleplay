{"version":3,"sources":["components/Menu.tsx","helpers/dice.tsx","helpers/utils.tsx","reducers/index.ts","helpers/store.tsx","actions/index.tsx","components/Avatar.tsx","components/Image.tsx","containers/Chat/MessageBody.tsx","containers/Chat/Message.tsx","containers/Chat/index.tsx","components/Loader/LoadIcon.tsx","components/Loader/CheckIcon.tsx","components/Loader/index.tsx","containers/Settings/index.tsx","components/Logout.tsx","reducers/interfaces.ts","containers/Items/ItemCreator.tsx","components/Item.tsx","containers/Items/ItemsList.tsx","containers/Items/index.tsx","configs/routes.tsx","components/Help.tsx","components/Login.tsx","components/Router.tsx","App.tsx","helpers/firebase.tsx","sagas/auth.ts","sagas/users.ts","sagas/messages.ts","sagas/items.ts","sagas/index.ts","serviceWorker.ts","index.tsx"],"names":["connect","state","isLoggedIn","withRouter","props","Fragment","mode","window","innerWidth","selectedKeys","location","pathname","split","pop","menu","map","value","Item","key","path","disabled","link","href","target","rel","to","label","diceRegex","diceRegexG","rollDice","amount","size","Array","fill","min","max","Math","floor","random","colorFromString","str","hash","i","length","charCodeAt","color","toString","substr","isOnline","time","parseInt","localStorage","getItem","Date","getTime","doubleDigit","date","getHours","getMinutes","getSeconds","join","getDate","getMonth","getFullYear","getFullTime","isURL","test","processMessages","messages","filter","item","pos","self","findIndex","_i","sort","a","b","m","index","author","grouped","formatMessage","message","body","rolls","match","roll","_amount","_size","results","maxResult","minResult","sum","reduce","exportRolls","isRP","mentioned","validateMessage","notify","error","some","indexOf","user","JSON","parse","setItem","uid","initialState","userData","settings","loading","users","currentUser","items","defaultUser","lastOnline","nickname","avatar","reducer","action","type","concat","id","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","composeWithDevTools","applyMiddleware","dispatch","createAction","payload","createAsyncAction","typeName","toLowerCase","replace","toUpperCase","actions","updateLastOnline","logout","Avatar","style","rest","_avatar","src","backgroundColor","Image","visible","toggleModal","setState","this","onClick","alt","className","title","CloseOutlined","closable","footer","onCancel","width","maxWidth","Component","MessageBody","videoId","URL","searchParams","get","height","frameBorder","_body","_rolls","word","rollIndex","splice","summing","importRolls","Message","undefined","placement","extra","Chat","sending","componentDidMount","getMessages","subscribe","componentWillUnmount","unsubscribe","componentDidUpdate","prevProps","forEach","getUser","onChangeMessage","event","onKeyDown","shiftKey","preventDefault","onSendMessage","find","currentTarget","selectionStart","sendMessage","getMoreMessages","firstMessage","onScroll","scrollTop","uploadFile","file","onPaste","e","clipboardData","files","onDrop","dataTransfer","getAsFile","render","spinning","TextArea","placeholder","autoSize","minRows","maxRows","onChange","SendOutlined","viewBox","focusable","data-icon","aria-hidden","d","Loader","LoadIcon","CheckIcon","Settings","field","newSettings","setSettings","setUser","clearAvatar","getField","hasRight","display","readOnly","onConfirm","okText","cancelText","icon","ClearOutlined","danger","margin","defaultValue","labels","bordered","Object","keys","React","URLSearchParams","params","isAdmin","Logout","defaultItem","name","effect","image","weight","price","description","capacity","approved","armor","ItemCreator","types","clearImage","fields","Option","precision","step","shape","onSubmit","newItem","content","onClose","centered","getStats","wearable","ammo","weapon","stats","ItemsList","getControls","toggleEditingItem","deleteModal","getFooter","overlay","trigger","InsertRowBelowOutlined","Modal","confirm","maskClosable","onOk","close","deleteItem","canControl","Items","creatingItem","editingItem","searchString","getItems","toggleCreatingItem","onCreateItem","getCreators","onFilterChange","getFilters","Group","flexDirection","Button","allowClear","FilterOutlined","_searchString","routes","component","exact","onFinish","values","login","rules","required","Password","htmlType","Login","App","callback","eventName","document","addEventListener","listenForActivity","auth","initializeApp","firebaseConfig","fbAuth","database","fbDatabase","onAuthStateChanged","loginSuccess","watchForActions","email","password","signInWithEmailAndPassword","stringify","console","code","createUserWithEmailAndPassword","loginFail","removeItem","signOut","all","takeLatest","ref","child","set","setUserSuccess","requestedUsers","on","rawUser","val","getUserSuccess","sendMessageSuccess","orderByKey","limitToLast","rawMessages","getMessagesSuccess","off","once","endAt","request","XMLHttpRequest","formData","FormData","append","open","setRequestHeader","onreadystatechange","status","readyState","res","responseText","data","send","getItemsById","getMoreItems","itemData","setItemSuccess","rawItems","getItemsSuccess","itemsRef","firstItem","remove","deleteItemSuccess","watchAll","Boolean","hostname","run","saga","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.cbaa718f.chunk.js","sourcesContent":["import React from 'react';\nimport { Menu as AntdMenu } from 'antd';\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport '../styles/menu.scss';\nimport menu from '../configs/menu.json';\nimport { IState } from '../reducers/interfaces';\n\ninterface IMenuProps extends RouteComponentProps {\n  isLoggedIn: boolean;\n}\n\ninterface IMenuConfig {\n  label: string;\n  path: string;\n  link?: boolean;\n}\n\nfunction Menu(props: IMenuProps) {\n  if (!props.isLoggedIn) {\n    return <React.Fragment/>;\n  }\n\n  const mode = window.innerWidth < 767\n    ? 'horizontal'\n    : 'inline';\n\n  return (\n    <AntdMenu\n      mode={mode}\n      selectedKeys={[props.location.pathname.split('/').pop() || '']}\n    >\n      {menu.map((value: IMenuConfig) => (\n        <AntdMenu.Item\n          key={value.path.split('/').pop()}\n          disabled={value.path === props.location.pathname}\n        >\n          {\n            value.link\n              ? (\n\n                <a\n                  href={value.path}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Помощь\n                </a>\n              ) : (\n                <Link to={value.path}>\n                  {value.label}\n                </Link>\n              )\n          }\n        </AntdMenu.Item>\n      ))}\n    </AntdMenu>\n  );\n}\n\nexport default connect((state: IState) => ({ isLoggedIn: state.isLoggedIn }))(withRouter(Menu));\n","import React from 'react';\nimport { Tooltip } from 'antd';\n\nexport interface IRoll {\n  roll: string;\n  results: number[];\n  amount: number;\n  size: number;\n  maxResult: number;\n  minResult: number;\n  sum: number;\n}\n\nexport const diceRegex = /([1-9]|10)[dд]((10|12|20)|[468])/miu;\nexport const diceRegexG = /([1-9]|10)[dд]((10|12|20)|[468])/miug;\n\nexport const getRandomInt = (min: number, max: number) =>\n  Math.floor(Math.random() * ((max + 1) - min) + min);\n\nexport const hasDice = (str: string) =>\n  /\\d+[dд]\\d+/imu.test(str);\n\nexport const rollDice = (amount: number, size: number) => {\n  return new Array(amount).fill(amount + size).map(() => getRandomInt(1, size));\n};\n\nexport const exportRolls = (str: string) => {\n  const rolls = str.match(diceRegexG);\n  if (rolls) {\n    return rolls.map((roll: string): IRoll => {\n      const [_amount,_size] = roll.split(/[dд]/);\n      const amount = parseInt(_amount);\n      const size = parseInt(_size);\n      const results = rollDice(amount, size);\n\n      return ({\n        maxResult: size * amount,\n        minResult: amount,\n        sum: results.reduce((a, b) => a + b, 0),\n        roll,\n        results,\n        amount,\n        size,\n      })\n    });\n  }\n  return [];\n};\n\nexport const importRolls = (body: string, _rolls: IRoll[]) => {\n  const rolls = [..._rolls]; // Avoid mutations\n  return body.split(' ').map((word: string, index: number) => {\n    const rollIndex = rolls.findIndex(({ roll }) => roll === word);\n    if (rollIndex > -1) {\n      const {\n        results,\n        maxResult,\n        minResult,\n        sum\n      } = rolls.splice(rollIndex, 1)[0];\n\n      const summing = `${sum} = ${results.join(' + ')}`;\n      const className = (sum === maxResult && 'critHit') || (sum === minResult && 'critMiss') || '';\n      return (\n        <React.Fragment key={word + index}>\n          {' '}\n          <Tooltip title={summing}>\n            <b className={className}>\n              {word}({sum})\n            </b>\n          </Tooltip>\n        </React.Fragment>\n      )\n    }\n    return ` ${word}`;\n  });\n};\n","import { message as notify } from 'antd';\n\nimport actions from '../actions';\nimport { IMessage } from '../reducers/interfaces';\nimport { diceRegex, exportRolls, hasDice } from './dice';\n\nexport const camelize = (str: string) => {\n  return str\n    .toLowerCase()\n    .replace(/_./g, (m) => m.toUpperCase())\n    .replace(/_/g, '')\n};\n\nexport const colorFromString = (str: string) => {\n  if (!str) return '#000';\n\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n  for (let i = 0; i < 3; i++) {\n    let value = (hash >> (i * 8)) & 0xFF;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n\n  return color;\n};\n\nexport const isOnline = (time?: number) => {\n  if (!time) return false;\n  const lastActivity = time || parseInt(localStorage.getItem('lastActivity') || '0');\n  return (lastActivity + 180000) > new Date().getTime();\n};\n\nexport const doubleDigit = (str: number) => `${str}`.length === 1\n  ? `0${str}`\n  : str;\n\nexport const getTime = (time: number) => {\n  const date = new Date(time);\n  return [date.getHours(), date.getMinutes(), date.getSeconds()].map(doubleDigit).join(':');\n};\n\nexport const getDate = (time: number) => {\n  const date = new Date(time);\n  return [date.getDate(), date.getMonth() + 1, date.getFullYear()].map(doubleDigit).join('.');\n};\n\nexport const getFullTime = (time: number) => {\n  const date = new Date(time);\n  const messageTime = [date.getHours(), date.getMinutes(), date.getSeconds()].map(doubleDigit).join(':');\n  const messageDate = [date.getDate(), date.getMonth() + 1, date.getFullYear()].map(doubleDigit).join('.');\n\n  return [messageTime, messageDate].join(' ');\n};\n\nexport const listenForActivity = () => {\n  const callback = () => {\n    if (!isOnline(parseInt(localStorage.getItem('lastActivity') || '0') - 60000))\n      actions.updateLastOnline({});\n  };\n\n  [\n    'mousedown',\n    'mousemove',\n    'keydown',\n    'scroll',\n    'touchstart'\n  ].forEach((eventName) => {\n    document.addEventListener(eventName, callback, true);\n  });\n  callback();\n};\n\nexport const isURL = (str: string) =>\n  /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/igm.test(str);\n\nexport const processMessages = (messages: IMessage[]) => {\n  return messages\n    .filter((item: IMessage, pos: number, self: IMessage[]) =>\n      self.findIndex((_i: IMessage) => _i.time === item.time) === pos\n    )\n    .sort((a: IMessage, b: IMessage) => b.time - a.time)\n    .map((m: IMessage, index: number, messages: IMessage[]) => {\n      if (index < messages.length - 2) {\n        if (m.author === messages[index + 1].author) {\n          return {\n            ...m,\n            grouped: true,\n          }\n        }\n      }\n      return m;\n    })\n};\n\nexport const formatMessage = (message: IMessage) => {\n  const { body } = message;\n\n  if (diceRegex.test(body)) {\n    message.rolls = exportRolls(body);\n  }\n\n  if (/\\*/.test(body)) {\n    message.isRP = true;\n  }\n\n  if (/(@[a-zа-яё]*)/mui.test(body)) {\n    message.mentioned = true;\n  }\n\n  return message;\n};\n\nexport const validateMessage = (message: string) => {\n\n  if (!message) {\n    notify.error('Сообщение пустое');\n    return false;\n  }\n\n  if (hasDice(message)) {\n    const rolls: string[] | null = message.match(/(( |^)[a-zа-я]+\\d+[dд]\\d+)|(\\d+[dд]\\d+[a-zа-я]+( |$))|(\\d+[dд]\\d+)/miug);\n    if (rolls) {\n      const wasError = rolls.some((roll: string) => {\n        if (/(([a-zа-яё])\\d+[dд]\\d+)|(\\d+[dд]\\d+([a-zа-яё]))/miug.test(roll)) {\n          notify.error(`Ошибка в дайсе ${roll}. Рядом не должно быть символов`);\n          return true;\n        }\n\n        const [amount, size] = roll.split(/[dд]/u);\n\n        if (parseInt(amount) > 10) {\n          notify.error(`Ошибка в дайсе ${roll}. Нельзя бросать больше 10-ти дайсов`);\n          return true;\n        }\n\n        if ([2,4,6,8,10,12,20].indexOf(parseInt(size)) === -1) {\n          notify.error(`Ошибка в дайсе ${roll}. Можно бросать только дайсы размеров 4 6 8 10 12 20`);\n          return true;\n        }\n\n        return false;\n      });\n      if (wasError) return false;\n    }\n  }\n  return true;\n};\n\nexport const generateID = () =>\n  '_' + Math.random().toString(36).substr(2, 9);\n","import { processMessages } from '../helpers/utils';\nimport { IAction, IItem, IState } from \"./interfaces\";\n\nconst user = JSON.parse(localStorage.getItem('user') || 'null');\nif (user) localStorage.setItem('uid', user.uid);\nexport const initialState: IState = {\n  userData: user,\n  isLoggedIn: user !== null,\n  settings: false,\n  loading: false,\n  messages: [],\n  users: {},\n  uid: user ? user.uid : '',\n  currentUser: null,\n  items: [],\n  error: false,\n};\n\nexport const defaultUser = {\n  lastOnline: 0,\n\n  nickname: '',\n  avatar: '',\n\n  uid: '',\n};\n\nconst reducer = (state = initialState, action: IAction) => {\n  switch (action.type) {\n    case 'LOGIN':\n    case 'GET_MESSAGES':\n    case 'GET_MORE_MESSAGES':\n    case 'SEND_MESSAGE':\n    case 'SET_USER':\n    case 'GET_ITEMS':\n    case 'GET_MORE_ITEMS':\n    case 'GET_ITEMS_BY_ID':\n    case 'CREATE_ITEM':\n    case 'DELETE_ITEM':\n    case 'UPLOAD_FILE': {\n      return {\n        ...state,\n        loading: true,\n      }\n    }\n    case 'SET_USER_SUCCESS':\n    case 'SET_USER_FAIL':\n    case 'GET_MESSAGES_FAIL':\n    case 'GET_MORE_MESSAGES_SUCCESS':\n    case 'GET_MORE_MESSAGES_FAIL':\n    case 'SEND_MESSAGE_FAIL': {\n      return {\n        ...state,\n        loading: false,\n      }\n    }\n    case 'LOGIN_SUCCESS': {\n      return {\n        ...state,\n        uid: action.user.uid,\n        userData: action.user,\n        isLoggedIn: action.user !== null,\n      }\n    }\n    case 'LOGIN_FAIL': {\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      }\n    }\n    case 'LOGOUT': {\n      return {\n        ...state,\n        userData: null,\n        isLoggedIn: false,\n      }\n    }\n    case 'GET_MESSAGES_SUCCESS': {\n      const messages = action.concat\n        ? [...state.messages, ...action.messages]\n        : action.messages;\n\n      return {\n        ...state,\n        messages: processMessages(messages),\n        loading: false,\n      }\n    }\n    case 'GET_USER_SUCCESS': {\n      return {\n        ...state,\n        currentUser: action.currentUser\n          ? action.user\n          : state.currentUser,\n        users: {\n          ...state.users,\n          [action.uid]: action.user,\n        },\n      }\n    }\n    case 'GET_ITEMS_SUCCESS': {\n      return {\n        ...state,\n        loading: false,\n        items: [...action.items, ...state.items]\n          .filter((item: IItem, pos: number, self: IItem[]) =>\n            self.findIndex((_i: IItem) => _i.id === item.id) === pos\n          )\n      }\n    }\n    case 'DELETE_ITEM_SUCCESS': {\n      return {\n        ...state,\n        loading: false,\n        items: state.items.filter((item: IItem) => item.id !== action.id),\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { initialState } from '../reducers';\nimport reducers from '../reducers'\n\nexport const sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  reducers,\n  initialState,\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\n);\n\nexport default store;\n","import store from '../helpers/store';\nimport { camelize } from '../helpers/utils';\n\nconst dispatch = store.dispatch;\n\nexport interface IPayload {\n  [key: string]: any;\n}\n\ninterface IActions {\n  [key: string]: (payload: IPayload) => void;\n}\n\nconst createAction =\n  (type: string) =>\n    (payload?: IPayload) =>\n      dispatch({ type, ...payload });\n\nconst createAsyncAction = (type: string) => {\n  const typeName = camelize(type);\n  return {\n    [typeName]: createAction(type),\n    [`${typeName}Success`]: createAction(`${type}_SUCCESS`),\n    [`${typeName}Fail`]: createAction(`${type}_FAIL`),\n  }\n};\n\nconst actions: IActions = {\n  ...createAsyncAction('LOGIN'),\n  ...createAsyncAction('GET_USER'),\n  ...createAsyncAction('GET_MESSAGES'),\n  ...createAsyncAction('GET_MORE_MESSAGES'),\n  ...createAsyncAction('SET_USER'),\n  ...createAsyncAction('SEND_MESSAGE'),\n  ...createAsyncAction('SUBSCRIBE'),\n  ...createAsyncAction('UNSUBSCRIBE'),\n  ...createAsyncAction('UPLOAD_FILE'),\n  ...createAsyncAction('SET_ITEM'),\n  ...createAsyncAction('DELETE_ITEM'),\n  ...createAsyncAction('GET_ITEMS'),\n  ...createAsyncAction('GET_ITEMS_BY_ID'),\n  ...createAsyncAction('GET_MORE_ITEMS'),\n  updateLastOnline: createAction('UPDATE_LAST_ONLINE'),\n  logout: createAction('LOGOUT'),\n};\n\nexport default actions;\n","import React from 'react';\nimport { Avatar as AntdAvatar } from 'antd';\nimport { AvatarProps } from 'antd/es/avatar';\nimport { colorFromString, isURL } from \"../helpers/utils\";\n\ninterface IAvatarProps extends AvatarProps {\n  avatar: string;\n  nickname: string;\n}\n\nconst Avatar = (props: IAvatarProps) => {\n  const { avatar, nickname, style, ...rest } = props;\n\n  const _avatar = isURL(avatar) ? avatar : '';\n  return (\n    <AntdAvatar\n      src={_avatar}\n      style={{ ...style, backgroundColor: _avatar ? 'transparent' : colorFromString(nickname) }}\n      {...rest}\n    >\n      {nickname}\n    </AntdAvatar>\n  )\n};\n\nexport default Avatar;\n","import React, { Component } from 'react';\nimport { Modal } from 'antd';\nimport { CloseOutlined } from '@ant-design/icons';\n\nclass Image extends Component<{ src: string }, { visible: boolean }> {\n  state = { visible: false };\n\n  toggleModal = () => {\n    this.setState({\n      visible: !this.state.visible,\n    });\n  };\n\n  render() {\n    const { src } = this.props;\n\n    return (\n      <React.Fragment>\n        <img\n          onClick={this.toggleModal}\n          src={src}\n          alt=\"\"\n          className=\"chat-image\"\n        />\n        <Modal\n          title={\n            <div>\n              <a\n                href={src}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {src}\n              </a>\n              <CloseOutlined onClick={this.toggleModal}/>\n            </div>\n          }\n          className=\"image-modal\"\n          closable={false}\n          footer={null}\n          visible={this.state.visible}\n          onCancel={this.toggleModal}\n          width=\"fit-content\"\n        >\n          <img\n            style={{\n              maxWidth: '90vw',\n            }}\n            src={src}\n            alt=\"\"\n          />\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Image;\n","import React from 'react';\nimport { isURL } from '../../helpers/utils';\nimport { IMessage } from '../../reducers/interfaces';\nimport { importRolls } from '../../helpers/dice';\nimport Image from \"../../components/Image\";\n\ninterface IMessageBodyProps {\n  message: IMessage;\n}\n\nconst MessageBody = (props: IMessageBodyProps) => {\n  const {\n    body,\n    isRP,\n    rolls,\n  } = props.message;\n\n  if (isURL(body)) {\n    if (/\\.(gif|jpe?g|tiff|png|webp|bmp)/ig.test(body)) {\n      return (\n        <Image src={body}/>\n      )\n    }\n\n    if (/youtu/.test(body)) {\n      const videoId = new URL(body).searchParams.get('v') || '';\n\n      return (\n        <iframe\n          title={videoId}\n          id=\"ytplayer\"\n          width=\"100%\"\n          height=\"360\"\n          src={`http://www.youtube.com/embed/${videoId}`}\n          frameBorder=\"0\"\n        />\n      )\n    }\n\n    return (\n      <a\n        href={body}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {body}\n      </a>\n    )\n  }\n\n  const _body = rolls\n    ? importRolls(body, rolls)\n    : body;\n\n  if (isRP) {\n    return (\n      <i className=\"rp-message\">\n        {_body}\n      </i>\n    )\n  }\n\n  return <span>{_body}</span>;\n};\n\nexport default MessageBody;\n","import React from 'react';\nimport { Card, Tooltip } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { IMessage, IUser } from '../../reducers/interfaces';\nimport Avatar from '../../components/Avatar';\nimport MessageBody from './MessageBody';\nimport {\n  getDate,\n  getFullTime,\n  getTime,\n  isOnline\n} from '../../helpers/utils';\n\ninterface IMessageProps {\n  message: IMessage,\n  user: IUser,\n}\n\nconst Message = (props: IMessageProps) => {\n  const {\n    message: {\n      time,\n      grouped,\n      body,\n      mentioned,\n    },\n    user,\n  } = props;\n\n  const title = user && (\n    <Link to={`./${user.uid}/settings`}>\n      <Tooltip\n        title={user.lastOnline ? `Последняя активность: ${getFullTime(user.lastOnline)}` : undefined}\n        placement=\"left\"\n      >\n        <div className={`chat-message__title ${isOnline(user.lastOnline) ? 'online' : ''}`}>\n          <Avatar\n            avatar={user.avatar}\n            nickname={user.nickname}\n          />\n          <div className=\"chat-message__nickname\">\n            {user.nickname || user.uid}\n          </div>\n        </div>\n      </Tooltip>\n    </Link>\n  );\n\n  return (\n    <Card\n      className={`chat-message ${grouped ? 'grouped' : ''} ${mentioned && user && (body.indexOf(`@${user.nickname} `) > -1) ? 'mentioned' : ''}`}\n      title={title}\n      key={time}\n      extra={(\n        <Tooltip title={getDate(time)}>\n          <div className=\"chat-time\">{getTime(time)}</div>\n        </Tooltip>\n      )}\n    >\n      <MessageBody message={props.message}/>\n    </Card>\n  );\n};\n\nexport default Message;\n","import React, {\n  ChangeEvent,\n  Component,\n  KeyboardEvent,\n  ClipboardEvent,\n  DragEvent,\n} from 'react';\nimport { connect } from 'react-redux';\nimport { SendOutlined } from '@ant-design/icons';\nimport {\n  Input,\n  message as notify,\n  Spin,\n} from 'antd';\n\nimport '../../styles/chat.scss';\nimport actions from '../../actions';\nimport { IMessage, IState, IUser, IUsers } from '../../reducers/interfaces';\nimport Message from './Message';\nimport { validateMessage } from \"../../helpers/utils\";\n\ninterface IChatProps {\n  messages: IMessage[],\n  uid: string,\n  loading: boolean,\n  users: IUsers;\n  user: IUser;\n}\n\ninterface IChatState {\n  message: string;\n  sending: boolean;\n}\n\nclass Chat extends Component<IChatProps, IChatState> {\n  state = {\n    message: '',\n    sending: false,\n  };\n\n  componentDidMount = () => {\n    actions.getMessages({});\n    actions.subscribe({});\n    this.setState({ message: localStorage.getItem('message') || '' });\n  };\n\n  componentWillUnmount = () => {\n    actions.unsubscribe({});\n  };\n\n  componentDidUpdate = (prevProps: IChatProps) => {\n    const { messages, users } = this.props;\n\n    if (this.state.sending && prevProps.messages !== messages) {\n      localStorage.setItem('message', '');\n      this.setState({\n        message: '',\n        sending: false,\n      });\n    }\n\n    messages.forEach((m: IMessage) => {\n      if (!users[m.author]) {\n        actions.getUser({ uid: m.author });\n      }\n    });\n  };\n\n  onChangeMessage = (event: ChangeEvent<HTMLTextAreaElement>) => {\n    const message = event.target.value;\n    localStorage.setItem('message', message);\n    this.setState({ message });\n  };\n\n  onKeyDown = (event: KeyboardEvent<HTMLTextAreaElement>) => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n\n      this.onSendMessage();\n    }\n\n    const { uid } = this.props;\n    if (event.key === 'Up' || event.key === 'ArrowUp') {\n      const message = this.props.messages.find((m: IMessage) => m.author === uid);\n      if (message) {\n        const { currentTarget: { value, selectionStart } } = event;\n        if (value.substr(0, selectionStart).split('\\n').length === 1) {\n          const { body } = message;\n          localStorage.setItem('message', body);\n          this.setState({ message: body });\n        }\n      }\n    }\n  };\n\n  onSendMessage = () => {\n    const { message } = this.state;\n    const { user, loading, uid } = this.props;\n\n    if (loading) {\n      return;\n    }\n\n    if (!user) {\n      notify.error('Данные о пользователе отсутствуют');\n      return;\n    }\n\n    if (!user.nickname) {\n      notify.error('Никнейм не установлен. Пройдите в настройки и назовите себя');\n      return;\n    }\n\n    if (!validateMessage(message)) {\n      return;\n    }\n\n    this.setState({ sending: true });\n    actions.sendMessage({\n      uid,\n      message,\n    });\n  };\n\n  getMoreMessages = () => {\n    actions.getMoreMessages({ firstMessage: this.props.messages[this.props.messages.length - 1] })\n  };\n\n  onScroll = (event: React.UIEvent<HTMLDivElement, UIEvent>) => {\n    if (event.currentTarget.scrollTop <= 50) {\n      event.preventDefault();\n      this.getMoreMessages();\n    }\n  };\n\n  uploadFile = (file: File, event: ClipboardEvent<HTMLTextAreaElement> | DragEvent<HTMLTextAreaElement>) => {\n    const { uid } = this.props;\n    if (file) {\n      if (file.type.indexOf('image') > -1) {\n        actions.uploadFile({ uid: uid, file });\n      } else {\n        notify.error('Только картинки могут быть загружены');\n      }\n      event.preventDefault();\n    }\n  };\n\n  onPaste = (e: ClipboardEvent<HTMLTextAreaElement>) => {\n    this.uploadFile(e.clipboardData.files[0], e)\n  };\n\n  onDrop = (e: DragEvent<HTMLTextAreaElement>) => {\n    const file = e.dataTransfer.items[0].getAsFile();\n    if (file)\n      this.uploadFile(file, e)\n  };\n\n  render = () => {\n    const { messages, loading, users } = this.props;\n\n    return (\n      <Spin spinning={loading}>\n        <div className={`chat-wrapper`}>\n          <div\n            className=\"chat-body\"\n            onScroll={this.onScroll}\n          >\n            {messages.map((m: IMessage) => (\n              <Message\n                key={m.time}\n                message={m}\n                user={users[m.author]}\n              />\n            ))}\n          </div>\n          <div className=\"chat-controls\">\n            <Input.TextArea\n              placeholder=\"Введите сообщение\"\n              autoSize={{ minRows: 1, maxRows: 10 }}\n              onChange={this.onChangeMessage}\n              onKeyDown={this.onKeyDown}\n              value={this.state.message}\n              onPaste={this.onPaste}\n              onDrop={this.onDrop}\n            />\n            <SendOutlined\n              onClick={this.onSendMessage}\n            />\n          </div>\n        </div>\n      </Spin>\n    )\n  }\n}\n\nconst mapStateToProps = (state: IState) => {\n  const { messages, uid, loading, users } = state;\n\n  return {\n    messages,\n    uid,\n    loading,\n    users,\n    user: users[uid]\n  };\n};\n\nexport default connect(mapStateToProps)(Chat);\n","import React from 'react';\n\nexport default () => (\n  <svg viewBox=\"64 64 896 896\" focusable=\"false\" className=\"anticon-spin\" data-icon=\"sync\" width=\"1em\" height=\"1em\"\n       fill=\"#ff4d4f\" aria-hidden=\"true\">\n    <path d=\"M168 504.2c1-43.7 10-86.1 26.9-126 17.3-41 42.1-77.7 73.7-109.4S337 212.3 378 195c42.4-17.9 87.4-27 133.9-27s91.5 9.1 133.8 27A341.5 341.5 0 01755 268.8c9.9 9.9 19.2 20.4 27.8 31.4l-60.2 47a8 8 0 003 14.1l175.7 43c5 1.2 9.9-2.6 9.9-7.7l.8-180.9c0-6.7-7.7-10.5-12.9-6.3l-56.4 44.1C765.8 155.1 646.2 92 511.8 92 282.7 92 96.3 275.6 92 503.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8zm756 7.8h-60c-4.4 0-7.9 3.5-8 7.8-1 43.7-10 86.1-26.9 126-17.3 41-42.1 77.8-73.7 109.4A342.45 342.45 0 01512.1 856a342.24 342.24 0 01-243.2-100.8c-9.9-9.9-19.2-20.4-27.8-31.4l60.2-47a8 8 0 00-3-14.1l-175.7-43c-5-1.2-9.9 2.6-9.9 7.7l-.7 181c0 6.7 7.7 10.5 12.9 6.3l56.4-44.1C258.2 868.9 377.8 932 512.2 932c229.2 0 415.5-183.7 419.8-411.8a8 8 0 00-8-8.2z\"/>\n  </svg>\n);\n","import React from 'react';\n\nexport default () => (\n  <svg viewBox=\"64 64 896 896\" focusable=\"false\" className=\"\" data-icon=\"check-circle\" width=\"1em\" height=\"1em\"\n       fill=\"currentColor\" aria-hidden=\"true\">\n    <path\n      d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\"\n      fill=\"#52c41a\"/>\n    <path\n      d=\"M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm193.4 225.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.3 0 19.9 5 25.9 13.3l71.2 98.8 157.2-218c6-8.4 15.7-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.4 12.7z\"\n      fill=\"transparent\"/>\n    <path\n      d=\"M699 353h-46.9c-10.2 0-19.9 4.9-25.9 13.3L469 584.3l-71.2-98.8c-6-8.3-15.6-13.3-25.9-13.3H325c-6.5 0-10.3 7.4-6.5 12.7l124.6 172.8a31.8 31.8 0 0051.7 0l210.6-292c3.9-5.3.1-12.7-6.4-12.7z\"\n      fill=\"#52c41a\"/>\n  </svg>\n);\n","import React from 'react';\n\nimport LoadIcon from './LoadIcon';\nimport CheckIcon from './CheckIcon';\n\nconst Loader = (props: { loading: boolean }) => {\n  const { loading } = props;\n\n  return (\n    <div className=\"loader\">\n      {loading\n        ? (\n          <LoadIcon/>\n        ) : (\n          <CheckIcon/>\n        )\n      }\n    </div>\n  )\n};\n\nexport default Loader;\n","import React, { ChangeEvent } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Card,\n  Input,\n  Button,\n  Popconfirm,\n} from 'antd';\nimport { RouteComponentProps } from 'react-router';\n\nimport { ClearOutlined } from '@ant-design/icons';\n\nimport actions from '../../actions/index';\nimport { defaultUser } from '../../reducers/index';\nimport { IState, IUser } from '../../reducers/interfaces';\nimport Avatar from '../../components/Avatar';\nimport Loader from '../../components/Loader/index';\nimport { getFullTime } from \"../../helpers/utils\";\n\ninterface ISettingsProps extends RouteComponentProps {\n  loading: boolean;\n  user: IUser | null;\n  hasRight: boolean;\n  uid: string;\n}\n\nexport class Settings extends React.Component<ISettingsProps> {\n  componentDidMount = () => {\n    const { user, uid } = this.props;\n    if (!user) {\n      actions.getUser({ uid });\n    }\n  };\n\n  onChange = (field: string) => (event: ChangeEvent<HTMLInputElement>) => {\n    const { user } = this.props;\n    if (!user) return;\n\n    const newSettings = {\n      ...user,\n      [field]: event.target.value,\n    };\n\n    this.setSettings(newSettings);\n  };\n\n  setSettings = (newSettings: {}) => {\n    const { user } = this.props;\n    if (user) {\n      actions.setUser({\n        uid: user.uid,\n        user: newSettings,\n      });\n    }\n  };\n\n  clearAvatar = () => this.setSettings({\n    ...this.props.user,\n    avatar: '',\n  });\n\n  getField = (key: string, value: string, user: IUser) => {\n    const { nickname = '' } = user;\n    const { hasRight } = this.props;\n    const disabled = !hasRight;\n\n    switch (key) {\n      case 'avatar':\n        return (\n          <div>\n            <div style={{ display: 'flex' }}>\n              <Input\n                value={value}\n                onChange={this.onChange(key)}\n                readOnly={disabled}\n              />\n              <Popconfirm\n                title=\"Очистить аватар?\"\n                onConfirm={this.clearAvatar}\n                okText=\"Да\"\n                cancelText=\"Нет\"\n                icon={<ClearOutlined style={{ color: '#ff4d4f' }}/>}\n                disabled={!value}\n              >\n                <Button\n                  disabled={disabled || !value}\n                  danger\n                >\n                  <ClearOutlined/>\n                </Button>\n              </Popconfirm>\n            </div>\n            <Avatar\n              avatar={value}\n              nickname={nickname}\n              size={128}\n              style={{ margin: '8px auto', display: 'block' }}\n            />\n          </div>\n        );\n\n      case 'uid':\n        return (\n          <Input\n            value={value}\n            readOnly\n          />\n        );\n\n      case 'lastOnline':\n        return (\n          <Input\n            value={getFullTime(parseInt(value))}\n            readOnly\n          />\n        );\n\n      default:\n        return (\n          <Input\n            defaultValue={value}\n            onChange={this.onChange(key)}\n            readOnly={disabled}\n          />\n        )\n    }\n  };\n\n  labels: { [key: string]: string } = {\n    'avatar': 'Аватар',\n    'nickname': 'Никнейм',\n    'lastOnline': 'Последняя активность',\n    'uid': 'UID',\n  };\n\n  render = () => {\n    const { user, loading } = this.props;\n\n    return (\n      <Card\n        className=\"settings\"\n        bordered={false}\n        loading={user === undefined}\n      >\n        <Loader loading={loading}/>\n        {user && Object\n          .keys(defaultUser)\n          .map((key: string) => (\n            <Card\n              className={key}\n              key={key}\n              title={this.labels[key]}\n            >\n              {\n                // @ts-ignore\n                this.getField(key, `${user[key] || ''}`, user)\n              }\n            </Card>\n          ))\n        }\n      </Card>\n    )\n  }\n}\n\nconst mapStateToProps = (state: IState, props: ISettingsProps) => {\n  const { loading, users, currentUser } = state;\n\n  const uid = new URLSearchParams(props.match.params).get('uid') || state.uid || '0';\n  const user = users[uid];\n  if (user && !user.uid && uid) {\n    user.uid = uid;\n  }\n\n  return {\n    loading,\n    user,\n    uid,\n    hasRight: (!!user && !!currentUser) && (currentUser.uid === user.uid || !!currentUser.isAdmin),\n  };\n};\n\nexport default connect(mapStateToProps)(Settings);\n","import React from 'react';\nimport { Button, Avatar, Card } from 'antd';\n\nimport actions from '../actions/index';\n\nconst byeLink = 'https://cdn.lowgif.com/full/fc3d7d9abd06a92e-hi-bear-gifs-get-the-best-gif-on-giphy.gif';\n\nconst Logout = () => {\n  return (\n    <Card>\n      <Avatar\n        src={byeLink}\n        size={256}\n        style={{ margin: '0 auto', display: 'block' }}\n      />\n      <br/>\n      <br/>\n      <Button\n        type=\"primary\"\n        size=\"large\"\n        onClick={() => actions.logout({ })}\n        style={{ width: '100%' }}\n      >\n        Выйти\n      </Button>\n    </Card>\n  )\n};\n\nexport default Logout;\n","import { IRoll } from \"../helpers/dice\";\n\nexport interface IAction {\n  type: string;\n\n  [key: string]: any; // Payload could be any type or size\n}\n\nexport interface IMessage {\n  author: string;\n  time: number;\n  body: string;\n  // Remove header and top margin of message, because author is the same\n  grouped?: boolean;\n  isCommand?: boolean;\n  isRP?: boolean;\n  commandResult?: string;\n  mentioned?: boolean;\n  rolls?: IRoll[];\n}\n\nexport interface IState {\n  userData: IUser | null;\n  isLoggedIn: boolean;\n  settings: IUser | false;\n  loading: boolean;\n  messages: IMessage[];\n  users: IUsers;\n  uid: string;\n  currentUser: IUser | null;\n  items: IItem[];\n  error: Error | false;\n}\n\nexport interface IUser {\n  nickname: string;\n  avatar: string;\n  uid: string,\n  lastOnline: number;\n  isAdmin?: boolean;\n}\n\nexport interface IUsers {\n  [key: string]: IUser;\n}\n\nexport interface IItem {\n  id: string;\n  name: string;\n  weight: number;\n  time: number;\n  effect: string;\n  image: string;\n  description: string;\n  price: number;\n  capacity: number;\n  armor: number;\n  amount: number;\n  approved: boolean;\n  author?: string;\n  type: 'weapon' | 'consumable' | 'wearable' | 'junk' | 'ammo' | 'note' | 'key' | 'misc',\n}\n\nexport const defaultItem: IItem = {\n  id: '',\n  type: 'junk',\n  name: '',\n  effect: '',\n  image: '',\n  weight: 0,\n  price: 0,\n  description: '',\n  capacity: 0,\n  approved: false,\n  armor: 0,\n  time: 0,\n  amount: 0,\n};\n","import React, { ChangeEvent, Component } from 'react';\nimport {\n  Card,\n  Input,\n  InputNumber,\n  Button,\n  Popconfirm,\n  message as notify,\n  Modal,\n  Select,\n} from 'antd';\nimport { ClearOutlined, CloseOutlined } from '@ant-design/icons';\n\nimport { defaultItem, IItem } from '../../reducers/interfaces';\nimport Avatar from '../../components/Avatar';\n\ninterface IItemCreatorProps {\n  onSubmit: (item: IItem) => void;\n  onClose: () => void;\n  visible: boolean;\n  item?: IItem;\n}\n\nclass ItemCreator extends Component<IItemCreatorProps, IItem> {\n  state = defaultItem;\n\n  labels = {\n    id: 'ID',\n    type: 'Тип*',\n    name: 'Название*',\n    weight: 'Вес',\n    effect: 'Эффект',\n    image: 'Картинка',\n    description: 'Описание',\n    price: 'Цена',\n    capacity: 'Размер магазина',\n    armor: 'Защита',\n    amount: 'Количество',\n  };\n\n  types = [\n    {\n      key: 'weapon',\n      value: 'Оружие',\n    },\n    {\n      key: 'wearable',\n      value: 'Одежда/Броня',\n    },\n    {\n      key: 'consumable',\n      value: 'Употребляемое',\n    },\n    {\n      key: 'ammo',\n      value: 'Патроны',\n    },\n    {\n      key: 'misc',\n      value: 'Прочее',\n    },\n    {\n      key: 'note',\n      value: 'Записка',\n    },\n    {\n      key: 'key',\n      value: 'Ключ',\n    },\n    {\n      key: 'junk',\n      value: 'Мусор',\n    },\n  ];\n\n  onChange = (key: string, value: string | boolean | number) =>\n    // @ts-ignore\n    this.setState({ [key]: value });\n\n  clearImage = () =>\n    this.setState({ image: '' });\n\n  fields = {\n    id: () => false,\n    type: (value: string, key: string) => (\n      <Select\n        value={value}\n        onChange={(value: string) => this.onChange(key, value)}\n      >\n        {this.types.map(({ key, value }) => (\n          <Select.Option value={key} key={key}>\n            {value}\n          </Select.Option>\n        ))}\n      </Select>\n    ),\n    name: (value: string, key: string) => (\n      <Input\n        value={value}\n        onChange={(e: ChangeEvent<HTMLInputElement>) => this.onChange(key, e.currentTarget.value)}\n      />\n    ),\n    weight: (value: number, key: string) => (\n      <InputNumber\n        value={value}\n        min={0}\n        precision={1}\n        onChange={(value?: number) => this.onChange(key, value || 0)}\n        step={0.1}\n      />\n    ),\n    effect: (value: string, key: string) => (\n      <Input\n        value={value}\n        onChange={(e: ChangeEvent<HTMLInputElement>) => this.onChange(key, e.currentTarget.value)}\n      />\n    ),\n    image: (value: string, key: string) => (\n      <div>\n        <div style={{ display: 'flex' }}>\n          <Input\n            value={value}\n            onChange={(e: ChangeEvent<HTMLInputElement>) => this.onChange(key, e.currentTarget.value)}\n          />\n          <Popconfirm\n            title=\"Очистить картинку?\"\n            onConfirm={this.clearImage}\n            okText=\"Да\"\n            cancelText=\"Нет\"\n            icon={<ClearOutlined style={{ color: '#ff4d4f' }}/>}\n          >\n            <Button\n              disabled={!value}\n              danger\n            >\n              <ClearOutlined/>\n            </Button>\n          </Popconfirm>\n        </div>\n        <Avatar\n          shape=\"square\"\n          avatar={value}\n          nickname={value}\n          size={128}\n          style={{ margin: '8px auto', display: 'block' }}\n        />\n      </div>\n    ),\n    description: (value: string, key: string) => (\n      <Input.TextArea\n        value={value}\n        onChange={(e: ChangeEvent<HTMLTextAreaElement>) => this.onChange(key, e.currentTarget.value)}\n      />\n    ),\n    price: (value: number, key: string) => (\n      <InputNumber\n        value={value}\n        min={0}\n        step={1}\n        onChange={(value?: number) => this.onChange(key, value || 0)}\n      />\n    ),\n    capacity: (value: number, key: string, item: IItem) => (\n      item.type === 'weapon' && <InputNumber\n        value={value}\n        min={1}\n        step={1}\n        onChange={(value?: number) => this.onChange(key, value || 1)}\n      />\n    ),\n    armor: (value: number, key: string, item: IItem) => (\n      item.type === 'wearable' && <InputNumber\n        value={value}\n        min={0}\n        step={1}\n        onChange={(value?: number) => this.onChange(key, value || 0)}\n      />\n    ),\n    amount: (value: number, key: string, item: IItem) => (\n      item.type === 'ammo' && <InputNumber\n        value={value}\n        min={0}\n        step={1}\n        onChange={(value?: number) => this.onChange(key, value || 0)}\n      />\n    ),\n  };\n\n  getField = (key: string, value: string | number | boolean, item: IItem) => {\n    // @ts-ignore\n    const field = this.fields[key];\n    return field && field(value, key, item);\n  };\n\n  onSubmit = () => {\n    const { state } = this;\n    const { onSubmit, item = {} } = this.props;\n\n    const newItem: IItem = { ...state };\n    Object.keys(state).forEach((key: string) =>\n      // @ts-ignore\n      // eslint-disable-next-line\n      newItem[key] = newItem[key] === defaultItem[key] && item[key] || (newItem[key])\n    );\n\n    if (!newItem.name) {\n      notify.error('Имя не может быть пустым')\n    }\n\n    onSubmit(newItem);\n    this.setState(defaultItem);\n  };\n\n  content = () => {\n    const { state } = this;\n    const { item = {} } = this.props;\n\n    return (\n      <div className=\"item-creator\">\n        <div className=\"item-creator__body\">\n          {Object\n            .keys(defaultItem)\n            .map((key: string) => {\n                // @ts-ignore\n                // eslint-disable-next-line\n                const value = state[key] === defaultItem[key] && item[key] || (state[key]);\n                const field = this.getField(key, value, state);\n                return field && (\n                  <Card\n                    className={key}\n                    key={key}\n                    // @ts-ignore\n                    title={this.labels[key]}\n                  >\n                    {field}\n                  </Card>\n                )\n              }\n            )\n          }\n        </div>\n        <div className=\"item-creator__controls\">\n          <Popconfirm\n            title=\"Все данные будут обнулены\"\n            onConfirm={() => this.setState(defaultItem)}\n            okText=\"Очистить\"\n            cancelText=\"Отмена\"\n            icon={<ClearOutlined style={{ color: '#ff4d4f' }}/>}\n          >\n            <Button>\n              Очистить\n            </Button>\n          </Popconfirm>\n          <Popconfirm\n            title=\"Подтвердить изменения?\"\n            onConfirm={this.onSubmit}\n            okText=\"Готово\"\n            cancelText=\"Отмена\"\n            icon={<ClearOutlined style={{ color: '#15395b' }}/>}\n          >\n            <Button>\n              Готово\n            </Button>\n          </Popconfirm>\n        </div>\n      </div>\n    )\n  };\n\n  render = () => {\n    const { onClose, visible } = this.props;\n\n    return (\n      <Modal\n        className=\"item-creator-modal\"\n        centered\n        closable={false}\n        onCancel={onClose}\n        footer={null}\n        visible={visible}\n        title={\n          <CloseOutlined onClick={onClose}/>\n        }\n      >\n        {this.content()}\n      </Modal>\n    )\n  }\n}\n\nexport default ItemCreator;\n","import React, { Component } from 'react';\nimport { Card } from 'antd';\n\nimport '../styles/item.scss';\nimport { IItem } from '../reducers/interfaces';\nimport Avatar from \"./Avatar\";\n\ninterface IItemProps {\n  item: IItem,\n  showTechInfo?: boolean,\n  footer?: JSX.Element,\n}\n\nclass Item extends Component<IItemProps> {\n  getStats = () => {\n    const { type, armor, amount, capacity } = this.props.item;\n\n    switch (type) {\n      case 'wearable':\n        return armor;\n\n      case 'ammo':\n        return amount;\n\n      case 'weapon':\n        return capacity;\n\n      default:\n        return false;\n    }\n  };\n\n  labels = {\n    wearable: 'Защита',\n    ammo: 'Кол-во',\n    weapon: 'Магазин',\n  };\n\n  render = () => {\n    const {\n      name = this.props.item.id,\n      price = 0,\n      description,\n      image,\n      effect,\n      weight = 0,\n      type,\n    } = this.props.item;\n    const { footer } = this.props;\n\n    const stats = this.getStats();\n    return (\n      <Card className=\"item\">\n        <div className=\"item-info\">\n          <div className=\"item-name\">{name}</div>\n          <div className=\"item-subinfo\">\n            <div className=\"item-price\">\n              Цена: {price}\n            </div>\n            <div className=\"item-weight\">\n              Вес: {weight}lb\n            </div>\n          </div>\n        </div>\n        {(image || description) && (\n          <div className=\"item-body\">\n            {image && <div className=\"item-image\">\n              <Avatar avatar={image} nickname={name} shape=\"square\"/>\n            </div>}\n            {description}\n          </div>\n        )}\n\n        {(stats || effect) && (\n          <div className=\"item-prefooter\">\n            <div className=\"item-ammo\">\n              {\n                // @ts-ignore\n                stats ? `${this.labels[type]}: ${stats}` : ''\n              }\n            </div>\n            <div className=\"item-effect\">{effect}</div>\n          </div>\n        )}\n        {footer && (\n          <div className=\"item-footer\">\n          {footer}\n          </div>\n        )}\n      </Card>\n    )\n  }\n}\n\nexport default Item;\n","import React, { Component } from 'react';\nimport {\n  Dropdown,\n  Menu,\n  Button,\n  Modal,\n  Empty,\n} from 'antd';\nimport { InsertRowBelowOutlined } from '@ant-design/icons';\n\nimport { IItem, IUser } from '../../reducers/interfaces';\nimport actions from '../../actions';\nimport Item from '../../components/Item';\n\ninterface IItemsListProps {\n  items: IItem[];\n  uid: string;\n  currentUser: IUser | null;\n  toggleEditingItem: (item: IItem) => void;\n}\n\nclass ItemsList extends Component<IItemsListProps> {\n  getControls = (item: IItem) => (\n    <Menu>\n      <Menu.Item>\n        <Button>\n          Взять\n        </Button>\n      </Menu.Item>\n      <Menu.Item>\n        <Button onClick={() => this.props.toggleEditingItem(item)}>\n          Редактировать\n        </Button>\n      </Menu.Item>\n      <Menu.Item>\n        <Button onClick={this.deleteModal(item)}>\n          Удалить\n        </Button>\n      </Menu.Item>\n    </Menu>\n  );\n\n  getFooter = (item: IItem) => (\n    <Dropdown\n      overlay={this.getControls(item)}\n      trigger={['click']}\n    >\n      <Button>\n        <InsertRowBelowOutlined/>\n      </Button>\n    </Dropdown>\n  );\n\n  deleteModal = (item: IItem) => () => Modal.confirm({\n    title: 'Удалить',\n    content: 'Это действие невозможно отменить. Вы уверены?',\n    maskClosable: true,\n    okText: 'Удалить',\n    cancelText: 'Отмена',\n    onOk: (close) => {\n      actions.deleteItem({ id: item.id });\n      close();\n    }\n  });\n\n  canControl = (item: IItem) => {\n    const { uid, currentUser } = this.props;\n    return uid === item.author || (currentUser && currentUser.isAdmin);\n  };\n\n  render = () => {\n    const { items } = this.props;\n\n    if (!items || items.length === 0) {\n      return (\n        <Empty description=\"Нет предметов\"/>\n      )\n    }\n\n    return (\n      <div className=\"items-body\">\n        {items.map((item: IItem) => (\n          <Item\n            key={item.id + item.time}\n            item={item}\n            footer={this.canControl(item) ? this.getFooter(item) : undefined}\n          />\n        ))}\n      </div>\n    )\n  }\n}\n\nexport default ItemsList;\n","import React, { ChangeEvent } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Button,\n  Card,\n  Input,\n  Radio,\n  Dropdown,\n} from 'antd';\nimport { RadioChangeEvent } from 'antd/lib/radio';\nimport { RouteComponentProps } from 'react-router';\nimport { FilterOutlined } from '@ant-design/icons';\n\nimport '../../styles/items.scss';\nimport actions from '../../actions';\nimport { IItem, IState, IUser } from '../../reducers/interfaces';\nimport Loader from '../../components/Loader';\nimport ItemCreator from './ItemCreator';\nimport ItemsList from './ItemsList';\n\ninterface IItemsProps extends RouteComponentProps {\n  loading: boolean;\n  user: IUser | null;\n  uid: string;\n  items: IItem[];\n  currentUser: IUser | null;\n}\n\ninterface IItemsState {\n  creatingItem: boolean;\n  editingItem: IItem | null;\n  searchString: string;\n  filter: 'weapon' | 'consumable' | 'wearable' | 'junk' | 'ammo' | 'note' | 'key' | 'misc' | undefined;\n}\n\nexport class Items extends React.Component<IItemsProps, IItemsState> {\n  state = {\n    creatingItem: false,\n    editingItem: null,\n    searchString: '',\n    filter: undefined,\n  };\n\n  get items() {\n    const { searchString, filter } = this.state;\n\n    const _searchString = searchString.toLowerCase();\n    return this\n      .props\n      .items\n      .filter((item: IItem) => {\n        const { name, description, effect } = item;\n        return (\n          (name && name.toLowerCase().indexOf(_searchString) > -1)\n          || (description && description.toLowerCase().indexOf(_searchString) > -1)\n          || (effect && effect.toLowerCase().indexOf(_searchString) > -1)\n        )\n      })\n      .filter((item: IItem) =>\n        !filter || !item.type || item.type === filter\n      );\n  }\n\n  componentDidMount = () => {\n    actions.getItems({});\n  };\n\n  toggleCreatingItem = (creatingItem: boolean = !this.state.creatingItem) =>\n    this.setState({ creatingItem });\n\n  toggleEditingItem = (item?: IItem | null) =>\n    this.setState({ editingItem: item || null });\n\n  onCreateItem = (item: IItem) => {\n    actions.setItem({ item });\n    this.toggleCreatingItem(false);\n    this.toggleEditingItem(null);\n  };\n\n  getCreators = () => {\n    const { creatingItem, editingItem } = this.state;\n\n    return (\n      <>\n        <ItemCreator\n          visible={creatingItem}\n          onClose={() => this.toggleCreatingItem(false)}\n          onSubmit={this.onCreateItem}\n        />\n        <ItemCreator\n          visible={!!editingItem}\n          onClose={() => this.toggleEditingItem(null)}\n          onSubmit={this.onCreateItem}\n          item={editingItem || undefined}\n        />\n      </>\n    )\n  };\n\n  onFilterChange = (e: RadioChangeEvent) =>\n    this.setState({ filter: e.target.value });\n\n  // filter: 'weapon' | 'consumable' | 'wearable' | 'junk' | 'ammo' | 'note' | 'key' | 'misc' | undefined;\n  getFilters = () => {\n    return (\n      <Radio.Group\n        onChange={this.onFilterChange}\n        defaultValue={undefined}\n        style={{ display: 'flex', flexDirection: 'column' }}\n      >\n        <Radio.Button>Всё</Radio.Button>\n        <Radio.Button value=\"weapon\">Оружие</Radio.Button>\n        <Radio.Button value=\"consumable\">Употребляемое</Radio.Button>\n        <Radio.Button value=\"wearable\">Одежда/Броня</Radio.Button>\n        <Radio.Button value=\"junk\">Мусор</Radio.Button>\n        <Radio.Button value=\"note\">Записки</Radio.Button>\n        <Radio.Button value=\"key\">Ключи</Radio.Button>\n        <Radio.Button value=\"misc\">Прочее</Radio.Button>\n      </Radio.Group>\n    )\n  };\n\n  getControls = () => {\n    const { currentUser } = this.props;\n\n    return (\n      <div className=\"items-controls\">\n        <Button\n          onClick={() => this.toggleCreatingItem(true)}\n          disabled={!currentUser || !currentUser.isAdmin}\n        >\n          Создать предмет\n        </Button>\n        <Input\n          placeholder=\"Поиск предмета\"\n          onChange={(e: ChangeEvent<HTMLInputElement>) => this.setState({ searchString: e.currentTarget.value })}\n          allowClear\n        />\n        <Dropdown\n          overlay={this.getFilters()}\n          trigger={['click']}\n        >\n          <Button>\n            <FilterOutlined/>\n          </Button>\n        </Dropdown>\n      </div>\n    )\n  };\n\n  render = () => {\n    const { loading, currentUser, uid } = this.props;\n\n    return (\n      <Card className=\"items\">\n        <Loader loading={loading}/>\n        {this.getCreators()}\n        {this.getControls()}\n        <ItemsList\n          items={this.items}\n          uid={uid}\n          currentUser={currentUser}\n          toggleEditingItem={this.toggleEditingItem}\n        />\n      </Card>\n    )\n  }\n}\n\nconst mapStateToProps = (state: IState) => {\n  const { loading, currentUser, uid, items } = state;\n\n  return {\n    loading,\n    currentUser,\n    uid,\n    items,\n  };\n};\n\nexport default connect(mapStateToProps)(Items);\n","import { ConnectedComponent } from 'react-redux';\n\nimport Chat from '../containers/Chat/index';\nimport Settings from '../containers/Settings';\nimport Logout from '../components/Logout';\nimport Items from '../containers/Items';\nimport Help from '../components/Help';\n\nexport interface IRoute {\n  path: string;\n  component: ConnectedComponent<any, any> | (() => JSX.Element);\n  exact?: boolean;\n}\n\nconst routes: IRoute[] = [\n  {\n    path: '/text-roleplay/chat',\n    component: Chat,\n  },\n  {\n    path: '/text-roleplay/:uid/settings',\n    component: Settings,\n    exact: true,\n  },\n  {\n    path: '/text-roleplay/settings',\n    component: Settings,\n    exact: true,\n  },\n  {\n    path: '/text-roleplay/items',\n    component: Items,\n  },\n  {\n    path: '/text-roleplay/help',\n    component: Help,\n  },\n  {\n    path: '/text-roleplay/logout',\n    component: Logout,\n  },\n];\n\nexport default routes;\n","import React from 'react';\nimport { Card } from 'antd';\n\nexport default () => (\n  <Card>\n    Чат для текстовой ролевой игры. Инвентарь, управление чатом, настройки персонажа, профиля.\n    <br/><br/>\n    <h1>Возможности</h1>\n    <pre>\n      - Отправлять в чат картинки из буфера обмена (ctrl + v) либо перетаскивая в поле ввода<br/>\n      - Увеличение картинки<br/>\n      - Вставка ссылок<br/>\n      - Вставка YouTube видео (полная ссылка, не youtu.be)<br/>\n      - Броски дайсов<br/>\n      - Кол-во дайсов в первой цифре. Не больше 10<br/>\n      - Буква \"д\" или \"d\" вторым символом<br/>\n      - Размер дайса во второй цифре. Только размера 4 6 8 10 12 и 20<br/>\n      - Примеры: 1д10, 2д20, 9d4<br/>\n      - При неправильном дайсе сообщение не будет отправлено<br/>\n      - Дайс можно писать в любом месте сообщения и сколько угодно раз<br/>\n      - При наведении на брошенный дайс можно увидеть полный результат<br/>\n      - Крит попадания и промахи слегка подсвечиваются зеленым и красным соответственно<br/>\n      - РП сообщение, если первым символом написать \"*\"<br/>\n      - Игроки онлайн имеют синюю обводку вокруг аватара<br/>\n      - При наведении на игрока показывается последний онлайн<br/>\n      - При клике на игрока открывается страница настроек<br/>\n      - Админы могут редактировать настройки других игроков<br/>\n      - Настройки имени и аватара<br/>\n      - Настройки применяются сразу после изменения (даже в процессе редактирования)<br/>\n      - Все пользователи видят изменения<br/>\n      - При наведении на время сообщения показывается его дата<br/>\n      - Сообщения от одного автора сгруппированы<br/>\n      - Предметы (создание, удаление, редактирование)<br/>\n      - Только админ может создавать предметы<br/>\n      - Удалять и редактировать можно только предметы созданные тобой же, либо если админ<br/>\n      - Фильтр по типу предмета<br/>\n      - Поиск одновременно по названию, описанию и эффекту предметов<br/>\n      -<br/>\n    </pre>\n\n    <h1>Баги/ошибки/исправления</h1>\n    <pre>\n      - Нет поддержки всех типов ссылок на Ютуб<br/>\n      - Изменить крит попадание на синий (цветовая схема)<br/>\n      - Решить, как попасть на чужую страницу инвентаря<br/>\n      - Сделать регистрацию с подтверждением аккаунта от админа<br/>\n      - Сделать lazy loading для подгрузки проекта только после регистрации<br/>\n      - Lazy loading для каждой основной страницы<br/>\n      - Нужна кнопка быстрого скролла в низ чата<br/>\n      - Ограничить кол-во дайсов на одно сообщение<br/>\n      - Не показывать детали дайса, если брошен только один<br/>\n      - Загрузка аватара через буфер обмена<br/>\n      - Добавить подтверждение к отправке картинки<br/>\n      - Порезать контейнеры на файлы поменьше<br/>\n      - Добавить возможность создавать предметы не админом, а потом админ подтверждает предмет<br/>\n      - Подгрузка предметов <br/>\n      - Выбор кол-ва предметов на страницу <br/>\n    </pre>\n\n    <h1>Todo</h1>\n    <pre>\n      - Inventory page (give, show, create, remove items)<br/>\n      - Character page<br/>\n      - Local Notes<br/>\n      - Global notes<br/>\n      - Drawing<br/>\n      -<br/>\n    </pre>\n  </Card>\n)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Form,\n  Input,\n  Button,\n  Card,\n  Alert,\n} from 'antd';\n\nimport actions from '../actions/index';\nimport { IState } from \"../reducers/interfaces\";\n\ninterface ILoginProps {\n  loading: boolean;\n  error: Error | false;\n}\n\nconst Login = (props: ILoginProps) => {\n  const { error, loading } = props;\n\n  return (\n    <Card loading={loading}>\n      <Form\n        onFinish={(values) => actions.login(values)}\n      >\n        <Form.Item\n          label=\"Email\"\n          name=\"email\"\n          rules={[{ required: true, message: 'Введите e-mail!' }]}\n        >\n          <Input/>\n        </Form.Item>\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[{ required: true, message: 'Введите пароль!' }]}\n        >\n          <Input.Password/>\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n          >\n            Войти\n          </Button>\n        </Form.Item>\n      </Form>\n      {error && (\n        <Alert\n          type=\"error\"\n          message={error.message}\n        />\n      )}\n    </Card>\n  );\n};\n\nconst mapStateToProps = (state: IState) => {\n  const { loading, error } = state;\n\n  return { loading, error };\n};\n\nexport default connect(mapStateToProps)(Login);\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport routes, { IRoute } from '../configs/routes';\nimport Login from './Login';\nimport { IState } from '../reducers/interfaces';\n\ninterface IRouterProps {\n  isLoggedIn: boolean;\n}\n\nfunction Router(props: IRouterProps) {\n  if (!props.isLoggedIn) {\n    return (\n      <Switch>\n        <Route\n          path=\"*\"\n          component={Login}\n        />\n      </Switch>\n    )\n  }\n\n  return (\n    <Switch>\n      {\n        routes.map((value: IRoute) =>\n          <Route\n            key={value.path}\n            path={value.path}\n            component={value.component}\n            exact={value.exact || false}\n          />\n        )\n      }\n      <Redirect to=\"/text-roleplay/chat\"/>\n    </Switch>\n  );\n}\n\nexport default connect((state: IState) => ({ isLoggedIn: state.isLoggedIn }))(Router);\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'antd/dist/antd.css';\n\nimport Menu from './components/Menu';\nimport Router from './components/Router';\n\nimport './App.css';\nimport './styles/antd-dark.scss';\nimport './styles/components.scss';\nimport { listenForActivity } from './helpers/utils';\n\nfunction App() {\n  listenForActivity();\n\n  return (\n    <BrowserRouter>\n      <Menu/>\n      <div className=\"app\">\n        <Router/>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import {\n  initializeApp,\n  auth as fbAuth,\n  database as fbDatabase\n} from 'firebase';\n\nimport firebaseConfig from '../configs/firebase.json';\nimport actions from '../actions';\n\nconst firebase = initializeApp(firebaseConfig);\nconst auth = fbAuth();\nconst database = fbDatabase();\n\nauth.onAuthStateChanged((user) => {\n  if (user) {\n    actions.loginSuccess({ user });\n    actions.getUser({ uid: user.uid, currentUser: true });\n  } else {\n    actions.logout({});\n  }\n});\n\nexport {\n  auth,\n  database,\n  firebase,\n}\n","import { AnyAction } from 'redux';\nimport { all, takeLatest } from 'redux-saga/effects';\n\nimport { auth } from '../helpers/firebase';\nimport actions from '../actions';\n\nfunction* login(action: AnyAction) {\n  const { email, password } = action;\n\n  try {\n    const user = yield auth.signInWithEmailAndPassword(email, password);\n    actions.loginSuccess({ user });\n    localStorage.setItem('user', JSON.stringify(user.user));\n    localStorage.setItem('uid', user.user.uid);\n  } catch (error) {\n    console.error(error);\n    if (error.code === 'auth/user-not-found') {\n      const user = yield auth.createUserWithEmailAndPassword(email, password);\n      actions.loginSuccess({ user });\n      localStorage.setItem('user', JSON.stringify(user.user));\n      localStorage.setItem('uid', user.uid);\n    } else {\n      actions.loginFail({ error });\n    }\n  }\n}\n\nfunction* logout() {\n  localStorage.removeItem('user');\n  localStorage.removeItem('uid');\n  localStorage.removeItem('loggedIn');\n  yield auth.signOut();\n}\n\nexport default function* watchForActions() {\n  yield all([\n    takeLatest('LOGIN', login),\n    takeLatest('LOGOUT', logout),\n  ])\n}\n","import { all, takeLatest } from 'redux-saga/effects';\n\nimport { database } from '../helpers/firebase';\nimport actions, { IPayload } from '../actions/index';\n\nfunction* setUser(payload: IPayload) {\n  const { uid, user } = payload;\n\n  yield database\n    .ref('users')\n    .child(uid)\n    .set({\n      ...user,\n      lastOnline: new Date().getTime(),\n      uid,\n    });\n\n  actions.setUserSuccess({});\n  actions.getUser({ uid });\n}\n\nconst requestedUsers: { [key: string]: true } = {};\n\nfunction getUser(payload: IPayload) {\n  const { uid, currentUser } = payload;\n\n  if (requestedUsers[uid] && !currentUser) return;\n  requestedUsers[uid] = true;\n  database\n    .ref('users')\n    .child(uid)\n    .on('value', (rawUser) => {\n      const user = rawUser.val() || {};\n      actions.getUserSuccess({ user, uid, currentUser });\n    });\n}\n\nfunction* updateLastOnline() {\n  const uid = localStorage.getItem('uid');\n  if (!uid || uid === 'undefined') return;\n  const time = new Date().getTime();\n\n  localStorage.setItem('lastActivity', `${time}`);\n  yield database\n    .ref('users')\n    .child(`${uid}`)\n    .child('lastOnline')\n    .set(time);\n}\n\nexport default function* watchForActions() {\n  yield all([\n    takeLatest('GET_USER', getUser),\n    takeLatest('SET_USER', setUser),\n    takeLatest('UPDATE_LAST_ONLINE', updateLastOnline)\n  ]);\n}\n","import { all, takeLatest } from 'redux-saga/effects';\n\nimport { IPayload } from '../actions';\nimport actions from '../actions';\nimport { database } from '../helpers/firebase';\nimport { formatMessage } from '../helpers/utils';\n\nfunction* sendMessage(payload: IPayload) {\n  const { uid, message } = payload;\n  const time = new Date().getTime();\n\n  yield database\n    .ref('messages')\n    .child(`${time}`)\n    .set(formatMessage({\n      time,\n      author: uid,\n      body: `${message} `,\n    }));\n  localStorage.setItem('message', '');\n  actions.sendMessageSuccess({});\n}\n\nfunction subscribe() {\n  database\n    .ref('messages')\n    .orderByKey()\n    .limitToLast(1)\n    .on('value', (rawMessages) => {\n      const messages = Object.values(rawMessages.val() || {});\n      actions.getMessagesSuccess({\n        messages,\n        concat: true\n      });\n    });\n}\n\nfunction unsubscribe() {\n  database.ref('messages').off();\n}\n\nfunction* getMessages() {\n  const rawMessages = yield database\n    .ref('messages')\n    .orderByKey()\n    .limitToLast(30)\n    .once('value');\n\n  const messages = Object.values(rawMessages.val() || {});\n  actions.getMessagesSuccess({ messages });\n}\n\nfunction* getMoreMessages(payload: IPayload) {\n  const { firstMessage } = payload;\n\n  const rawMessages = yield database\n    .ref('messages')\n    .orderByKey()\n    .endAt(`${firstMessage.time}`)\n    .limitToLast(30)\n    .once('value');\n\n  const messages = Object.values(rawMessages.val() || {});\n  actions.getMessagesSuccess({ messages, concat: true });\n}\n\nfunction uploadFile(payload: IPayload) {\n  const { file, uid } = payload;\n\n  const request = new XMLHttpRequest();\n  const formData = new FormData();\n\n  formData.append('image', file);\n\n  request.open('POST', 'https://api.imgur.com/3/image/');\n  request.setRequestHeader('Authorization', `Client-ID ea2c833b74d4583`);\n  request.onreadystatechange = () => {\n    if (request.status === 200 && request.readyState === 4) {\n      let res = JSON.parse(request.responseText);\n\n      actions.sendMessage({\n        uid,\n        message: res.data.link,\n      });\n    }\n  };\n\n  request.send(formData);\n}\n\nexport default function* watchForActions() {\n  yield all([\n    takeLatest('SEND_MESSAGE', sendMessage),\n    takeLatest('GET_MESSAGES', getMessages),\n    takeLatest('GET_MORE_MESSAGES', getMoreMessages),\n    takeLatest('SUBSCRIBE', subscribe),\n    takeLatest('UNSUBSCRIBE', unsubscribe),\n    takeLatest('UPLOAD_FILE', uploadFile),\n  ]);\n}\n","import { all, takeLatest } from 'redux-saga/effects';\n\nimport { IPayload } from '../actions';\nimport actions from '../actions';\nimport { database } from '../helpers/firebase';\nimport { generateID } from '../helpers/utils';\n\nfunction* setItem(payload: IPayload) {\n  const { item } = payload;\n  const time = new Date().getTime();\n  const id = item.id || generateID();\n  const author = localStorage.getItem('uid');\n\n  const itemData = {\n    ...item,\n    id,\n    time,\n    author,\n  };\n\n    yield database\n      .ref('items')\n      .child(`${id}`)\n      .set(itemData);\n\n    actions.setItemSuccess({ itemData });\n    actions.getItemsById({ items: [id] });\n}\n\nfunction* getItems() {\n  const rawItems = yield database\n    .ref('items')\n    .orderByKey()\n    .limitToLast(30)\n    .once('value');\n\n  const items = Object.values(rawItems.val() || {});\n  actions.getItemsSuccess({ items });\n}\n\nfunction* getItemsById(payload: IPayload) {\n  const itemsRef = database.ref('items');\n  const rawItems = yield all(payload.items.map((item: string) => itemsRef.child(item).once('value')));\n  const items = rawItems.map((item: any) => item.val());\n  actions.getItemsSuccess({ items });\n}\n\nfunction* getMoreItems(payload: IPayload) {\n  const { firstItem } = payload;\n\n  const rawItems = yield database\n    .ref('items')\n    .orderByKey()\n    .endAt(`${firstItem.id}`)\n    .limitToLast(30)\n    .once('value');\n\n  const items = Object.values(rawItems.val() || {});\n  actions.getItemsSuccess({ items, concat: true });\n}\n\nfunction* deleteItem(payload: IPayload) {\n  const { id } = payload;\n\n  yield database\n    .ref('items')\n    .child(id)\n    .remove();\n\n  actions.deleteItemSuccess({ id });\n}\n\nexport default function* watchForActions() {\n  yield all([\n    takeLatest('SET_ITEM', setItem),\n    takeLatest('GET_ITEMS', getItems),\n    takeLatest('GET_MORE_ITEMS', getMoreItems),\n    takeLatest('GET_ITEMS_BY_ID', getItemsById),\n    takeLatest('DELETE_ITEM', deleteItem),\n  ]);\n}\n","import { all } from 'redux-saga/effects';\n\nimport auth from './auth';\nimport users from './users';\nimport messages from './messages';\nimport items from './items';\n\nexport default function* watchAll() {\n  yield all([\n    auth(),\n    users(),\n    messages(),\n    items(),\n  ])\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport saga from './sagas/index';\nimport store, { sagaMiddleware } from './helpers/store';\nimport * as serviceWorker from './serviceWorker';\n\nsagaMiddleware.run(saga);\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}