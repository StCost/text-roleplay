{"version":3,"sources":["components/Menu.tsx","helpers/dice.tsx","helpers/utils.tsx","reducers/interfaces.ts","reducers/index.ts","helpers/store.tsx","reducers/actions.ts","components/Avatar.tsx","components/Image.tsx","components/Item.tsx","components/ItemById.tsx","containers/Chat/MessageBody.tsx","containers/Chat/Message.tsx","containers/Chat/index.tsx","components/Loader/LoadIcon.tsx","components/Loader/CheckIcon.tsx","components/Loader/index.tsx","containers/Settings/index.tsx","components/Logout.tsx","containers/Items/ItemCreator.tsx","containers/ItemsTable/ItemsList.tsx","containers/ItemsTable/index.tsx","components/AmountModal.tsx","containers/Items/index.tsx","components/ActiveUsersList.tsx","containers/Inventory/index.tsx","configs/routes.tsx","components/Help.tsx","components/Login.tsx","components/Router.tsx","App.tsx","helpers/firebase.tsx","sagas/auth.ts","sagas/users.ts","sagas/messages.ts","sagas/items.ts","sagas/inventory.ts","sagas/index.ts","serviceWorker.ts","index.tsx"],"names":["connect","state","isLoggedIn","withRouter","props","Fragment","mode","window","innerWidth","selectedKeys","location","pathname","split","pop","menu","map","value","Item","key","path","disabled","link","href","target","rel","to","label","diceRegex","diceRegexG","getRandomInt","min","max","Math","floor","random","exportRolls","str","rolls","match","roll","_amount","_size","amount","parseInt","size","results","Array","fill","rollDice","maxResult","minResult","sum","reduce","a","b","splice","colorFromString","hash","i","length","charCodeAt","color","toString","substr","isOnline","time","localStorage","getItem","Date","getTime","doubleDigit","date","getHours","getMinutes","getSeconds","join","getDate","getMonth","getFullYear","getFullTime","listenForActivity","callback","actions","updateLastOnline","forEach","eventName","document","addEventListener","isURL","test","processMessages","messages","filter","item","pos","self","findIndex","_i","sort","m","index","author","grouped","formatMessage","message","body","indexOf","isRP","mentioned","validateMessage","notify","error","some","getFailedItem","id","type","name","weight","effect","image","description","price","capacity","armor","approved","failed","Number","MAX_VALUE","getItemName","showAmount","defaultItem","defaultDeletedItemData","itemId","deleted","messagesChecked","messagesCleared","usersChecked","usersCleared","done","user","JSON","parse","setItem","uid","initialState","userData","settings","loading","users","currentUser","items","usersActivity","deletingItemData","defaultUser","lastOnline","nickname","avatar","isAdmin","reducer","action","concat","Object","values","undefined","redirect","field","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","composeWithDevTools","applyMiddleware","dispatch","createAction","payload","createAsyncAction","typeName","toLowerCase","replace","toUpperCase","deleteItemProgress","logout","Avatar","style","rest","_avatar","src","backgroundColor","Image","visible","toggleModal","setState","this","onClick","alt","className","title","CloseOutlined","closable","footer","onCancel","width","maxWidth","Component","getStats","labels","wearable","weapon","getFooter","removeItem","all","DeleteOutlined","render","stats","shape","find","itemProps","getItemById","MessageBody","data","taken","trim","onConfirm","takeItem","okText","cancelText","UploadOutlined","searchParams","URL","params","videoId","get","regExMatch","lastMatch","getVideoId","listId","height","frameBorder","allow","allowFullScreen","_body","_rolls","word","rollIndex","summing","importRolls","Message","placement","extra","Chat","sending","componentDidMount","getMessages","subscribe","componentWillUnmount","unsubscribe","componentDidUpdate","prevProps","getUser","onChangeMessage","event","onKeyDown","shiftKey","preventDefault","onSendMessage","currentTarget","selectionStart","sendMessage","getMoreMessages","firstMessage","onScroll","scrollTop","uploadFile","file","onPaste","e","clipboardData","files","onDrop","dataTransfer","getAsFile","spinning","TextArea","placeholder","autoSize","minRows","maxRows","onChange","SendOutlined","viewBox","focusable","data-icon","aria-hidden","d","Loader","LoadIcon","CheckIcon","Settings","rawOnChange","newSettings","setSettings","setUser","clearAvatar","getField","hasRight","display","readOnly","icon","ClearOutlined","danger","margin","checked","defaultValue","bordered","keys","React","URLSearchParams","Logout","ItemCreator","types","clearImage","fields","Option","precision","step","onSubmit","newItem","content","onClose","centered","ItemsList","controls","controlButtons","condition","Boolean","overlay","trigger","InsertRowBelowOutlined","ItemsTable","defaultState","searchString","showApproved","showNotApproved","filters","getFilters","getButton","tabIndex","console","log","Group","flexDirection","getPageControls","getHeader","getContent","_searchString","AmountModal","inputProps","useState","setAmount","onInnerChange","dots","amountModal","modalProps","enough","Modal","confirm","onOk","close","maskClosable","Items","creatingItem","editingItem","itemsToLoad","getItems","toggleCreatingItem","allowClear","FilterOutlined","cardControls","giveItem","itemType","toggleEditingItem","deleteModal","onCreateItem","getCreators","deleteItem","getDeletingModal","getMoreItems","lastItem","ActiveUsersList","getUsersActivity","activeUsers","validUsers","Inventory","passItem","getPassModal","getInventoryItems","inventory","inventoryItems","loadedItems","notLoadedItems","inventoryItem","push","shift","getDeleteModalContent","success","demonstrate","use","routes","component","exact","onFinish","login","rules","required","Password","htmlType","Login","buildDate","App","info","notifySuccess","redirectSuccess","getRedirect","firebase","_firebase","initializeApp","firebaseConfig","auth","database","onAuthStateChanged","loginSuccess","watchForActions","email","password","signInWithEmailAndPassword","stringify","code","createUserWithEmailAndPassword","loginFail","signOut","takeLatest","ref","child","set","setUserSuccess","requestedUsers","on","rawUser","val","getUserSuccess","once","rawActivity","getUsersActivitySuccess","changeMessage","newMessage","sendMessageSuccess","sendMessageFail","orderByKey","limitToLast","rawMessages","getMessagesSuccess","off","endAt","request","XMLHttpRequest","formData","FormData","append","open","setRequestHeader","onreadystatechange","status","readyState","res","responseText","send","changeMessageSuccess","itemData","setItemSuccess","limitToFirst","rawItems","getItemsSuccess","rawItem","startAt","checkMessages","checkUsers","randomWait","getWait","setTimeout","clearedUsers","clearedMessages","waitCounter","deleteItemSuccess","takeEvery","getInventoryItem","passItemSuccess","passItemFail","sameItem","removeItemSuccess","removeItemFail","giveItemFail","fullId","giveItemSuccess","takeItemSuccess","takeItemFail","watchAll","hostname","run","saga","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e298b234.chunk.js","sourcesContent":["import React from 'react';\nimport { Menu as AntdMenu } from 'antd';\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport '../styles/menu.scss';\nimport menu from '../configs/menu.json';\nimport { IState } from '../reducers/interfaces';\n\ninterface IMenuProps extends RouteComponentProps {\n  isLoggedIn: boolean;\n}\n\ninterface IMenuConfig {\n  label: string;\n  path: string;\n  link?: boolean;\n}\n\nfunction Menu(props: IMenuProps) {\n  if (!props.isLoggedIn) {\n    return <React.Fragment/>;\n  }\n\n  const mode = window.innerWidth < 767\n    ? 'horizontal'\n    : 'inline';\n\n  return (\n    <AntdMenu\n      mode={mode}\n      selectedKeys={[props.location.pathname.split('/').pop() || '']}\n    >\n      {menu.map((value: IMenuConfig) => (\n        <AntdMenu.Item\n          key={value.path.split('/').pop()}\n          disabled={value.path === props.location.pathname}\n        >\n          {\n            value.link\n              ? (\n\n                <a\n                  href={value.path}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Помощь\n                </a>\n              ) : (\n                <Link to={value.path}>\n                  {value.label}\n                </Link>\n              )\n          }\n        </AntdMenu.Item>\n      ))}\n    </AntdMenu>\n  );\n}\n\nexport default connect((state: IState) => ({ isLoggedIn: state.isLoggedIn }))(withRouter(Menu));\n","import React from 'react';\nimport { Tooltip } from 'antd';\n\nexport interface IRoll {\n  roll: string;\n  results: number[];\n  amount: number;\n  size: number;\n  maxResult: number;\n  minResult: number;\n  sum: number;\n}\n\nexport const diceRegex = /([1-9]|10)[dд]((10|12|20)|[468])/miu;\nexport const diceRegexG = /([1-9]|10)[dд]((10|12|20)|[468])/miug;\n\nexport const getRandomInt = (min: number, max: number) =>\n  Math.floor(Math.random() * ((max + 1) - min) + min);\n\nexport const hasDice = (str: string) =>\n  /\\d+[dд]\\d+/imu.test(str);\n\nexport const rollDice = (amount: number, size: number) => {\n  return new Array(amount).fill(amount + size).map(() => getRandomInt(1, size));\n};\n\nexport const exportRolls = (str: string) => {\n  const rolls = str.match(diceRegexG);\n  if (rolls) {\n    return rolls.map((roll: string): IRoll => {\n      const [_amount, _size] = roll.split(/[dд]/);\n      const amount = parseInt(_amount);\n      const size = parseInt(_size);\n      const results = rollDice(amount, size);\n\n      return ({\n        maxResult: size * amount,\n        minResult: amount,\n        sum: results.reduce((a, b) => a + b, 0),\n        roll,\n        results,\n        amount,\n        size,\n      })\n    }).splice(0, 10);\n  }\n  return [];\n};\n\nexport const importRolls = (body: string, _rolls: IRoll[]) => {\n  const rolls = [..._rolls]; // Avoid mutations\n  return body.split(' ').map((word: string, index: number) => {\n    const rollIndex = rolls.findIndex(({ roll }) => roll === word);\n    if (rollIndex > -1) {\n      const {\n        results,\n        maxResult,\n        minResult,\n        sum\n      } = rolls.splice(rollIndex, 1)[0];\n\n      const summing = results.length > 1\n        ? `${sum} = ${results.join(' + ')}`\n        : `${results.join(' + ')}`;\n\n      const className = (sum === maxResult && 'critHit') || (sum === minResult && 'critMiss') || '';\n\n      return (\n        <React.Fragment key={word + index}>\n          {' '}\n          <Tooltip title={summing}>\n            <b className={className}>\n              {word}({sum})\n            </b>\n          </Tooltip>\n        </React.Fragment>\n      )\n    }\n    return ` ${word}`;\n  });\n};\n","import { message as notify } from 'antd';\n\nimport actions from '../reducers/actions';\nimport { IItem, IMessage } from '../reducers/interfaces';\nimport { diceRegex, exportRolls, hasDice } from './dice';\n\nexport const camelize = (str: string) => {\n  return str\n    .toLowerCase()\n    .replace(/_./g, (m) => m.toUpperCase())\n    .replace(/_/g, '')\n};\n\nexport const colorFromString = (str: string) => {\n  if (!str) return '#000';\n\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n  for (let i = 0; i < 3; i++) {\n    let value = (hash >> (i * 8)) & 0xFF;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n\n  return color;\n};\n\nexport const isOnline = (time?: number) => {\n  if (!time) return false;\n  const lastActivity = time || parseInt(localStorage.getItem('lastActivity') || '0');\n  return (lastActivity + 180000) > new Date().getTime();\n};\n\nexport const doubleDigit = (str: number) => `${str}`.length === 1\n  ? `0${str}`\n  : str;\n\nexport const getTime = (time: number) => {\n  const date = new Date(time);\n  return [date.getHours(), date.getMinutes(), date.getSeconds()].map(doubleDigit).join(':');\n};\n\nexport const getDate = (time: number) => {\n  const date = new Date(time);\n  return [date.getDate(), date.getMonth() + 1, date.getFullYear()].map(doubleDigit).join('.');\n};\n\nexport const getFullTime = (time: number) => {\n  const date = new Date(time);\n  const messageTime = [date.getHours(), date.getMinutes(), date.getSeconds()].map(doubleDigit).join(':');\n  const messageDate = [date.getDate(), date.getMonth() + 1, date.getFullYear()].map(doubleDigit).join('.');\n\n  return [messageTime, messageDate].join(' ');\n};\n\nexport const listenForActivity = () => {\n  const callback = () => {\n    if (!isOnline(parseInt(localStorage.getItem('lastActivity') || '0') - 60000))\n      actions.updateLastOnline({});\n  };\n\n  [\n    'mousedown',\n    'mousemove',\n    'keydown',\n    'scroll',\n    'touchstart'\n  ].forEach((eventName) => {\n    document.addEventListener(eventName, callback, true);\n  });\n  callback();\n};\n\nexport const isURL = (str: string) =>\n  /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/igm.test(str);\n\nexport const processMessages = (messages: IMessage[]) => {\n  return messages\n    .filter((item: IMessage, pos: number, self: IMessage[]) =>\n      self.findIndex((_i: IMessage) => _i.time === item.time) === pos\n    )\n    .sort((a: IMessage, b: IMessage) => b.time - a.time)\n    .map((m: IMessage, index: number, messages: IMessage[]) => {\n      if (index < messages.length - 2) {\n        if (m.author === messages[index + 1].author) {\n          return {\n            ...m,\n            grouped: true,\n          }\n        }\n      }\n      return m;\n    })\n};\n\nexport const formatMessage = (message: IMessage) => {\n  const { body } = message;\n\n  if (diceRegex.test(body)) {\n    message.rolls = exportRolls(body);\n  }\n\n  if (body.indexOf('*') > -1) {\n    message.isRP = true;\n  }\n\n  if (/(@[a-zа-яё]*)/mui.test(body)) {\n    message.mentioned = true;\n  }\n\n  return message;\n};\n\nexport const validateMessage = (message: string) => {\n\n  if (!message) {\n    notify.error('Сообщение пустое');\n    return false;\n  }\n\n  if (hasDice(message)) {\n    const rolls: string[] | null = message.match(/(( |^)[a-zа-я]+\\d+[dд]\\d+)|(\\d+[dд]\\d+[a-zа-я]+( |$))|(\\d+[dд]\\d+)/miug);\n    if (rolls) {\n      const wasError = rolls.some((roll: string) => {\n        if (/(([a-zа-яё])\\d+[dд]\\d+)|(\\d+[dд]\\d+([a-zа-яё]))/miug.test(roll)) {\n          notify.error(`Ошибка в дайсе ${roll}. Рядом не должно быть символов`);\n          return true;\n        }\n\n        const [amount, size] = roll.split(/[dд]/u);\n\n        if (parseInt(amount) > 10) {\n          notify.error(`Ошибка в дайсе ${roll}. Нельзя бросать больше 10-ти дайсов`);\n          return true;\n        }\n\n        if ([2,4,6,8,10,12,20].indexOf(parseInt(size)) === -1) {\n          notify.error(`Ошибка в дайсе ${roll}. Можно бросать только дайсы размеров 4 6 8 10 12 20`);\n          return true;\n        }\n\n        return false;\n      });\n      if (wasError) return false;\n    }\n  }\n  return true;\n};\n\nexport const generateID = () =>\n  '_' + Math.random().toString(36).substr(2, 9);\n\nexport const getFailedItem: ((id: string) => IItem) = (id: string) => ({\n  id: id,\n  type: 'misc',\n  name: 'Ошибка',\n  weight: 0,\n  time: 0,\n  effect: id,\n  image: '',\n  description: 'Такого предмета не существует',\n  price: 0,\n  capacity: 0,\n  armor: 0,\n  approved: true,\n  failed: true,\n  amount: Number.MAX_VALUE,\n});\n\nexport const getItemName = (item: IItem, showAmount: boolean = true) =>\n  `${item ? `'${item.name}'` : 'предмет'}` + (showAmount && item.amount && item.amount >= 2 ? ` (${item.amount}шт)` : '');\n","import { IRoll } from '../helpers/dice';\n\nexport interface IAction {\n  type: string;\n\n  [key: string]: any; // Payload could be any type or size\n}\n\nexport interface IMessage {\n  author: string;\n  time: number;\n  body: string;\n  grouped?: boolean; // Remove header and top margin of message, because author is the same\n  isRP?: boolean;\n  mentioned?: boolean;\n  rolls?: IRoll[];\n  data?: { [key: string]: any }; // Extra data for special purposes\n}\n\nexport interface IState {\n  userData: IUser | null;\n  isLoggedIn: boolean;\n  settings: IUser | false;\n  loading: boolean;\n  messages: IMessage[];\n  users: IUsers;\n  uid: string;\n  currentUser: IUser | null;\n  items: IItem[];\n  error: Error | false;\n  notify?: string;\n  redirect?: string;\n  usersActivity: {[key: string]: string};\n  deletingItemData: IDeletedItemData;\n}\n\nexport interface IInventoryItem {\n  id: string;\n  time: number;\n  type: ItemType;\n  amount: number;\n}\n\nexport interface IInventory {\n  [key: string]: IInventoryItem;\n}\n\nexport interface IUser {\n  nickname: string;\n  avatar: string;\n  uid: string,\n  lastOnline: number;\n  isAdmin?: boolean;\n  inventory: IInventory,\n}\n\nexport interface IUsers {\n  [key: string]: IUser;\n}\n\nexport type ItemType = 'weapon' | 'usable' | 'wearable' | 'junk' | 'ammo' | 'note' | 'key' | 'misc';\n\nexport interface IItem {\n  id: string;\n  name: string;\n  weight: number;\n  time: number;\n  effect: string;\n  image: string;\n  description: string;\n  price: number;\n  capacity: number;\n  armor: number;\n  amount?: number;\n  approved: boolean;\n  author?: string;\n  type: ItemType;\n  failed?: boolean;\n}\n\nexport const defaultItem: IItem = {\n  id: '',\n  type: 'junk',\n  name: '',\n  effect: '',\n  image: '',\n  weight: 0,\n  price: 0,\n  description: '',\n  capacity: 0,\n  approved: false,\n  armor: 0,\n  time: 0,\n  amount: 0,\n};\n\nexport interface IDeletedItemData {\n  itemId?: string;\n  deleted?: boolean;\n  messagesChecked?: number;\n  messagesCleared?: number;\n  usersChecked?: number;\n  usersCleared?: number;\n  done?: boolean;\n}\n\nexport const defaultDeletedItemData: IDeletedItemData = {\n  itemId: '',\n  deleted: false,\n  messagesChecked: 0,\n  messagesCleared: 0,\n  usersChecked: 0,\n  usersCleared: 0,\n  done: false,\n};\n","import { processMessages } from '../helpers/utils';\nimport { defaultDeletedItemData, IAction, IItem, IState } from './interfaces';\n\nconst user = JSON.parse(localStorage.getItem('user') || 'null');\nif (user) localStorage.setItem('uid', user.uid);\nexport const initialState: IState = {\n  userData: user,\n  isLoggedIn: user !== null,\n  settings: false,\n  loading: false,\n  messages: [],\n  users: {},\n  uid: user ? user.uid : '',\n  currentUser: null,\n  items: [],\n  error: false,\n  usersActivity: {},\n  deletingItemData: defaultDeletedItemData,\n};\n\nexport const defaultUser = {\n  lastOnline: 0,\n\n  nickname: '',\n  avatar: '',\n\n  isAdmin: false,\n  uid: '',\n};\n\nconst reducer = (state = initialState, action: IAction) => {\n  switch (action.type) {\n    case 'LOGIN':\n    case 'GET_MESSAGES':\n    case 'GET_MORE_MESSAGES':\n    case 'SEND_MESSAGE':\n    case 'SET_USER':\n    case 'GET_ITEMS':\n    case 'GET_MORE_ITEMS':\n    case 'GET_ITEMS_BY_ID':\n    case 'CREATE_ITEM':\n    case 'GIVE_ITEM':\n    case 'REMOVE_ITEM':\n    case 'PASS_ITEM':\n    case 'GET_USERS_ACTIVITY':\n    case 'UPLOAD_FILE': {\n      return {\n        ...state,\n        loading: true,\n      }\n    }\n    case 'SET_USER_SUCCESS':\n    case 'SET_USER_FAIL':\n    case 'GET_MESSAGES_FAIL':\n    case 'GET_MORE_MESSAGES_SUCCESS':\n    case 'GET_MORE_MESSAGES_FAIL':\n    case 'GIVE_ITEM_SUCCESS':\n    case 'REMOVE_ITEM_SUCCESS':\n    case 'REMOVE_ITEM_FAIL':\n    case 'PASS_ITEM_SUCCESS':\n    case 'PASS_ITEM_FAIL':\n    case 'GET_USERS_ACTIVITY_FAIL':\n    case \"DELETE_ITEM_FAIL\":\n    case 'SEND_MESSAGE_FAIL': {\n      return {\n        ...state,\n        loading: false,\n      }\n    }\n    case 'LOGIN_SUCCESS': {\n      return {\n        ...state,\n        uid: action.user.uid,\n        userData: action.user,\n        isLoggedIn: action.user !== null,\n      }\n    }\n    case 'LOGIN_FAIL': {\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      }\n    }\n    case 'LOGOUT': {\n      return {\n        ...state,\n        userData: null,\n        isLoggedIn: false,\n      }\n    }\n    case 'GET_MESSAGES_SUCCESS': {\n      const messages = action.concat\n        ? [...state.messages, ...action.messages]\n        : action.messages;\n\n      return {\n        ...state,\n        messages: processMessages(messages),\n        loading: false,\n      }\n    }\n    case 'GET_USER_SUCCESS': {\n      const currentUser = action.user.uid === state.uid\n        ? action.user\n        : state.currentUser;\n\n      return {\n        ...state,\n        currentUser,\n        users: {\n          ...state.users,\n          [action.uid]: action.user,\n        },\n      }\n    }\n    case 'GET_ITEMS_SUCCESS': {\n      const items: { [key: string]: IItem } = {};\n      [...state.items, ...action.items]\n        .forEach((item: IItem) => items[item.id] = item);\n\n      return {\n        ...state,\n        loading: false,\n        items: Object.values(items),\n      }\n    }\n    case 'NOTIFY': {\n      return {\n        ...state,\n        notify: action.message,\n      }\n    }\n    case 'NOTIFY_SUCCESS': {\n      return {\n        ...state,\n        notify: undefined,\n      }\n    }\n    case 'REDIRECT': {\n      return {\n        ...state,\n        redirect: action.to,\n      }\n    }\n    case 'REDIRECT_SUCCESS': {\n      return {\n        ...state,\n        redirect: undefined,\n      }\n    }\n    case 'GET_USERS_ACTIVITY_SUCCESS': {\n      return {\n        ...state,\n        loading: false,\n        usersActivity: action.usersActivity,\n      }\n    }\n    case 'DELETE_ITEM': {\n      return {\n        ...state,\n        loading: true,\n        deletingItemData: {\n          itemId: action.id,\n          defaultDeletedItemData,\n        },\n      }\n    }\n    case 'DELETE_ITEM_PROGRESS': {\n      return {\n        ...state,\n        deletingItemData: {\n          ...state.deletingItemData,\n          [action.field]: action.value\n        },\n      }\n    }\n    case 'DELETE_ITEM_SUCCESS': {\n      return {\n        ...state,\n        loading: false,\n        items: state.items.filter((item: IItem) => item.id !== action.id),\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { initialState } from '../reducers';\nimport reducers from '../reducers'\n\nexport const sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  reducers,\n  initialState,\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\n);\n\nexport default store;\n","import store from '../helpers/store';\nimport { camelize } from '../helpers/utils';\n\nconst dispatch = store.dispatch;\n\nexport interface IPayload {\n  [key: string]: any;\n}\n\ninterface IActions {\n  [key: string]: (payload: IPayload) => void;\n}\n\nconst createAction =\n  (type: string) =>\n    (payload?: IPayload) =>\n      dispatch({ type, ...payload });\n\nconst createAsyncAction = (type: string) => {\n  const typeName = camelize(type);\n  return {\n    [typeName]: createAction(type),\n    [`${typeName}Success`]: createAction(`${type}_SUCCESS`),\n    [`${typeName}Fail`]: createAction(`${type}_FAIL`),\n  }\n};\n\nconst actions: IActions = {\n  ...createAsyncAction('LOGIN'),\n  ...createAsyncAction('GET_USER'),\n  ...createAsyncAction('GET_MESSAGES'),\n  ...createAsyncAction('GET_MORE_MESSAGES'),\n  ...createAsyncAction('SET_USER'),\n  ...createAsyncAction('SEND_MESSAGE'),\n  ...createAsyncAction('CHANGE_MESSAGE'),\n  ...createAsyncAction('SUBSCRIBE'),\n  ...createAsyncAction('UNSUBSCRIBE'),\n  ...createAsyncAction('UPLOAD_FILE'),\n  ...createAsyncAction('SET_ITEM'),\n  ...createAsyncAction('DELETE_ITEM'),\n  ...createAsyncAction('GET_ITEMS'),\n  ...createAsyncAction('GET_ITEM_BY_ID'),\n  ...createAsyncAction('GET_MORE_ITEMS'),\n  ...createAsyncAction('GIVE_ITEM'),\n  ...createAsyncAction('REMOVE_ITEM'),\n  ...createAsyncAction('PASS_ITEM'),\n  ...createAsyncAction('TAKE_ITEM'),\n  ...createAsyncAction('NOTIFY'),\n  ...createAsyncAction('REDIRECT'),\n  ...createAsyncAction('GET_USERS_ACTIVITY'),\n  ...createAsyncAction('DELETE_ITEM'),\n  deleteItemProgress: createAction('DELETE_ITEM_PROGRESS'),\n  updateLastOnline: createAction('UPDATE_LAST_ONLINE'),\n  logout: createAction('LOGOUT'),\n};\n\nexport default actions;\n","import React from 'react';\nimport { Avatar as AntdAvatar } from 'antd';\nimport { AvatarProps } from 'antd/es/avatar';\n\nimport { colorFromString, isURL } from '../helpers/utils';\n\ninterface IAvatarProps extends AvatarProps {\n  avatar: string;\n  nickname: string;\n}\n\nconst Avatar = (props: IAvatarProps) => {\n  const { avatar, nickname, style, ...rest } = props;\n\n  const _avatar = isURL(avatar) ? avatar : '';\n  return (\n    <AntdAvatar\n      src={_avatar}\n      style={{ ...style, backgroundColor: _avatar ? 'transparent' : colorFromString(nickname) }}\n      {...rest}\n    >\n      {nickname}\n    </AntdAvatar>\n  )\n};\n\nexport default Avatar;\n","import React, { Component } from 'react';\nimport { Modal } from 'antd';\nimport { CloseOutlined } from '@ant-design/icons';\n\nclass Image extends Component<{ src: string }, { visible: boolean }> {\n  state = { visible: false };\n\n  toggleModal = () => {\n    this.setState({\n      visible: !this.state.visible,\n    });\n  };\n\n  render() {\n    const { src } = this.props;\n\n    return (\n      <React.Fragment>\n        <img\n          onClick={this.toggleModal}\n          src={src}\n          alt=\"\"\n          className=\"chat-image\"\n        />\n        <Modal\n          title={\n            <div>\n              <a\n                href={src}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {src}\n              </a>\n              <CloseOutlined onClick={this.toggleModal}/>\n            </div>\n          }\n          className=\"image-modal\"\n          closable={false}\n          footer={null}\n          visible={this.state.visible}\n          onCancel={this.toggleModal}\n          width=\"fit-content\"\n        >\n          <img\n            style={{\n              maxWidth: '90vw',\n            }}\n            src={src}\n            alt=\"\"\n          />\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Image;\n","import React, { Component } from 'react';\nimport { Card, Button } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\n\nimport '../styles/item.scss';\nimport { IItem } from '../reducers/interfaces';\nimport Avatar from './Avatar';\nimport actions from '../reducers/actions';\n\ninterface IItemProps {\n  item: IItem,\n  footer?: JSX.Element,\n  disabled?: boolean;\n  uid?: string;\n  amount?: number;\n}\n\nclass Item extends Component<IItemProps> {\n  getStats = () => {\n    const { type, armor, capacity } = this.props.item;\n\n    switch (type) {\n      case 'wearable':\n        return armor;\n\n      case 'weapon':\n        return capacity;\n\n      default:\n        const amount = this.props.amount || this.props.item.amount;\n        return (amount && amount >= 2) ? `${amount}шт` : false;\n    }\n  };\n\n  labels = {\n    wearable: 'Защита',\n    weapon: 'Магазин',\n  };\n\n  getFooter = () => {\n    const { footer, uid } = this.props;\n    const { failed, id } = this.props.item;\n\n    if (failed) {\n      return (\n        <div className=\"item-footer\">\n          <Button\n            disabled={!uid}\n            onClick={() => actions.removeItem({ uid, id, all: true })}\n          >\n            <DeleteOutlined/>\n          </Button>\n        </div>\n      )\n    }\n\n    if (footer)\n      return (\n        <div className=\"item-footer\">\n          {footer}\n        </div>\n      )\n  };\n\n  render = () => {\n    const { disabled, item } = this.props;\n    const {\n      name = item.id,\n      price = 0,\n      description,\n      image,\n      effect,\n      weight = 0,\n      type,\n      approved,\n    } = item;\n\n    const stats = this.getStats();\n    return (\n      <Card className={`item ${(approved && !disabled) ? '' : 'disabled'}`}>\n        <div className=\"item-info\">\n          <div className=\"item-name\">{name}</div>\n          <div className=\"item-subinfo\">\n            <div className=\"item-price\">\n              {price > 0 && `Цена: ${price}`}\n            </div>\n            <div className=\"item-weight\">\n              {weight > 0 && `Вес: ${weight}lb`}\n            </div>\n          </div>\n        </div>\n        {(image || description) && (\n          <div className=\"item-body\">\n            {image && <div className=\"item-image\">\n              <Avatar avatar={image} nickname={name} shape=\"square\"/>\n            </div>}\n            {description}\n          </div>\n        )}\n\n        {(stats || effect) && (\n          <div className=\"item-prefooter\">\n            <div className=\"item-ammo\">\n              {\n                // @ts-ignore\n                stats ? `${this.labels[type] || 'Кол-во'}: ${stats}` : ''\n              }\n            </div>\n            <div className=\"item-effect\">{effect}</div>\n          </div>\n        )}\n        {this.getFooter()}\n      </Card>\n    )\n  }\n}\n\nexport default Item;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Item from './Item';\nimport { IItem, IState } from '../reducers/interfaces';\nimport actions from '../reducers/actions';\n\ninterface IItemByIdProps {\n  id: string;\n  item?: IItem;\n  disabled?: boolean;\n  footer?: JSX.Element;\n  messageId?: number;\n  amount?: number;\n}\n\nconst ItemById = (props: IItemByIdProps) => {\n  const { id, item, ...itemProps } = props;\n\n  if (!item) {\n    actions.getItemById({ id });\n    return <React.Fragment/>;\n  }\n\n  return (\n    <Item\n      item={item}\n      {...itemProps}\n    />\n  );\n};\n\nconst mapStateToProps = (state: IState, props: IItemByIdProps) => {\n  const { items } = state;\n  const item = items.find((item: IItem) => item.id === props.id);\n\n  return { item }\n};\n\nexport default connect(mapStateToProps)(ItemById);\n","import React from 'react';\nimport { Button, Popconfirm } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\n\nimport { isURL } from '../../helpers/utils';\nimport { IMessage } from '../../reducers/interfaces';\nimport { importRolls } from '../../helpers/dice';\nimport Image from '../../components/Image';\nimport ItemById from '../../components/ItemById';\nimport actions from '../../reducers/actions';\n\ninterface IMessageBodyProps {\n  message: IMessage;\n  uid?: string;\n}\n\nconst MessageBody = (props: IMessageBodyProps) => {\n    const { uid, message } = props;\n    const {\n      body,\n      isRP,\n      rolls,\n      data,\n    } = message;\n\n    if (data) {\n      const { itemId, taken, amount, type } = data;\n\n      if (itemId) {\n        return (\n          <>\n            <i className=\"rp-message\">\n              {body}\n            </i>\n            <div className={taken ? '' : 'rp-message'}>\n              <ItemById\n                id={itemId.trim()}\n                amount={amount}\n                disabled={taken}\n                footer={uid && type ? (\n                  <Popconfirm\n                    title=\"Подобрать предмет?\"\n                    onConfirm={() => actions.takeItem({ uid, message, data })}\n                    okText=\"Подобрать\"\n                    cancelText=\"Отмена\"\n                    disabled={taken}\n                  >\n                    <Button className=\"take-button\" disabled={taken}>\n                      <UploadOutlined/>\n                    </Button>\n                  </Popconfirm>\n                ) : undefined}\n              />\n            </div>\n          </>\n        )\n      }\n    }\n\n    if (isURL(body)) {\n      if (/\\.(gif|jpe?g|tiff|png|webp|bmp)/ig.test(body)) {\n        return (\n          <Image src={body}/>\n        )\n      }\n\n      const link = (\n        <a\n          href={body}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {body}\n        </a>\n      );\n\n      // https://youtu.be/afeWQn4DFKQ\n      if (body.indexOf('youtu') > -1) {\n        const getVideoId = (body: string) => {\n          if (body.indexOf('youtu.be') > -1) {\n            const regExMatch = body.match(/youtu\\.be\\/.* /i);\n            if (regExMatch) {\n              const lastMatch = regExMatch.pop();\n              if (lastMatch) {\n                return lastMatch.split('/').pop() || '';\n              }\n            }\n          } else {\n            return new URL(body).searchParams.get('v') || '';\n          }\n          return ''\n        };\n\n        const searchParams = new URL(body).searchParams;\n        let params = 'listType=playlist';\n        const videoId = getVideoId(body);\n\n        if (videoId) {\n          const listId = searchParams.get('list');\n          if (listId)\n            params += '&list=' + listId;\n\n          const time = searchParams.get('t');\n          if (time)\n            params += '&start=' + time;\n\n          return (\n            <>\n              {link}\n              <iframe\n                title={videoId}\n                id=\"ytplayer\"\n                width=\"100%\"\n                height=\"360\"\n                src={`http://www.youtube.com/embed/${videoId}?${params}`}\n                frameBorder=\"0\"\n                allow=\"accelerometer; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n              />\n            </>\n          )\n        }\n      }\n\n      return link;\n    }\n\n    const _body = rolls\n      ? importRolls(body, rolls)\n      : body;\n\n    if (isRP) {\n      return (\n        <i className=\"rp-message\">\n          {_body}\n        </i>\n      )\n    }\n\n    return <span>{_body}</span>;\n  }\n;\n\nexport default MessageBody;\n","import React from 'react';\nimport { Card, Tooltip } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { IMessage, IUser } from '../../reducers/interfaces';\nimport Avatar from '../../components/Avatar';\nimport MessageBody from './MessageBody';\nimport {\n  getDate,\n  getFullTime,\n  getTime,\n  isOnline\n} from '../../helpers/utils';\n\ninterface IMessageProps {\n  message: IMessage,\n  user: IUser,\n  uid: string;\n}\n\nconst Message = (props: IMessageProps) => {\n  const {\n    message: {\n      time,\n      grouped,\n      body,\n      mentioned,\n    },\n    user,\n    uid,\n  } = props;\n\n  const title = user && (\n    <Link to={`./${user.uid}/settings`}>\n      <Tooltip\n        title={user.lastOnline ? `Последняя активность: ${getFullTime(user.lastOnline)}` : undefined}\n        placement=\"left\"\n      >\n        <div className={`chat-message__title ${isOnline(user.lastOnline) ? 'online' : ''}`}>\n          <Avatar\n            avatar={user.avatar}\n            nickname={user.nickname}\n          />\n          <div className=\"chat-message__nickname\">\n            {user.nickname || user.uid}\n          </div>\n        </div>\n      </Tooltip>\n    </Link>\n  );\n\n  return (\n    <Card\n      className={`chat-message ${grouped ? 'grouped' : ''} ${mentioned && user && (body.indexOf(`@${user.nickname} `) > -1) ? 'mentioned' : ''}`}\n      title={title}\n      key={time}\n      extra={(\n        <Tooltip title={getDate(time)}>\n          <div className=\"chat-time\">{getTime(time)}</div>\n        </Tooltip>\n      )}\n    >\n      <MessageBody message={props.message} uid={uid}/>\n    </Card>\n  );\n};\n\nexport default Message;\n","import React, {\n  ChangeEvent,\n  Component,\n  KeyboardEvent,\n  ClipboardEvent,\n  DragEvent,\n} from 'react';\nimport { connect } from 'react-redux';\nimport { SendOutlined } from '@ant-design/icons';\nimport {\n  Input,\n  message as notify,\n  Spin,\n} from 'antd';\n\nimport '../../styles/chat.scss';\nimport actions from '../../reducers/actions';\nimport { IMessage, IState, IUser, IUsers } from '../../reducers/interfaces';\nimport Message from './Message';\nimport { validateMessage } from '../../helpers/utils';\n\ninterface IChatProps {\n  messages: IMessage[],\n  uid: string,\n  loading: boolean,\n  users: IUsers;\n  user: IUser;\n}\n\ninterface IChatState {\n  message: string;\n  sending: boolean;\n}\n\nclass Chat extends Component<IChatProps, IChatState> {\n  state = {\n    message: '',\n    sending: false,\n  };\n\n  componentDidMount = () => {\n    actions.getMessages({});\n    actions.subscribe({});\n    this.setState({ message: localStorage.getItem('message') || '' });\n  };\n\n  componentWillUnmount = () => {\n    actions.unsubscribe({});\n  };\n\n  componentDidUpdate = (prevProps: IChatProps) => {\n    const { messages, users } = this.props;\n\n    if (this.state.sending && prevProps.messages !== messages) {\n      localStorage.setItem('message', '');\n      this.setState({\n        message: '',\n        sending: false,\n      });\n    }\n\n    messages.forEach((m: IMessage) => {\n      if (!users[m.author]) {\n        actions.getUser({ uid: m.author });\n      }\n    });\n  };\n\n  onChangeMessage = (event: ChangeEvent<HTMLTextAreaElement>) => {\n    const message = event.target.value;\n    localStorage.setItem('message', message);\n    this.setState({ message });\n  };\n\n  onKeyDown = (event: KeyboardEvent<HTMLTextAreaElement>) => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n\n      this.onSendMessage();\n    }\n\n    const { uid } = this.props;\n    if (event.key === 'Up' || event.key === 'ArrowUp') {\n      const message = this.props.messages.find((m: IMessage) => m.author === uid);\n      if (message) {\n        const { currentTarget: { value, selectionStart } } = event;\n        if (value.substr(0, selectionStart).split('\\n').length === 1) {\n          const { body } = message;\n          localStorage.setItem('message', body);\n          this.setState({ message: body });\n        }\n      }\n    }\n  };\n\n  onSendMessage = () => {\n    const { message } = this.state;\n    const { user, loading, uid } = this.props;\n\n    if (loading) {\n      return;\n    }\n\n    if (!user) {\n      notify.error('Данные о пользователе отсутствуют');\n      return;\n    }\n\n    if (!user.nickname) {\n      notify.error('Никнейм не установлен. Пройдите в настройки и назовите себя');\n      return;\n    }\n\n    if (!validateMessage(message)) {\n      return;\n    }\n\n    this.setState({ sending: true });\n    actions.sendMessage({\n      uid,\n      message,\n    });\n  };\n\n  getMoreMessages = () => {\n    actions.getMoreMessages({ firstMessage: this.props.messages[this.props.messages.length - 1] })\n  };\n\n  onScroll = (event: React.UIEvent<HTMLDivElement, UIEvent>) => {\n    if (event.currentTarget.scrollTop <= 50) {\n      event.preventDefault();\n      this.getMoreMessages();\n    }\n  };\n\n  uploadFile = (file: File, event: ClipboardEvent<HTMLTextAreaElement> | DragEvent<HTMLTextAreaElement>) => {\n    const { uid } = this.props;\n    if (file) {\n      if (file.type.indexOf('image') > -1) {\n        actions.uploadFile({ uid: uid, file });\n      } else {\n        notify.error('Только картинки могут быть загружены');\n      }\n      event.preventDefault();\n    }\n  };\n\n  onPaste = (e: ClipboardEvent<HTMLTextAreaElement>) => {\n    this.uploadFile(e.clipboardData.files[0], e)\n  };\n\n  onDrop = (e: DragEvent<HTMLTextAreaElement>) => {\n    const file = e.dataTransfer.items[0].getAsFile();\n    if (file)\n      this.uploadFile(file, e)\n  };\n\n  render = () => {\n    const { messages, loading, users, uid } = this.props;\n\n    return (\n      <Spin spinning={loading}>\n        <div className={`chat-wrapper`}>\n          <div\n            className=\"chat-body\"\n            onScroll={this.onScroll}\n          >\n            {messages.map((m: IMessage) => (\n              <Message\n                key={m.time}\n                message={m}\n                user={users[m.author]}\n                uid={uid}\n              />\n            ))}\n          </div>\n          <div className=\"chat-controls\">\n            <Input.TextArea\n              placeholder=\"Введите сообщение\"\n              autoSize={{ minRows: 1, maxRows: 10 }}\n              onChange={this.onChangeMessage}\n              onKeyDown={this.onKeyDown}\n              value={this.state.message}\n              onPaste={this.onPaste}\n              onDrop={this.onDrop}\n            />\n            <SendOutlined\n              onClick={this.onSendMessage}\n            />\n          </div>\n        </div>\n      </Spin>\n    )\n  }\n}\n\nconst mapStateToProps = (state: IState) => {\n  const { messages, uid, loading, users } = state;\n\n  return {\n    messages,\n    uid,\n    loading,\n    users,\n    user: users[uid]\n  };\n};\n\nexport default connect(mapStateToProps)(Chat);\n","import React from 'react';\n\nexport default () => (\n  <svg viewBox=\"64 64 896 896\" focusable=\"false\" className=\"anticon-spin\" data-icon=\"sync\" width=\"1em\" height=\"1em\"\n       fill=\"#ff4d4f\" aria-hidden=\"true\">\n    <path d=\"M168 504.2c1-43.7 10-86.1 26.9-126 17.3-41 42.1-77.7 73.7-109.4S337 212.3 378 195c42.4-17.9 87.4-27 133.9-27s91.5 9.1 133.8 27A341.5 341.5 0 01755 268.8c9.9 9.9 19.2 20.4 27.8 31.4l-60.2 47a8 8 0 003 14.1l175.7 43c5 1.2 9.9-2.6 9.9-7.7l.8-180.9c0-6.7-7.7-10.5-12.9-6.3l-56.4 44.1C765.8 155.1 646.2 92 511.8 92 282.7 92 96.3 275.6 92 503.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8zm756 7.8h-60c-4.4 0-7.9 3.5-8 7.8-1 43.7-10 86.1-26.9 126-17.3 41-42.1 77.8-73.7 109.4A342.45 342.45 0 01512.1 856a342.24 342.24 0 01-243.2-100.8c-9.9-9.9-19.2-20.4-27.8-31.4l60.2-47a8 8 0 00-3-14.1l-175.7-43c-5-1.2-9.9 2.6-9.9 7.7l-.7 181c0 6.7 7.7 10.5 12.9 6.3l56.4-44.1C258.2 868.9 377.8 932 512.2 932c229.2 0 415.5-183.7 419.8-411.8a8 8 0 00-8-8.2z\"/>\n  </svg>\n);\n","import React from 'react';\n\nexport default () => (\n  <svg viewBox=\"64 64 896 896\" focusable=\"false\" className=\"\" data-icon=\"check-circle\" width=\"1em\" height=\"1em\"\n       fill=\"currentColor\" aria-hidden=\"true\">\n    <path\n      d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\"\n      fill=\"#52c41a\"/>\n    <path\n      d=\"M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm193.4 225.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.3 0 19.9 5 25.9 13.3l71.2 98.8 157.2-218c6-8.4 15.7-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.4 12.7z\"\n      fill=\"transparent\"/>\n    <path\n      d=\"M699 353h-46.9c-10.2 0-19.9 4.9-25.9 13.3L469 584.3l-71.2-98.8c-6-8.3-15.6-13.3-25.9-13.3H325c-6.5 0-10.3 7.4-6.5 12.7l124.6 172.8a31.8 31.8 0 0051.7 0l210.6-292c3.9-5.3.1-12.7-6.4-12.7z\"\n      fill=\"#52c41a\"/>\n  </svg>\n);\n","import React from 'react';\n\nimport LoadIcon from './LoadIcon';\nimport CheckIcon from './CheckIcon';\n\nconst Loader = (props: { loading: boolean }) => {\n  const { loading } = props;\n\n  return (\n    <div className=\"loader\">\n      {loading\n        ? (\n          <LoadIcon/>\n        ) : (\n          <CheckIcon/>\n        )\n      }\n    </div>\n  )\n};\n\nexport default Loader;\n","import React, { ChangeEvent } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Card,\n  Input,\n  Button,\n  Popconfirm, Switch,\n} from 'antd';\nimport { RouteComponentProps } from 'react-router';\n\nimport { ClearOutlined } from '@ant-design/icons';\n\nimport actions from '../../reducers/actions';\nimport { defaultUser } from '../../reducers';\nimport { IState, IUser } from '../../reducers/interfaces';\nimport Avatar from '../../components/Avatar';\nimport Loader from '../../components/Loader/index';\nimport { getFullTime } from '../../helpers/utils';\n\ninterface ISettingsProps extends RouteComponentProps {\n  loading: boolean;\n  user: IUser | null;\n  hasRight: boolean;\n  uid: string;\n  currentUser: IUser | null;\n}\n\nexport class Settings extends React.Component<ISettingsProps> {\n  componentDidMount = () => {\n    const { user, uid } = this.props;\n    if (!user) {\n      actions.getUser({ uid });\n    }\n  };\n\n  rawOnChange = (field: string, value: string | boolean) => {\n    const { user } = this.props;\n    if (!user) return;\n\n    const newSettings = {\n      ...user,\n      [field]: value,\n    };\n\n    this.setSettings(newSettings);\n  };\n\n  onChange = (field: string) =>\n    (event: ChangeEvent<HTMLInputElement>) =>\n      this.rawOnChange(field, event.target.value);\n\n  setSettings = (newSettings: {}) => {\n    const { user } = this.props;\n    if (user) {\n      actions.setUser({\n        uid: user.uid,\n        user: newSettings,\n      });\n    }\n  };\n\n  clearAvatar = () => this.setSettings({\n    ...this.props.user,\n    avatar: '',\n  });\n\n  getField = (key: string, value: string, user: IUser) => {\n    const { nickname = '' } = user;\n    const { hasRight, currentUser, uid } = this.props;\n    const disabled = !hasRight;\n\n    switch (key) {\n      case 'avatar':\n        return (\n          <div>\n            <div style={{ display: 'flex' }}>\n              <Input\n                value={value}\n                onChange={this.onChange(key)}\n                readOnly={disabled}\n              />\n              <Popconfirm\n                title=\"Очистить аватар?\"\n                onConfirm={this.clearAvatar}\n                okText=\"Да\"\n                cancelText=\"Нет\"\n                icon={<ClearOutlined style={{ color: '#ff4d4f' }}/>}\n                disabled={!value}\n              >\n                <Button\n                  disabled={disabled || !value}\n                  danger\n                >\n                  <ClearOutlined/>\n                </Button>\n              </Popconfirm>\n            </div>\n            <Avatar\n              avatar={value}\n              nickname={nickname}\n              size={128}\n              style={{ margin: '8px auto', display: 'block' }}\n            />\n          </div>\n        );\n\n      case 'uid':\n        return (\n          <Input\n            value={value}\n            readOnly\n          />\n        );\n\n      case 'lastOnline':\n        return value\n          ? (\n            <Input\n              value={getFullTime(parseInt(value))}\n              readOnly\n            />\n          ) : (\n            'Пользователь ещё не был активен'\n          );\n\n      case 'isAdmin':\n        return <>\n          {\n            (hasRight && (currentUser && currentUser.uid !== uid)) &&\n            <>\n              <Switch\n                checked={!!value}\n                onChange={(isAdmin: boolean) => this.rawOnChange(key, isAdmin)}\n              />\n            </>\n          }\n          {value ? 'Имеются' : 'Отсутствуют'}\n        </>;\n\n      default:\n        return (\n          <Input\n            defaultValue={value}\n            onChange={this.onChange(key)}\n            readOnly={disabled}\n          />\n        )\n    }\n  };\n\n  labels: { [key: string]: string } = {\n    'avatar': 'Аватар',\n    'nickname': 'Никнейм',\n    'lastOnline': 'Последняя активность',\n    'isAdmin': 'Права админа',\n    'uid': 'UID',\n  };\n\n  render = () => {\n    const { user, loading } = this.props;\n\n    return (\n      <Card\n        className=\"settings\"\n        bordered={false}\n        loading={user === undefined}\n      >\n        <Loader loading={loading}/>\n        {user && Object\n          .keys(defaultUser)\n          .map((key: string) => (\n            <Card\n              className={key}\n              key={key}\n              title={this.labels[key]}\n            >\n              {\n                // @ts-ignore\n                this.getField(key, `${user[key] || ''}`, user)\n              }\n            </Card>\n          ))\n        }\n      </Card>\n    )\n  }\n}\n\nconst mapStateToProps = (state: IState, props: ISettingsProps) => {\n  const { loading, users, currentUser } = state;\n\n  const uid = new URLSearchParams(props.match.params).get('uid') || state.uid || '0';\n  const user = users[uid];\n  if (user && !user.uid && uid) {\n    user.uid = uid;\n  }\n\n  return {\n    loading,\n    user,\n    uid,\n    hasRight: (!!user && !!currentUser) && (currentUser.uid === user.uid || !!currentUser.isAdmin),\n    currentUser,\n  };\n};\n\nexport default connect(mapStateToProps)(Settings);\n","import React from 'react';\nimport { Button, Avatar, Card } from 'antd';\n\nimport actions from '../reducers/actions';\n\nconst byeLink = 'https://cdn.lowgif.com/full/fc3d7d9abd06a92e-hi-bear-gifs-get-the-best-gif-on-giphy.gif';\n\nconst Logout = () => {\n  return (\n    <Card>\n      <Avatar\n        src={byeLink}\n        size={256}\n        style={{ margin: '0 auto', display: 'block' }}\n      />\n      <br/>\n      <br/>\n      <Button\n        type=\"primary\"\n        size=\"large\"\n        onClick={() => actions.logout({ })}\n        style={{ width: '100%' }}\n      >\n        Выйти\n      </Button>\n    </Card>\n  )\n};\n\nexport default Logout;\n","import React, { ChangeEvent, Component } from 'react';\nimport {\n  Card,\n  Input,\n  InputNumber,\n  Button,\n  Popconfirm,\n  message as notify,\n  Modal,\n  Select,\n  Switch,\n} from 'antd';\nimport { ClearOutlined, CloseOutlined } from '@ant-design/icons';\n\nimport { defaultItem, IItem } from '../../reducers/interfaces';\nimport Avatar from '../../components/Avatar';\n\ninterface IItemCreatorProps {\n  onSubmit: (item: IItem) => void;\n  onClose: () => void;\n  visible: boolean;\n  item?: IItem;\n  isAdmin?: boolean;\n}\n\nclass ItemCreator extends Component<IItemCreatorProps, IItem> {\n  state = defaultItem;\n\n  labels = {\n    id: 'ID',\n    type: 'Тип*',\n    name: 'Название*',\n    weight: 'Вес',\n    effect: 'Эффект',\n    image: 'Картинка',\n    description: 'Описание',\n    price: 'Цена',\n    capacity: 'Размер магазина',\n    armor: 'Защита',\n    approved: 'Подтверждён',\n  };\n\n  types = [\n    {\n      key: 'weapon',\n      value: 'Оружие',\n    },\n    {\n      key: 'wearable',\n      value: 'Одежда/Броня',\n    },\n    {\n      key: 'usable',\n      value: 'Используемое',\n    },\n    {\n      key: 'ammo',\n      value: 'Патроны',\n    },\n    {\n      key: 'misc',\n      value: 'Прочее',\n    },\n    {\n      key: 'note',\n      value: 'Записка',\n    },\n    {\n      key: 'key',\n      value: 'Ключ',\n    },\n    {\n      key: 'junk',\n      value: 'Мусор',\n    },\n  ];\n\n  onChange = (key: string, value: string | boolean | number) =>\n    // @ts-ignore\n    this.setState({ [key]: value });\n\n  clearImage = () =>\n    this.setState({ image: '' });\n\n  fields = {\n    id: () => false,\n    type: (value: string, key: string) => (\n      <Select\n        value={value}\n        onChange={(value: string) => this.onChange(key, value)}\n      >\n        {this.types.map(({ key, value }) => (\n          <Select.Option value={key} key={key}>\n            {value}\n          </Select.Option>\n        ))}\n      </Select>\n    ),\n    name: (value: string, key: string) => (\n      <Input\n        value={value}\n        onChange={(e: ChangeEvent<HTMLInputElement>) => this.onChange(key, e.currentTarget.value)}\n      />\n    ),\n    weight: (value: number, key: string) => (\n      <InputNumber\n        value={value}\n        min={0}\n        precision={2}\n        onChange={(value?: number) => this.onChange(key, value || 0)}\n        step={0.01}\n      />\n    ),\n    effect: (value: string, key: string) => (\n      <Input\n        value={value}\n        onChange={(e: ChangeEvent<HTMLInputElement>) => this.onChange(key, e.currentTarget.value)}\n      />\n    ),\n    image: (value: string, key: string) => (\n      <div>\n        <div style={{ display: 'flex' }}>\n          <Input\n            value={value}\n            onChange={(e: ChangeEvent<HTMLInputElement>) => this.onChange(key, e.currentTarget.value)}\n          />\n          <Popconfirm\n            title=\"Очистить картинку?\"\n            onConfirm={this.clearImage}\n            okText=\"Да\"\n            cancelText=\"Нет\"\n            icon={<ClearOutlined style={{ color: '#ff4d4f' }}/>}\n          >\n            <Button\n              disabled={!value}\n              danger\n            >\n              <ClearOutlined/>\n            </Button>\n          </Popconfirm>\n        </div>\n        <Avatar\n          shape=\"square\"\n          avatar={value}\n          nickname={value}\n          size={128}\n          style={{ margin: '8px auto', display: 'block' }}\n        />\n      </div>\n    ),\n    description: (value: string, key: string) => (\n      <Input.TextArea\n        value={value}\n        onChange={(e: ChangeEvent<HTMLTextAreaElement>) => this.onChange(key, e.currentTarget.value)}\n      />\n    ),\n    price: (value: number, key: string) => (\n      <InputNumber\n        value={value}\n        min={0}\n        step={1}\n        onChange={(value?: number) => this.onChange(key, value || 0)}\n      />\n    ),\n    capacity: (value: number, key: string, item: IItem) => (\n      item.type === 'weapon' && <InputNumber\n        value={value}\n        min={1}\n        step={1}\n        onChange={(value?: number) => this.onChange(key, value || 1)}\n      />\n    ),\n    armor: (value: number, key: string, item: IItem) => (\n      item.type === 'wearable' && <InputNumber\n        value={value}\n        min={0}\n        step={1}\n        onChange={(value?: number) => this.onChange(key, value || 0)}\n      />\n    ),\n    approved: (value: boolean, key: string) => (\n      this.props.isAdmin && <Switch\n        checked={value}\n        disabled={!this.props.isAdmin}\n        onChange={(checked: boolean) => this.onChange(key, checked)}\n      />\n    ),\n  };\n\n  getField = (key: string, value: string | number | boolean, item: IItem) => {\n    // @ts-ignore\n    const field = this.fields[key];\n    return field && field(value, key, item);\n  };\n\n  onSubmit = () => {\n    const { state } = this;\n    const { onSubmit, item = {} } = this.props;\n\n    const newItem: IItem = { ...state };\n    Object.keys(state).forEach((key: string) =>\n      // @ts-ignore\n      // eslint-disable-next-line\n      newItem[key] = newItem[key] === defaultItem[key] && item[key] || (newItem[key])\n    );\n\n    if (!newItem.name) {\n      notify.error('Имя не может быть пустым');\n      return;\n    }\n\n    onSubmit(newItem);\n    this.setState(defaultItem);\n  };\n\n  content = () => {\n    const { state } = this;\n    const { item = {} } = this.props;\n\n    return (\n      <div className=\"item-creator\">\n        <div className=\"item-creator__body\">\n          {Object\n            .keys(defaultItem)\n            .map((key: string) => {\n                // @ts-ignore\n                // eslint-disable-next-line\n                const value = state[key] === defaultItem[key] && item[key] || (state[key]);\n                const field = this.getField(key, value, state);\n                return field && (\n                  <Card\n                    className={key}\n                    key={key}\n                    // @ts-ignore\n                    title={this.labels[key]}\n                  >\n                    {field}\n                  </Card>\n                )\n              }\n            )\n          }\n        </div>\n        <div className=\"item-creator__controls\">\n          <Popconfirm\n            title=\"Все данные будут обнулены\"\n            onConfirm={() => this.setState(defaultItem)}\n            okText=\"Очистить\"\n            cancelText=\"Отмена\"\n            icon={<ClearOutlined style={{ color: '#ff4d4f' }}/>}\n          >\n            <Button>\n              Очистить\n            </Button>\n          </Popconfirm>\n          <Popconfirm\n            title=\"Подтвердить изменения?\"\n            onConfirm={this.onSubmit}\n            okText=\"Готово\"\n            cancelText=\"Отмена\"\n            icon={<ClearOutlined style={{ color: '#15395b' }}/>}\n          >\n            <Button>\n              Готово\n            </Button>\n          </Popconfirm>\n        </div>\n      </div>\n    )\n  };\n\n  render = () => {\n    const { onClose, visible } = this.props;\n\n    return (\n      <Modal\n        className=\"item-creator-modal\"\n        centered\n        closable={false}\n        onCancel={onClose}\n        footer={null}\n        visible={visible}\n        title={\n          <CloseOutlined onClick={onClose}/>\n        }\n      >\n        {this.content()}\n      </Modal>\n    )\n  }\n}\n\nexport default ItemCreator;\n","import React, { Component } from 'react';\nimport {\n  Dropdown,\n  Menu,\n  Button,\n  Empty,\n} from 'antd';\nimport { InsertRowBelowOutlined } from '@ant-design/icons';\n\nimport { IItem, IUser } from '../../reducers/interfaces';\nimport Item from '../../components/Item';\n\nexport interface IControl {\n  label: string,\n  onClick: (item: IItem) => void;\n  condition?: (item: IItem) => boolean;\n  isAdmin?: boolean;\n}\n\ninterface IItemsListProps {\n  items: IItem[];\n  uid?: string;\n  currentUser: IUser | null;\n  controls?: IControl[];\n}\n\nclass ItemsList extends Component<IItemsListProps> {\n  getFooter = (item: IItem) => {\n    const { controls } = this.props;\n    if (!controls) return;\n\n    const controlButtons = controls\n      .map(({ label, onClick, isAdmin, condition }: IControl) => {\n        if (condition && !condition(item)) return false;\n\n        return (\n          <Menu.Item key={label}>\n            <Button onClick={() => onClick && onClick(item)}>\n              {label}\n            </Button>\n          </Menu.Item>\n        );\n      }).filter(Boolean);\n    if (controlButtons.length === 0) return;\n\n    return (\n      <Dropdown\n        overlay={<Menu>{controlButtons}</Menu>}\n        trigger={['click']}\n      >\n        <Button>\n          <InsertRowBelowOutlined/>\n        </Button>\n      </Dropdown>\n    )\n  };\n\n  render = () => {\n    const { items, uid } = this.props;\n\n    if (!items || items.length === 0) {\n      return (\n        <Empty description=\"Нет предметов\"/>\n      )\n    }\n\n    return (\n      <div className=\"items-body\">\n        {items.map((item: IItem) => (\n          <Item\n            key={item.id + item.time}\n            item={item}\n            footer={this.getFooter(item)}\n            uid={uid}\n          />\n        ))}\n      </div>\n    )\n  }\n}\n\nexport default ItemsList;\n","import React, { Component } from 'react';\nimport {\n  Switch,\n  Radio,\n  Card,\n} from 'antd';\n\nimport Loader from '../../components/Loader';\nimport { RouteComponentProps } from \"react-router\";\nimport { IItem, ItemType } from \"../../reducers/interfaces\";\n\nexport interface IItemsTableProps extends RouteComponentProps {\n  loading: boolean;\n  items: IItem[];\n}\n\nexport interface IItemsTableState {\n  searchString: string;\n  filters: { [key: string]: boolean };\n  showApproved: boolean;\n  showNotApproved: boolean;\n}\n\nclass ItemsTable<P extends IItemsTableProps, S extends IItemsTableState> extends Component<P, S> {\n  defaultState = {\n    searchString: '',\n    showApproved: true,\n    showNotApproved: false,\n    filters: {\n      'weapon': true,\n      'usable': true,\n      'wearable': true,\n      'junk': true,\n      'ammo': true,\n      'note': true,\n      'key': true,\n      'misc': true,\n    },\n  };\n\n  get items() {\n    const { searchString, filters, showApproved, showNotApproved } = this.state;\n\n    const _searchString = searchString.toLowerCase();\n    return this\n      .props\n      .items\n      .filter((item: IItem) => {\n        const { name, description, effect, type, approved } = item;\n        return (\n          (name && name.toLowerCase().indexOf(_searchString) > -1)\n          || (description && description.toLowerCase().indexOf(_searchString) > -1)\n          || (effect && effect.toLowerCase().indexOf(_searchString) > -1)\n        ) && (\n          // @ts-ignore\n          filters[type]\n        ) && (\n          (showApproved && approved === true)\n          || (showNotApproved && approved === false)\n        )\n      })\n  }\n\n  getFilters = (state: IItemsTableState) => {\n    const { showNotApproved, showApproved, filters } = state;\n\n    const getButton = (name: ItemType, label: string) => (\n      <div\n        tabIndex={0}\n        className=\"items-approved-button\"\n        // @ts-ignore\n        onClick={() => {\n          console.log(name, filters[name]);\n          this.setState({ filters: { ...filters, [name]: !filters[name] } })\n        }}\n      >\n        <Switch\n          checked={\n            // @ts-ignore\n            filters[name]\n          }/>\n        {label}\n      </div>\n    );\n\n    return (\n      <Radio.Group\n        defaultValue={undefined}\n        style={{ display: 'flex', flexDirection: 'column' }}\n      >\n        {getButton('weapon', 'Оружие')}\n        {getButton('usable', 'Используемое')}\n        {getButton('wearable', 'Одежда/Броня')}\n        {getButton('ammo', 'Патроны')}\n        {getButton('junk', 'Мусор')}\n        {getButton('note', 'Записки')}\n        {getButton('key', 'Ключи')}\n        {getButton('misc', 'Прочее')}\n        <div tabIndex={0} className=\"items-approved-button\"\n             onClick={() => this.setState({ showApproved: !showApproved })}>\n          <Switch checked={showApproved}/>Подтвержденные\n        </div>\n        <div tabIndex={0} className=\"items-approved-button\"\n             onClick={() => this.setState({ showNotApproved: !showNotApproved })}>\n          <Switch checked={showNotApproved}/>Не Подтвержденные\n        </div>\n      </Radio.Group>\n    )\n  };\n\n  getPageControls: (() => JSX.Element[]) = () => [];\n  getHeader: ((items: IItem[]) => JSX.Element) = () => {\n    return (\n      <div className=\"items-controls\">\n        {this.getPageControls()}\n      </div>\n    )\n  };\n\n  getContent: ((items: IItem[]) => JSX.Element) = () => <React.Fragment/>;\n  getFooter: ((items: IItem[]) => JSX.Element) = () => <React.Fragment/>;\n\n  render = () => {\n    const { loading } = this.props;\n    const items = this.items;\n\n    return (\n      <Card className=\"items\">\n        <Loader loading={loading}/>\n        {this.getHeader(items)}\n        {this.getContent(items)}\n        {this.getFooter(items)}\n      </Card>\n    )\n  }\n}\n\nexport default ItemsTable;\n","import React, { useState } from 'react';\nimport { InputNumber, Modal, Slider } from 'antd';\nimport { InputNumberProps } from 'antd/lib/input-number';\nimport { ModalFuncProps } from 'antd/lib/modal';\n\nimport { IItem } from '../reducers/interfaces';\n\ninterface IAmountModalProps {\n  item: IItem;\n  inputProps?: InputNumberProps;\n  modalProps?: ModalFuncProps;\n  onSubmit?: (value: number) => void;\n  onChange?: (value?: number | [number, number]) => void;\n  max?: number;\n}\n\nexport const AmountModal: (props: IAmountModalProps) => JSX.Element = (props) => {\n  const { item, inputProps, onChange, max } = props;\n\n  const [amount, setAmount] = useState(1);\n  const onInnerChange = (value?: number | [number, number]) => {\n    if (typeof value === 'number') {\n      setAmount(value || 1);\n      onChange && onChange(value || 1);\n    }\n  };\n\n  return (\n    <>\n      <InputNumber\n        defaultValue={1}\n        value={amount}\n        min={1}\n        max={max || item.amount}\n        onChange={onInnerChange}\n        {...(inputProps || {})}\n      />\n      <Slider\n        value={amount}\n        defaultValue={1}\n        min={1}\n        max={max || item.amount}\n        onChange={onInnerChange}\n        dots={(max || item.amount || 10) <= 12}\n      />\n    </>\n  )\n};\n\n/**\n * This function creates modal for choosing item quantity.\n * I didn't made a simple modal, because I would need to make\n * a lot of state actions in order to pass all needed data\n */\nconst amountModal: (props: IAmountModalProps) => void = (props) => {\n  const { item, onSubmit, modalProps, max } = props;\n  const enough = (max && max >= 2) || (!max && item.amount && item.amount >= 2);\n  const title = enough\n    ? `Сколько? (макс. ${max || item.amount}шт)`\n    : 'Уверены?';\n\n  let amount = 1;\n\n  Modal.confirm({\n    title: title,\n    className: 'amount-modal',\n    content: enough && (\n      <AmountModal\n        {...props}\n        onChange={(value?: number | [number, number]) => {\n          if (typeof value === 'number') amount = value;\n        }}\n      />\n    ),\n    onOk: (close) => {\n      onSubmit && onSubmit(amount);\n      close();\n    },\n    okText: 'Готово',\n    cancelText: 'Отмена',\n    maskClosable: true,\n    centered: true,\n    ...(modalProps || {}),\n  });\n};\n\nexport default amountModal;\n","import React, { ChangeEvent } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Button,\n  Input,\n  Dropdown,\n  InputNumber,\n  Tooltip,\n  Modal,\n} from 'antd';\nimport { FilterOutlined } from '@ant-design/icons';\n\nimport '../../styles/items.scss';\nimport actions from '../../reducers/actions';\nimport { IDeletedItemData, IItem, IState, IUser } from '../../reducers/interfaces';\nimport ItemCreator from './ItemCreator';\nimport ItemsList, { IControl } from '../ItemsTable/ItemsList';\nimport ItemsTable, { IItemsTableProps, IItemsTableState } from \"../ItemsTable\";\nimport amountModal from \"../../components/AmountModal\";\n\nexport interface IItemsProps extends IItemsTableProps {\n  user: IUser | null;\n  uid: string;\n  currentUser: IUser | null;\n  deletingItemData: IDeletedItemData;\n}\n\ninterface IItemsState extends IItemsTableState {\n  creatingItem: boolean;\n  editingItem: IItem | null;\n  itemsToLoad: number;\n}\n\nexport class Items extends ItemsTable<IItemsProps, IItemsState> {\n  state = {\n    ...this.defaultState,\n    creatingItem: false,\n    editingItem: null,\n    itemsToLoad: 99,\n  };\n\n  componentDidMount = () => {\n    actions.getItems({});\n  };\n\n  getPageControls = () => [\n    <Button\n      key=\"creator\"\n      onClick={() => this.toggleCreatingItem(true)}\n    >\n      Создать предмет\n    </Button>,\n    <Input\n      key=\"search\"\n      placeholder=\"Поиск предмета\"\n      onChange={(e: ChangeEvent<HTMLInputElement>) => this.setState({ searchString: e.currentTarget.value })}\n      allowClear\n    />,\n    <Dropdown\n      key=\"filters\"\n      overlay={this.getFilters(this.state)}\n      trigger={['click']}\n    >\n      <Button>\n        <FilterOutlined/>\n      </Button>\n    </Dropdown>,\n    <Tooltip\n      key=\"load-amount\"\n      title=\"Кол-во загружаемых предметов за раз\"\n    >\n      <InputNumber\n        value={this.state.itemsToLoad}\n        min={1}\n        max={99}\n        onChange={(itemsToLoad?: number) => this.setState({ itemsToLoad: itemsToLoad || 1 })}\n      />\n    </Tooltip>\n  ];\n\n  cardControls: IControl[] = [\n    {\n      label: 'Взять',\n      onClick: (item: IItem) => amountModal({\n        item: item,\n        max: 100,\n        onSubmit: (amount: number) =>\n          actions.giveItem({\n            id: item.id,\n            uid: this.props.uid,\n            itemType: item.type,\n            amount,\n          })\n      }),\n      condition: (item: IItem) => item.approved && Boolean(this.props.currentUser && this.props.currentUser.isAdmin)\n    },\n    {\n      label: 'Редактировать',\n      onClick: (item: IItem) => this.toggleEditingItem(item),\n      condition: (item: IItem) => Boolean((this.props.uid === item.author && !item.approved) || (this.props.currentUser && this.props.currentUser.isAdmin))\n    },\n    {\n      label: 'В консоль',\n      onClick: console.log,\n      condition: () => Boolean(this.props.currentUser && this.props.currentUser.isAdmin)\n    },\n    {\n      label: 'Удалить',\n      onClick: (item: IItem) => this.deleteModal(item),\n      condition: (item: IItem) => Boolean((this.props.uid === item.author && !item.approved) || (this.props.currentUser && this.props.currentUser.isAdmin))\n    },\n  ];\n\n  toggleCreatingItem = (creatingItem: boolean = !this.state.creatingItem) =>\n    this.setState({ creatingItem });\n\n  toggleEditingItem = (item?: IItem | null) =>\n    this.setState({ editingItem: item || null });\n\n  onCreateItem = (item: IItem) => {\n    actions.setItem({ item });\n    this.toggleCreatingItem(false);\n    this.toggleEditingItem(null);\n  };\n\n  getCreators = () => {\n    const { creatingItem, editingItem } = this.state;\n    const { currentUser } = this.props;\n    const isAdmin = !!(currentUser && currentUser.isAdmin);\n\n    return (\n      <>\n        <ItemCreator\n          visible={creatingItem}\n          onClose={() => this.toggleCreatingItem(false)}\n          onSubmit={this.onCreateItem}\n          isAdmin={isAdmin}\n        />\n        <ItemCreator\n          visible={!!editingItem}\n          onClose={() => this.toggleEditingItem(null)}\n          onSubmit={this.onCreateItem}\n          item={editingItem || undefined}\n          isAdmin={isAdmin}\n        />\n      </>\n    )\n  };\n\n  deleteModal: (item: IItem) => void = (item: IItem) => Modal.confirm({\n    title: 'Удалить',\n    content: 'Это действие невозможно отменить. Вы уверены?',\n    maskClosable: true,\n    okText: 'Удалить',\n    cancelText: 'Отмена',\n    onOk: (close) => {\n      actions.deleteItem({ id: item.id });\n      close();\n    }\n  });\n\n  getContent = (items: IItem[]) => {\n    const { currentUser } = this.props;\n    return (\n      <ItemsList\n        items={items}\n        currentUser={currentUser}\n        controls={this.cardControls}\n      />\n    )\n  };\n\n  getDeletingModal = () => {\n    const { deletingItemData, loading } = this.props;\n    const { itemId, usersChecked, messagesCleared, messagesChecked, deleted, usersCleared, done } = deletingItemData;\n    return itemId && (\n      <div className=\"item-deleting-modal\">\n        <div>ID предмета: {itemId}</div>\n        <div>Удалён из списка предметов: {deleted ? 'готово' : 'в процессе'}</div>\n        <div>Проверено сообщений: {messagesChecked}</div>\n        <div>Очищено сообщений: {messagesCleared}</div>\n        <div>Проверено пользователей: {usersChecked}</div>\n        <div>Очищено пользователей: {usersCleared}</div>\n        <Button\n          onClick={() => actions.deleteItemProgress({ field: 'itemId', value: '' })}\n          disabled={!done || loading}\n        >\n          Готово\n        </Button>\n        <button\n          className=\"secret\"\n          onClick={() => actions.deleteItemProgress({ field: 'itemId', value: '' })}\n          disabled={loading}\n        />\n      </div>\n    )\n  };\n\n  getFooter = (items: IItem[]): JSX.Element => {\n    const { itemsToLoad } = this.state;\n    const { loading } = this.props;\n    return (\n      <>\n        {this.getCreators()}\n        {this.getDeletingModal()}\n        {!loading && (\n          <Button\n            className=\"items-load-button\"\n            onClick={() => actions.getMoreItems({ amount: itemsToLoad, lastItem: items[items.length - 1] })}\n          >\n            Загрузить {itemsToLoad}шт\n          </Button>\n        )}\n      </>\n    )\n  };\n}\n\nconst mapStateToProps = (state: IState) => {\n  const { loading, currentUser, uid, items, deletingItemData } = state;\n\n  return {\n    loading,\n    currentUser,\n    uid,\n    items,\n    deletingItemData,\n  };\n};\n\nexport default connect(mapStateToProps)(Items);\n","import React, { Component } from 'react';\nimport { Menu } from 'antd';\nimport '../styles/active-users.scss';\n\nimport { IUsers, IUser, IState } from '../reducers/interfaces';\nimport { connect } from \"react-redux\";\nimport actions from \"../reducers/actions\";\nimport { getFullTime, isOnline } from \"../helpers/utils\";\nimport Avatar from './Avatar';\n\ninterface IActiveUsersListProps {\n  activeUsers: string[];\n  uid: string;\n  loading: boolean;\n  users: IUsers;\n  onClick: (user: IUser) => void;\n}\n\nclass ActiveUsersList extends Component<IActiveUsersListProps> {\n  componentDidMount = () => {\n    actions.getUsersActivity({});\n  };\n\n  componentDidUpdate = () => {\n    const { activeUsers, users, loading } = this.props;\n\n    if (!loading && activeUsers.length > 0) {\n      activeUsers.forEach((uid: string) => {\n        if (!users[uid])\n          actions.getUser({ uid });\n      });\n    }\n  };\n\n  render = () => {\n    const { activeUsers, users, onClick } = this.props;\n\n    const validUsers = activeUsers\n      .filter((uid: string) => users[uid] && users[uid].uid)\n      .map((uid: string) => users[uid]);\n\n    return (\n      <Menu className=\"active-users\">\n        {validUsers.map((user: IUser) => (\n          <div\n            className=\"active-users__item\"\n            key={user.uid}\n            onClick={() => onClick(user)}\n          >\n              <div className={`active-users__body ${isOnline(user.lastOnline) ? 'online' : ''}`}>\n                <Avatar\n                  avatar={user.avatar}\n                  nickname={user.nickname}\n                />\n                <div className=\"active-users__nickname\">\n                  {user.nickname || user.uid}\n                </div>\n              </div>\n              {user.lastOnline && (\n                <div className=\"active-users__online\">\n                  {getFullTime(user.lastOnline)}\n                </div>\n              )}\n          </div>\n        ))}\n      </Menu>\n    )\n  }\n}\n\nconst mapStateToProps = (state: IState) => {\n  const { usersActivity, uid, loading, users } = state;\n\n  return {\n    users,\n    activeUsers: Object.keys(usersActivity),\n    uid,\n    loading,\n  }\n};\n\nexport default connect(mapStateToProps)(ActiveUsersList);\n","import React, { ChangeEvent } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Input,\n  Dropdown,\n  Button,\n  message as notify,\n  Modal,\n} from 'antd';\nimport { FilterOutlined } from '@ant-design/icons';\n\nimport { IInventory, IItem, IState, IUser } from '../../reducers/interfaces';\nimport actions from '../../reducers/actions';\nimport ItemsList, { IControl } from '../ItemsTable/ItemsList';\nimport ActiveUsersList from '../../components/ActiveUsersList';\nimport ItemsTable, { IItemsTableProps, IItemsTableState } from '../ItemsTable';\nimport amountModal from '../../components/AmountModal';\nimport { getItemName } from \"../../helpers/utils\";\n\ninterface IInventoryProps extends IItemsTableProps {\n  inventory: IInventory;\n  loading: boolean;\n  user: IUser | null;\n  uid: string;\n  items: IItem[];\n  currentUser: IUser | null;\n}\n\ninterface IInventoryState extends IItemsTableState {\n  passItem: IItem | null;\n}\n\nclass Inventory extends ItemsTable<IInventoryProps, IInventoryState> {\n  state = {\n    ...this.defaultState,\n    editingItem: null,\n    passItem: null,\n  };\n\n  componentDidMount = () => {\n    const { user, uid } = this.props;\n    if (!user && uid) {\n      actions.getUser({ uid });\n    }\n  };\n\n  getPageControls = () => [\n    <Input\n      key=\"search\"\n      placeholder=\"Поиск предмета\"\n      onChange={(e: ChangeEvent<HTMLInputElement>) => this.setState({ searchString: e.currentTarget.value })}\n      allowClear\n    />,\n    <Dropdown\n      key=\"filters\"\n      overlay={this.getFilters(this.state)}\n      trigger={['click']}\n    >\n      <Button>\n        <FilterOutlined/>\n      </Button>\n    </Dropdown>,\n    this.getPassModal(),\n  ];\n\n  getInventoryItems = (items: IItem[]) => {\n    const { inventory, loading } = this.props;\n\n    if (inventory && !loading) {\n      const inventoryItems = Object.values(inventory);\n      const loadedItems: IItem[] = [];\n      const notLoadedItems: string[] = [];\n\n      inventoryItems\n        .forEach((inventoryItem) => {\n          const { id } = inventoryItem;\n          const item = items.find((item: IItem) => item.id === id);\n          if (item) {\n            loadedItems.push({\n              ...item,\n              ...inventoryItem,\n            });\n          } else {\n            notLoadedItems.push(id);\n          }\n        });\n\n      if (notLoadedItems.length > 0) {\n        actions.getItemById({ id: notLoadedItems.shift() });\n      }\n\n      return loadedItems;\n    }\n\n    return [];\n  };\n\n  passItem = (item?: IItem | null) =>\n    this.setState({ passItem: item || null });\n\n  getPassModal = () => {\n    const { passItem } = this.state;\n    return (\n      <Modal\n        key=\"pass-modal\"\n        visible={!!passItem}\n        closable={false}\n      >\n        <ActiveUsersList onClick={(user: IUser) => {\n          if (passItem !== null) {\n            actions.passItem({\n              uid: this.props.uid,\n              // @ts-ignore\n              id: passItem.id,\n              to: user,\n              item: passItem,\n            });\n            this.passItem(null);\n          }\n        }}/>\n      </Modal>\n    )\n  };\n\n  getDeleteModalContent = (item: IItem) => (\n    <div>\n      <span>Это действие невозможно отменить. Вы уверены?</span>\n      <br/> <br/> <br/>\n      <Button\n        style={{ width: '-webkit-fill-available' }}\n        onClick={() => {\n          actions.removeItem({ id: item.id, uid: this.props.uid });\n          notify.success('Удалено');\n        }}\n      >Удалить один</Button>\n    </div>\n  );\n\n  cardControls: IControl[] = [\n    {\n      label: 'Показать',\n      onClick: (item: IItem) => amountModal({\n        item: item,\n        onSubmit: (amount: number) => actions.passItem({\n          id: item.id,\n          uid: this.props.uid,\n          demonstrate: true,\n          item: {\n            ...item,\n            amount,\n          }\n        })\n      })\n    },\n    {\n      label: 'Использовать',\n      onClick: (item: IItem) => Modal.confirm({\n        title: `Использовать ${getItemName(item, false)}?`,\n        onOk: (close) => {\n          actions.passItem({\n            id: item.id,\n            uid: this.props.uid,\n            item: {\n              ...item,\n              amount: 1,\n            },\n            use: true,\n          });\n          close();\n        },\n        okText: 'Да',\n        cancelText: 'Отмена',\n      }),\n      condition: (item: IItem) => item.type === 'usable',\n    },\n    {\n      label: 'Выбросить',\n      onClick: (item: IItem) => amountModal({\n        item: item,\n        onSubmit: (amount: number) => actions.passItem({\n          id: item.id,\n          uid: this.props.uid,\n          item: {\n            ...item,\n            amount,\n          },\n        })\n      }),\n    },\n    {\n      label: 'Передать',\n      onClick: (item: IItem) => amountModal({\n        item: item,\n        onSubmit: (amount: number) => this.passItem({ ...item, amount })\n      })\n    },\n    {\n      label: 'В консоль',\n      onClick: console.log,\n      condition: () => Boolean(this.props.currentUser && this.props.currentUser.isAdmin)\n    },\n    {\n      label: 'Убрать',\n      onClick: (item: IItem) => amountModal({\n        item: item,\n        onSubmit: (amount: number) =>\n          actions.removeItem({ id: item.id, uid: this.props.uid, amount })\n      }),\n      condition: () => Boolean(this.props.currentUser && this.props.currentUser.isAdmin)\n    },\n  ];\n\n  getContent = (items: IItem[]) => {\n    const { currentUser, uid } = this.props;\n\n    return (\n      <ItemsList\n        uid={uid}\n        currentUser={currentUser}\n        items={this.getInventoryItems(items)}\n        controls={(currentUser && (currentUser.uid === uid || currentUser.isAdmin))\n          ? this.cardControls\n          : undefined\n        }\n      />\n    )\n  };\n}\n\nconst mapStateToProps = (state: IState, props: IInventoryProps) => {\n  const { loading, users, currentUser, items, messages, usersActivity } = state;\n\n  const uid = new URLSearchParams(props.match.params).get('uid') || state.uid || '0';\n  const user = users[uid];\n  if (user && !user.uid && uid) {\n    user.uid = uid;\n  }\n\n  const inventory = user ? user.inventory : {};\n\n  return {\n    loading,\n    uid,\n    items,\n    inventory,\n    user,\n    currentUser,\n    users,\n    messages,\n    usersActivity,\n  };\n};\n\nexport default connect(mapStateToProps)(Inventory);\n","import { ConnectedComponent } from 'react-redux';\n\nimport Chat from '../containers/Chat/index';\nimport Settings from '../containers/Settings';\nimport Logout from '../components/Logout';\nimport Items from '../containers/Items';\nimport Help from '../components/Help';\nimport Inventory from '../containers/Inventory';\n\nexport interface IRoute {\n  path: string;\n  component: ConnectedComponent<any, any> | (() => JSX.Element);\n  exact?: boolean;\n}\n\nconst routes: IRoute[] = [\n  {\n    path: '/text-roleplay/chat',\n    component: Chat,\n  },\n  {\n    path: '/text-roleplay/:uid/settings',\n    component: Settings,\n    exact: true,\n  },\n  {\n    path: '/text-roleplay/:uid/inventory',\n    component: Inventory,\n    exact: true,\n  },\n  {\n    path: '/text-roleplay/inventory',\n    component: Inventory,\n    exact: true,\n  },\n  {\n    path: '/text-roleplay/settings',\n    component: Settings,\n    exact: true,\n  },\n  {\n    path: '/text-roleplay/items',\n    component: Items,\n  },\n  {\n    path: '/text-roleplay/help',\n    component: Help,\n  },\n  {\n    path: '/text-roleplay/logout',\n    component: Logout,\n  },\n];\n\nexport default routes;\n","import React from 'react';\nimport { Card } from 'antd';\n\nexport default () => (\n  <Card className=\"help\">\n    Чат для текстовой ролевой игры. Инвентарь, управление чатом, настройки персонажа, профиля.\n    <br/><br/>\n    <h1>Возможности</h1>\n    <pre>\n      - Отправлять в чат картинки из буфера обмена (ctrl + v) либо перетаскивая в поле ввода<br/>\n      - Увеличение картинки<br/>\n      - Вставка ссылок<br/>\n      - Вставка YouTube видео (полная ссылка, не youtu.be)<br/>\n      - Броски дайсов<br/>\n      - В одном сообщении может быть не больше 10-ти дайсов\n      - Кол-во дайсов в первой цифре. Не больше 10<br/>\n      - Буква \"д\" или \"d\" вторым символом<br/>\n      - Размер дайса во второй цифре. Только размера 4 6 8 10 12 и 20<br/>\n      - Примеры: 1д10, 2д20, 9d4<br/>\n      - При неправильном дайсе сообщение не будет отправлено<br/>\n      - Дайс можно писать в любом месте сообщения и сколько угодно раз<br/>\n      - При наведении на брошенный дайс можно увидеть полный результат<br/>\n      - Крит попадания и промахи слегка подсвечиваются зеленым и красным соответственно<br/>\n      - РП сообщение, если первым символом написать \"*\"<br/>\n      - Игроки онлайн имеют синюю обводку вокруг аватара<br/>\n      - При наведении на игрока показывается последний онлайн<br/>\n      - При клике на игрока открывается страница настроек<br/>\n      - Админы могут редактировать настройки других игроков<br/>\n      - Настройки имени и аватара<br/>\n      - Настройки применяются сразу после изменения (даже в процессе редактирования)<br/>\n      - Все пользователи видят изменения<br/>\n      - При наведении на время сообщения показывается его дата<br/>\n      - Сообщения от одного автора сгруппированы<br/>\n      - Предметы (создание, удаление, редактирование)<br/>\n      - Только админ может создавать предметы<br/>\n      - Удалять и редактировать можно только предметы созданные тобой же, либо если админ<br/>\n      - Фильтр по типу предмета<br/>\n      - Поиск одновременно по названию, описанию и эффекту предметов<br/>\n      - Вес и стоимость не показываются, если нулевая<br/>\n      - Количество не показывается, если предмет один<br/>\n      - Загрузка больше предметов по нажатию на кнопку (не сортированных)<br/>\n      - Выбор кол-во загружаемых предметов<br/>\n      - В верхнем левом углу дата последнего билда проекта. Появляется только при наведении курсора<br/>\n      - Инвентарь<br/>\n      - Админ может взять в инвентарь предметы из списка<br/>\n      - Предмет из инвентаря может быть показан другим в чате<br/>\n      - Предмет может быть использован, чем будет израсходован (1шт)<br/>\n      - Предмет можно выбросить в чат и любой игрок может его подобрать<br/>\n      - Передача предмета другим игрокам<br/>\n      - Можно зайти в чужой инвентарь без редактирования<br/>\n      - <br/>\n    </pre>\n\n    <h1>Баги/ошибки/исправления</h1>\n    <pre>\n      - Ссылки на гугл дают SameSite cookies предупреждение<br/>\n      - Решить, как попасть на чужую страницу инвентаря<br/>\n      - Сделать регистрацию с подтверждением аккаунта от админа<br/>\n      - Сделать lazy loading для подгрузки проекта только после регистрации<br/>\n      - Lazy loading для каждой основной страницы<br/>\n      - Нужна кнопка быстрого скролла в низ чата<br/>\n      - Загрузка аватара через буфер обмена<br/>\n      - Добавить подтверждение к отправке картинки<br/>\n      - Порезать контейнеры на файлы поменьше<br/>\n      - У подтвержденного предмета нельзя убрать статус подтвержденного<br/>\n      - Отрефакторить ItemCreator на форму<br/>\n      - Показывать дату и автора, даже если они сгруппированы (как?)<br/>\n      - <br/>\n    </pre>\n\n    <h1>Todo</h1>\n    <pre>\n      - Character page<br/>\n      - Effect cards?<br/>\n      - Local Notes<br/>\n      - Global notes<br/>\n      - Drawing<br/>\n      - <br/>\n    </pre>\n  </Card>\n)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Form,\n  Input,\n  Button,\n  Card,\n  Alert,\n} from 'antd';\n\nimport actions from '../reducers/actions';\nimport { IState } from '../reducers/interfaces';\n\ninterface ILoginProps {\n  loading: boolean;\n  error: Error | false;\n}\n\nconst Login = (props: ILoginProps) => {\n  const { error, loading } = props;\n\n  return (\n    <Card loading={loading}>\n      <Form\n        onFinish={(values) => actions.login(values)}\n      >\n        <Form.Item\n          label=\"Email\"\n          name=\"email\"\n          rules={[{ required: true, message: 'Введите e-mail!' }]}\n        >\n          <Input/>\n        </Form.Item>\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[{ required: true, message: 'Введите пароль!' }]}\n        >\n          <Input.Password/>\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n          >\n            Войти\n          </Button>\n        </Form.Item>\n      </Form>\n      {error && (\n        <Alert\n          type=\"error\"\n          message={error.message}\n        />\n      )}\n    </Card>\n  );\n};\n\nconst mapStateToProps = (state: IState) => {\n  const { loading, error } = state;\n\n  return { loading, error };\n};\n\nexport default connect(mapStateToProps)(Login);\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport routes, { IRoute } from '../configs/routes';\nimport Login from './Login';\nimport { IState } from '../reducers/interfaces';\n\ninterface IRouterProps {\n  isLoggedIn: boolean;\n}\n\nfunction Router(props: IRouterProps) {\n  if (!props.isLoggedIn) {\n    return (\n      <Switch>\n        <Route\n          path=\"*\"\n          component={Login}\n        />\n      </Switch>\n    )\n  }\n\n  return (\n    <Switch>\n      {\n        routes.map((value: IRoute) =>\n          <Route\n            key={value.path}\n            path={value.path}\n            component={value.component}\n            exact={value.exact || false}\n          />\n        )\n      }\n      <Redirect to=\"/text-roleplay/chat\"/>\n    </Switch>\n  );\n}\n\nexport default connect((state: IState) => ({ isLoggedIn: state.isLoggedIn }))(Router);\n","import React, { Component } from 'react';\nimport { BrowserRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { message } from 'antd';\nimport 'antd/dist/antd.css';\n\nimport Menu from './components/Menu';\nimport Router from './components/Router';\n\nimport './App.css';\nimport './styles/antd-dark.scss';\nimport './styles/components.scss';\nimport { listenForActivity } from './helpers/utils';\nimport { IState } from './reducers/interfaces';\nimport actions from \"./reducers/actions\";\n\n// @ts-ignore\nconst buildDate = (<div className=\"build-date\">build date {window.buildDate.replace('_', ' ')}</div>);\n\nclass App extends Component<{ redirect?: string; notify?: string }> {\n  componentDidMount = listenForActivity;\n\n  componentDidUpdate = () => {\n    const { notify, redirect } = this.props;\n\n    if (notify) {\n      message.info(notify);\n      actions.notifySuccess({});\n    }\n    if (redirect) {\n      actions.redirectSuccess({});\n    }\n  };\n\n  getRedirect = () => {\n    const { redirect } = this.props;\n    return redirect && <Redirect to={redirect}/>;\n  };\n\n  render = () => {\n    return (\n      <>\n        {buildDate}\n        <BrowserRouter>\n          {this.getRedirect()}\n          <Menu/>\n          <div className=\"app\">\n            <Router/>\n          </div>\n        </BrowserRouter>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: IState) => ({ redirect: state.redirect, notify: state.notify });\nexport default connect(mapStateToProps)(App);\n","import _firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nimport firebaseConfig from '../configs/firebase.json';\nimport actions from '../reducers/actions';\n\nconst firebase = _firebase.initializeApp(firebaseConfig);\nconst auth = firebase.auth();\nconst database = firebase.database();\n\nauth.onAuthStateChanged((user) => {\n  if (user) {\n    actions.loginSuccess({ user });\n    actions.getUser({ uid: user.uid, currentUser: true });\n  } else {\n    actions.logout({});\n  }\n});\n\nexport {\n  auth,\n  database,\n  firebase,\n}\n","import { AnyAction } from 'redux';\nimport { all, takeLatest } from 'redux-saga/effects';\n\nimport { auth } from '../helpers/firebase';\nimport actions from '../reducers/actions';\n\nfunction* login(action: AnyAction) {\n  const { email, password } = action;\n\n  try {\n    const user = yield auth.signInWithEmailAndPassword(email, password);\n    actions.loginSuccess({ user });\n    localStorage.setItem('user', JSON.stringify(user.user));\n    localStorage.setItem('uid', user.user.uid);\n  } catch (error) {\n    console.error(error);\n    if (error.code === 'auth/user-not-found') {\n      const user = yield auth.createUserWithEmailAndPassword(email, password);\n      actions.loginSuccess({ user });\n      localStorage.setItem('user', JSON.stringify(user.user));\n      localStorage.setItem('uid', user.uid);\n    } else {\n      actions.loginFail({ error });\n    }\n  }\n}\n\nfunction* logout() {\n  localStorage.removeItem('user');\n  localStorage.removeItem('uid');\n  localStorage.removeItem('loggedIn');\n  yield auth.signOut();\n}\n\nexport default function* watchForActions() {\n  yield all([\n    takeLatest('LOGIN', login),\n    takeLatest('LOGOUT', logout),\n  ])\n}\n","import { all, takeLatest } from 'redux-saga/effects';\n\nimport { database } from '../helpers/firebase';\nimport actions, { IPayload } from '../reducers/actions';\n\nfunction* setUser(payload: IPayload) {\n  const { uid, user } = payload;\n\n  yield database\n    .ref('users')\n    .child(uid)\n    .set({\n      ...user,\n      lastOnline: new Date().getTime(),\n      uid,\n    });\n\n  actions.setUserSuccess({});\n  actions.getUser({ uid });\n}\n\nconst requestedUsers: { [key: string]: true } = {};\n\nfunction getUser(payload: IPayload) {\n  const { uid, currentUser } = payload;\n\n  if (requestedUsers[uid] && !currentUser) return;\n  requestedUsers[uid] = true;\n  database\n    .ref('users')\n    .child(uid)\n    .on('value', (rawUser) => {\n      const user = rawUser.val() || {};\n      actions.getUserSuccess({ user, uid, currentUser });\n    });\n}\n\nfunction* updateLastOnline() {\n  const uid = localStorage.getItem('uid');\n  if (!uid || uid === 'undefined') return;\n  const time = new Date().getTime();\n\n  localStorage.setItem('lastActivity', `${time}`);\n  yield database\n    .ref('users')\n    .child(`${uid}`)\n    .child('lastOnline')\n    .set(time);\n\n  yield database\n    .ref('usersActivity')\n    .child(`${uid}`)\n    .set(time);\n}\n\nfunction* getUsersActivity() {\n  const rawActivity = yield database\n    .ref('usersActivity')\n    .once('value');\n\n  const usersActivity = (rawActivity.val() || {});\n  actions.getUsersActivitySuccess({ usersActivity });\n}\n\nexport default function* watchForActions() {\n  yield all([\n    takeLatest('GET_USER', getUser),\n    takeLatest('SET_USER', setUser),\n    takeLatest('UPDATE_LAST_ONLINE', updateLastOnline),\n    takeLatest('GET_USERS_ACTIVITY', getUsersActivity),\n  ]);\n}\n","import { all, takeLatest } from 'redux-saga/effects';\n\nimport { IPayload } from '../reducers/actions';\nimport actions from '../reducers/actions';\nimport { database } from '../helpers/firebase';\nimport { formatMessage } from '../helpers/utils';\n\nfunction* sendMessage(payload: IPayload) {\n  const { uid, message, data = {} } = payload;\n  const time = new Date().getTime();\n\n  const newMessage = formatMessage({\n    time,\n    author: uid,\n    body: `${message} `,\n    data,\n  });\n\n  try {\n    yield database\n      .ref('messages')\n      .child(`${time}`)\n      .set(newMessage);\n    localStorage.setItem('message', '');\n    actions.sendMessageSuccess({ message: newMessage });\n  } catch (e) {\n    actions.sendMessageFail({});\n    console.error(e);\n    actions.notify({ message: 'Сообщение не было отправлено. Для деталей ctrl + shift + i, вкладка Console' });\n  }\n}\n\nfunction subscribe() {\n  database\n    .ref('messages')\n    .orderByKey()\n    .limitToLast(1)\n    .on('value', (rawMessages) => {\n      const messages = Object.values(rawMessages.val() || {});\n      actions.getMessagesSuccess({\n        messages,\n        concat: true\n      });\n    });\n}\n\nfunction unsubscribe() {\n  database.ref('messages').off();\n}\n\nfunction* getMessages() {\n  const rawMessages = yield database\n    .ref('messages')\n    .orderByKey()\n    .limitToLast(100)\n    .once('value');\n\n  const messages = Object.values(rawMessages.val() || {});\n  actions.getMessagesSuccess({ messages });\n}\n\nfunction* getMoreMessages(payload: IPayload) {\n  const { firstMessage } = payload;\n\n  const rawMessages = yield database\n    .ref('messages')\n    .orderByKey()\n    .endAt(`${firstMessage.time}`)\n    .limitToLast(30)\n    .once('value');\n\n  const messages = Object.values(rawMessages.val() || {});\n  actions.getMessagesSuccess({ messages, concat: true });\n}\n\nfunction uploadFile(payload: IPayload) {\n  const { file, uid } = payload;\n\n  const request = new XMLHttpRequest();\n  const formData = new FormData();\n\n  formData.append('image', file);\n\n  request.open('POST', 'https://api.imgur.com/3/image/');\n  request.setRequestHeader('Authorization', `Client-ID ea2c833b74d4583`);\n  request.onreadystatechange = () => {\n    if (request.status === 200 && request.readyState === 4) {\n      let res = JSON.parse(request.responseText);\n\n      actions.sendMessage({\n        uid,\n        message: res.data.link,\n      });\n      actions.notify({ message: 'Файл успешно загружен!' });\n    }\n  };\n\n  request.send(formData);\n}\n\nexport function* changeMessage(payload: IPayload) {\n  const { message } = payload;\n\n  const newMessage = formatMessage({\n    time: message.time,\n    author: message.author,\n    body: message.body,\n    data: message.data,\n  });\n\n  yield database\n    .ref('messages')\n    .child(`${message.time}`)\n    .set(newMessage);\n\n  actions.changeMessageSuccess({ message: newMessage });\n  return newMessage;\n}\n\nexport default function* watchForActions() {\n  yield all([\n    takeLatest('SEND_MESSAGE', sendMessage),\n    takeLatest('GET_MESSAGES', getMessages),\n    takeLatest('GET_MORE_MESSAGES', getMoreMessages),\n    takeLatest('SUBSCRIBE', subscribe),\n    takeLatest('UNSUBSCRIBE', unsubscribe),\n    takeLatest('UPLOAD_FILE', uploadFile),\n    takeLatest('CHANGE_MESSAGE', changeMessage),\n  ]);\n}\n","import { all, takeLatest, takeEvery } from 'redux-saga/effects';\n\nimport { IPayload } from '../reducers/actions';\nimport actions from '../reducers/actions';\nimport { database } from '../helpers/firebase';\nimport { generateID, getFailedItem } from '../helpers/utils';\nimport { IInventoryItem, IMessage, IUser } from \"../reducers/interfaces\";\nimport { getRandomInt } from '../helpers/dice';\n\nfunction* setItem(payload: IPayload) {\n  const { item } = payload;\n  const time = new Date().getTime();\n  const id = item.id || generateID();\n  const author = localStorage.getItem('uid');\n\n  const itemData = {\n    ...item,\n    id,\n    time,\n    author,\n  };\n\n  yield database\n    .ref('items')\n    .child(`${id}`)\n    .set(itemData);\n\n  actions.setItemSuccess({ itemData });\n  actions.getItemById({ id });\n}\n\nfunction* getItems() {\n  const rawItems = yield database\n    .ref('items')\n    .orderByKey()\n    .limitToFirst(30)\n    .once('value');\n\n  const items = Object.values(rawItems.val() || {});\n  actions.getItemsSuccess({ items });\n}\n\nfunction* getItemById(payload: IPayload) {\n  const { id } = payload;\n\n  const rawItem = yield database\n    .ref('items')\n    .child(id)\n    .once('value');\n\n  const item = rawItem.val() || getFailedItem(id);\n  actions.getItemsSuccess({ items: [item] });\n  return true;\n}\n\nfunction* getMoreItems(payload: IPayload) {\n  const { amount = 1, lastItem } = payload;\n\n  const rawItems = yield database\n    .ref('items')\n    .orderByKey()\n    .startAt(`${lastItem.id}`)\n    .limitToFirst(amount + 1)\n    .once('value');\n\n  const a = rawItems.val();\n  const items = Object.values(a || {}).splice(1);\n  actions.getItemsSuccess({ items });\n}\n\nfunction* deleteItem(payload: IPayload) {\n  const { id } = payload;\n\n  // Delete items from items list\n  yield database.ref(`items/${id}`).set({});\n  actions.deleteItemProgress({ field: 'deleted', value: true });\n  let waitCounter = 0;\n  const getWait = () => {\n    waitCounter += getRandomInt(10, 500);\n    return waitCounter;\n  };\n\n  // Delete item from all messages\n  const messages: IMessage[] = Object.values((yield database.ref(`messages`).once('value')).val() || {});\n  let clearedMessages = 0;\n\n  async function checkMessages(index: number) {\n    const message: IMessage = messages[index];\n    if (!message) return;\n    const randomWait = getWait();\n\n    setTimeout(() => actions.deleteItemProgress({\n      field: 'messagesChecked',\n      value: index + 1\n    }), randomWait);\n    if (message.data && message.data.itemId && message.data.itemId === id) {\n      await database.ref(`messages/${message.time}/data`).set({});\n      setTimeout(() => actions.deleteItemProgress({\n        field: 'messagesCleared',\n        value: ++clearedMessages\n      }), randomWait);\n    }\n    await checkMessages(index + 1);\n  }\n\n  yield checkMessages(0);\n\n  // Delete item from all users\n  const users: IUser[] = Object.values((yield database.ref(`users`).once('value')).val() || {});\n  let clearedUsers = 0;\n\n  async function checkUsers(index: number) {\n    const user: IUser = users[index];\n    if (!user) return;\n    const randomWait = getWait();\n\n    setTimeout(() => actions.deleteItemProgress({\n      field: 'usersChecked',\n      value: index + 1\n    }), randomWait);\n    if (user.inventory) {\n      const item = Object.values(user.inventory).find((item: IInventoryItem) => item.id === id);\n      if (item) {\n        await database.ref(`users/${user.uid}/inventory/${id}|${item.time}`).set({});\n        setTimeout(() => actions.deleteItemProgress({\n          field: 'usersCleared',\n          value: ++clearedUsers\n        }), randomWait);\n      }\n    }\n    await checkUsers(index + 1);\n  }\n\n  yield checkUsers(0);\n\n  setTimeout(\n    () => actions.deleteItemProgress({ field: 'done', value: true }),\n    getWait()\n  );\n  actions.deleteItemSuccess({ id });\n}\n\nexport default function* watchForActions() {\n  yield all([\n    takeLatest('DELETE_ITEM', deleteItem),\n    takeLatest('SET_ITEM', setItem),\n    takeLatest('GET_ITEMS', getItems),\n    takeLatest('GET_MORE_ITEMS', getMoreItems),\n    takeEvery('GET_ITEM_BY_ID', getItemById),\n  ]);\n}\n","import { all, takeLatest } from 'redux-saga/effects';\n\nimport { IInventoryItem, IItem } from '../reducers/interfaces';\nimport { database } from '../helpers/firebase';\nimport { IPayload } from '../reducers/actions';\nimport actions from '../reducers/actions';\nimport { changeMessage } from './messages';\nimport { getItemName } from \"../helpers/utils\";\n\nfunction* passItem(payload: IPayload) {\n  const { id, uid, demonstrate, use, item, to } = payload;\n\n  if (id && uid && item) {\n    const name = getItemName(item);\n    if (demonstrate) {\n      actions.sendMessage({\n        uid,\n        message: `*показывает ${name}`,\n        data: { itemId: id, amount: item.amount },\n      });\n      actions.passItemSuccess({});\n      actions.notify({ message: `Вы показали ${name}`});\n      actions.redirect({ to: '/text-roleplay/chat' });\n      return true;\n    }\n\n    const removed = yield removeItem({ id, uid, amount: item.amount });\n    if (!removed) {\n      console.error(`passItem error:`, payload);\n      actions.passItemFail({ id, uid });\n      return false;\n    }\n\n    if (use) {\n      const name = getItemName(item, false);\n      actions.sendMessage({\n        uid,\n        message: `*использовал ${name}`,\n        data: { itemId: id },\n      });\n      actions.notify({ message: `Вы использовали ${name}` });\n      actions.redirect({ to: '/text-roleplay/chat' });\n      actions.passItemSuccess({});\n      return true;\n    }\n\n    if (to) {\n      actions.giveItem({ uid: to.uid, id, itemType: item.type, amount: item.amount });\n      actions.notify({ message: `Вы передали ${item.name} игроку '${to.nickname}'` });\n      actions.passItemSuccess({});\n      return;\n    }\n\n    actions.sendMessage({\n      uid,\n      message: `*выбросил ${name}`,\n      data: { itemId: id, amount: item.amount, type: item.type },\n    });\n    actions.notify({ message: `Вы выбросили ${name}` });\n    actions.redirect({ to: '/text-roleplay/chat' });\n    actions.passItemSuccess({});\n    return true;\n  }\n\n  actions.passItemFail({ id, uid });\n  console.error(`passItem error: id, uid, or item are not defined`, payload);\n  return false;\n}\n\nfunction* removeItem(payload: IPayload) {\n  const { id, uid, amount = 1 } = payload;\n  const ref = database\n    .ref(`users`)\n    .child(uid)\n    .child('inventory');\n\n  const sameItem = yield getInventoryItem({ id, uid });\n  if (sameItem) {\n    if (sameItem.amount - amount >= 1) {\n      const item = {\n        ...sameItem,\n        amount: sameItem.amount - amount,\n      };\n\n      yield ref.child(`${id}|${sameItem.time}`).set(item);\n      actions.removeItemSuccess({ id, uid });\n      return true;\n    }\n\n    yield ref.child(`${id}|${sameItem.time}`).set({});\n    actions.removeItemSuccess({ id, uid });\n    return true;\n  }\n\n  console.error(`removeItem error: User '${uid}' doesn't have item '${id}'`);\n  actions.notify({ message: `Предмета нет в инвентаре` });\n  actions.removeItemFail({ id, uid, error: 'has-no-item' });\n  return false;\n}\n\nfunction* getInventoryItem(payload: IPayload) {\n  const { id, uid } = payload;\n\n  const rawItems = yield database\n    .ref('users')\n    .child(uid)\n    .child('inventory')\n    .once('value');\n  const items: IInventoryItem[] = Object.values(rawItems.val() || {});\n  if (items.length) {\n    // @ts-ignore\n    const item: IItem = items.find(item => item.id === id);\n    if (item)\n      return item;\n  }\n  return;\n}\n\nfunction* giveItem(payload: IPayload) {\n  const { id, uid, itemType, amount = 1 } = payload;\n  if (!id || !uid || !itemType) {\n    console.error('giveItem error. One of the properties are not defined', id, uid, itemType);\n    actions.giveItemFail({});\n    return;\n  }\n\n  const time = new Date().getTime();\n  let item: IInventoryItem = { id, time, type: itemType, amount: amount };\n\n  if (itemType !== 'weapon' && itemType !== 'wearable') {\n    const sameItem = yield getInventoryItem({ id, uid });\n    if (sameItem) {\n      item.amount = (sameItem.amount || 1) + amount;\n      item.time = sameItem.time;\n    }\n  }\n\n  const fullId = `${item.id}|${item.time}`;\n  yield database\n    .ref('users')\n    .child(uid)\n    .child('inventory')\n    .child(fullId)\n    .set(item);\n\n  actions.giveItemSuccess({ id, uid });\n  return true;\n}\n\nfunction* takeItem(payload: IPayload) {\n  const { uid, message } = payload;\n  const { itemId, amount, type } = message.data;\n\n  message.data.taken = true;\n\n  const took = yield changeMessage({ uid, message });\n  if (took && type) {\n    const item = yield giveItem({\n      id: itemId,\n      uid,\n      amount: amount || 1,\n      itemType: type,\n    });\n    if (item) {\n      actions.sendMessage({\n        uid,\n        message: `*подобрал предмет`,\n      });\n      actions.takeItemSuccess({});\n      return true;\n    }\n  }\n\n  console.error('takeItem error. Cant take or no item', payload);\n  actions.takeItemFail({});\n  return false;\n}\n\nexport default function* watchForActions() {\n  yield all([\n    takeLatest('GIVE_ITEM', giveItem),\n    takeLatest('REMOVE_ITEM', removeItem),\n    takeLatest('PASS_ITEM', passItem),\n    takeLatest('TAKE_ITEM', takeItem),\n  ]);\n}\n","import { all } from 'redux-saga/effects';\n\nimport auth from './auth';\nimport users from './users';\nimport messages from './messages';\nimport items from './items';\nimport inventory from './inventory';\n\nexport default function* watchAll() {\n  yield all([\n    auth(),\n    users(),\n    messages(),\n    items(),\n    inventory(),\n  ])\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport saga from './sagas/index';\nimport store, { sagaMiddleware } from './helpers/store';\nimport * as serviceWorker from './serviceWorker';\n\nsagaMiddleware.run(saga);\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}