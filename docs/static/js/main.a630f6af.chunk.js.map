{"version":3,"sources":["components/Menu.tsx","helpers/dice.tsx","helpers/utils.tsx","reducers/interfaces.ts","reducers/index.ts","helpers/store.tsx","reducers/actions.ts","components/Avatar.tsx","components/Image.tsx","components/Item.tsx","components/ItemById.tsx","containers/Chat/MessageBody.tsx","containers/Chat/Message.tsx","containers/Chat/index.tsx","components/Loader/LoadIcon.tsx","components/Loader/CheckIcon.tsx","components/Loader/index.tsx","containers/Settings/index.tsx","components/Logout.tsx","containers/Items/ItemCreator.tsx","containers/ItemsTable/ItemsList.tsx","containers/ItemsTable/index.tsx","components/AmountModal.tsx","containers/Items/index.tsx","components/ActiveUsersList.tsx","containers/Inventory/index.tsx","containers/Character/config.ts","containers/Character/index.tsx","configs/routes.tsx","components/Help.tsx","components/Login.tsx","components/Router.tsx","helpers/activity.ts","App.tsx","helpers/firebase.tsx","sagas/auth.ts","sagas/users.ts","sagas/messages.ts","sagas/items.ts","sagas/inventory.ts","sagas/index.ts","serviceWorker.ts","index.tsx"],"names":["connect","state","isLoggedIn","withRouter","props","Fragment","mode","window","innerWidth","selectedKeys","location","pathname","split","pop","menu","map","value","Item","key","path","disabled","link","href","target","rel","to","label","diceRegex","diceRegexG","getRandomInt","min","max","Math","floor","random","exportRolls","str","rolls","match","roll","_amount","_size","amount","parseInt","size","results","Array","fill","rollDice","maxResult","minResult","sum","reduce","a","b","splice","colorFromString","hash","i","length","charCodeAt","color","toString","substr","isOnline","time","localStorage","getItem","Date","getTime","doubleDigit","getDate","date","getMonth","getFullYear","join","getFullTime","getHours","getMinutes","getSeconds","isURL","test","processMessages","messages","filter","item","pos","self","findIndex","_i","sort","m","index","author","grouped","formatMessage","message","body","indexOf","isRP","mentioned","validateMessage","notify","error","some","getFailedItem","id","type","name","weight","effect","image","description","price","capacity","armor","approved","failed","Number","MAX_VALUE","getItemName","showAmount","defaultItem","defaultDeletedItemData","itemId","deleted","messagesChecked","messagesCleared","usersChecked","usersCleared","done","user","JSON","parse","setItem","uid","initialState","userData","settings","loading","users","currentUser","items","usersActivity","deletingItemData","defaultUser","lastOnline","nickname","avatar","isAdmin","inventory","reducer","action","concat","forEach","Object","values","undefined","redirect","field","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","composeWithDevTools","applyMiddleware","dispatch","createAction","payload","createAsyncAction","typeName","toLowerCase","replace","toUpperCase","actions","deleteItemProgress","updateLastOnline","logout","Avatar","style","rest","_avatar","src","backgroundColor","Image","visible","toggleModal","setState","this","onClick","alt","className","title","CloseOutlined","closable","footer","onCancel","width","maxWidth","Component","getStats","labels","wearable","weapon","getFooter","removeItem","all","DeleteOutlined","render","stats","shape","find","itemProps","getItemById","MessageBody","data","taken","characterChanges","changes","formatChange","change","base","total","Boolean","Panel","header","full","before","after","readOnly","trim","onConfirm","takeItem","okText","cancelText","UploadOutlined","searchParams","URL","params","videoId","get","regExMatch","lastMatch","getVideoId","listId","height","frameBorder","allow","allowFullScreen","_body","_rolls","word","rollIndex","summing","importRolls","Message","placement","Chat","sending","componentDidMount","getMessages","subscribe","componentWillUnmount","unsubscribe","componentDidUpdate","prevProps","getUser","onChangeMessage","event","onKeyDown","shiftKey","preventDefault","onSendMessage","currentTarget","selectionStart","sendMessage","getMoreMessages","firstMessage","onScroll","scrollTop","uploadFile","file","onPaste","e","clipboardData","files","onDrop","dataTransfer","getAsFile","spinning","TextArea","placeholder","autoSize","minRows","maxRows","onChange","SendOutlined","viewBox","focusable","data-icon","aria-hidden","d","Loader","LoadIcon","CheckIcon","Settings","rawOnChange","newSettings","setSettings","setUser","clearAvatar","getField","hasRight","display","icon","ClearOutlined","danger","margin","checked","defaultValue","bordered","keys","React","URLSearchParams","Logout","ItemCreator","types","clearImage","fields","Option","precision","step","onSubmit","newItem","content","onClose","centered","ItemsList","controls","controlButtons","condition","overlay","trigger","InsertRowBelowOutlined","ItemsTable","defaultState","searchString","showApproved","showNotApproved","filters","getFilters","getButton","tabIndex","console","log","Group","flexDirection","getPageControls","getHeader","getContent","getTitle","_searchString","AmountModal","inputProps","useState","setAmount","onInnerChange","dots","amountModal","modalProps","enough","Modal","confirm","onOk","close","maskClosable","Items","creatingItem","editingItem","itemsToLoad","getItems","toggleCreatingItem","allowClear","FilterOutlined","cardControls","giveItem","itemType","toggleEditingItem","deleteModal","onCreateItem","getCreators","deleteItem","getDeletingModal","getMoreItems","lastItem","ActiveUsersList","getUsersActivity","activeUsers","validUsers","Inventory","passItem","getPassModal","getInventoryItems","inventoryItems","loadedItems","notLoadedItems","inventoryItem","push","shift","getDeleteModalContent","success","demonstrate","use","initialCharacteristic","initialCharacter","special","strength","perception","endurance","charisma","intelligence","agility","luck","skills","smallGuns","bigGuns","energyGuns","unarmed","meleeWeapons","medicine","sneak","lockpick","steal","traps","science","repair","speech","barter","survival","level","hpPerLevel","exp","carryWeight","wounds","maxHealthPoints","healthPoints","armorClass","healingRate","resistance","actionPoints","sequence","meleeDamage","criticalChance","skillPoints","spentSkillPoints","bio","formula","getBase","s","ag","st","pe","en","in","ch","_","sqrt","subStats","ceil","lk","getConfigByField","findField","Character","getSpecial","configSpecial","getSkills","configSkills","configStats","MAX_SAFE_INTEGER","getMainStats","configSubStats","slice","char","processChar","specialTotal","getChanges","beforeChar","afterChar","diff","entries","characteristic","afterValue","config","onSave","character","initialValues","onValuesChange","extra","minLength","routes","component","exact","onFinish","login","rules","required","Password","htmlType","Login","blinking","listenForActivity","callback","eventName","document","addEventListener","listenForOnline","buildDate","App","info","notifySuccess","redirectSuccess","getRedirect","firebase","_firebase","initializeApp","firebaseConfig","auth","database","onAuthStateChanged","loginSuccess","watchForActions","email","password","signInWithEmailAndPassword","stringify","code","createUserWithEmailAndPassword","loginFail","signOut","takeLatest","ref","child","set","setUserSuccess","requestedUsers","on","rawUser","val","getUserSuccess","once","rawActivity","getUsersActivitySuccess","changeMessage","newMessage","sendMessageSuccess","sendMessageFail","orderByKey","limitToLast","rawMessages","getMessagesSuccess","interval","setInterval","head","querySelector","innerText","hidden","clearInterval","blinkTitle","off","endAt","request","XMLHttpRequest","formData","FormData","append","open","setRequestHeader","onreadystatechange","status","readyState","res","responseText","send","changeMessageSuccess","itemData","setItemSuccess","limitToFirst","rawItems","getItemsSuccess","rawItem","startAt","checkMessages","checkUsers","randomWait","getWait","setTimeout","clearedUsers","clearedMessages","waitCounter","deleteItemSuccess","takeEvery","getInventoryItem","passItemSuccess","passItemFail","sameItem","removeItemSuccess","removeItemFail","giveItemFail","fullId","giveItemSuccess","takeItemSuccess","takeItemFail","watchAll","hostname","run","saga","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"m8CA6DeA,mBAAQ,SAACC,GAAD,MAAoB,CAAEC,WAAYD,EAAMC,cAAhDF,CAA+DG,aA1C9E,SAAcC,GACZ,IAAKA,EAAMF,WACT,OAAO,kBAAC,IAAMG,SAAP,MAGT,IAAMC,EAAOC,OAAOC,WAAa,IAC7B,aACA,SAEJ,OACE,kBAAC,IAAD,CACEF,KAAMA,EACNG,aAAc,CAACL,EAAMM,SAASC,SAASC,MAAM,KAAKC,OAAS,KAE1DC,EAAKC,KAAI,SAACC,GAAD,OACR,kBAAC,IAASC,KAAV,CACEC,IAAKF,EAAMG,KAAKP,MAAM,KAAKC,MAC3BO,SAAUJ,EAAMG,OAASf,EAAMM,SAASC,UAGtCK,EAAMK,KAGF,uBACEC,KAAMN,EAAMG,KACZI,OAAO,SACPC,IAAI,uBAHN,wCAQA,kBAAC,IAAD,CAAMC,GAAIT,EAAMG,MACbH,EAAMU,gB,qGCtCZC,EAAY,gDACZC,EAAa,iDAEbC,EAAe,SAACC,EAAaC,GAAd,OAC1BC,KAAKC,MAAMD,KAAKE,UAAaH,EAAM,EAAKD,GAAOA,IASpCK,EAAc,SAACC,GAC1B,IAAMC,EAAQD,EAAIE,MAAMV,GACxB,OAAIS,EACKA,EAAMtB,KAAI,SAACwB,GAAyB,IAAD,EACfA,EAAK3B,MAAM,aADI,mBACjC4B,EADiC,KACxBC,EADwB,KAElCC,EAASC,SAASH,GAClBI,EAAOD,SAASF,GAChBI,EAXY,SAACH,EAAgBE,GACvC,OAAO,IAAIE,MAAMJ,GAAQK,KAAKL,EAASE,GAAM7B,KAAI,kBAAMc,EAAa,EAAGe,MAUnDI,CAASN,EAAQE,GAEjC,MAAQ,CACNK,UAAWL,EAAOF,EAClBQ,UAAWR,EACXS,IAAKN,EAAQO,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GACrCf,OACAM,UACAH,SACAE,WAEDW,OAAO,EAAG,IAER,IClCIC,EAAkB,SAACpB,GAC9B,IAAKA,EAAK,MAAO,OAGjB,IADA,IAAIqB,EAAO,EACFC,EAAI,EAAGA,EAAItB,EAAIuB,OAAQD,IAC9BD,EAAOrB,EAAIwB,WAAWF,KAAOD,GAAQ,GAAKA,GAI5C,IADA,IAAII,EAAQ,IACHH,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1BG,IAAU,MADGJ,GAAa,EAAJC,EAAU,KACTI,SAAS,KAAKC,QAAQ,GAG/C,OAAOF,GAGIG,EAAW,SAACC,GACvB,QAAKA,IACgBA,GAAQtB,SAASuB,aAAaC,QAAQ,iBAAmB,MACvD,MAAU,IAAIC,MAAOC,WAGjCC,EAAc,SAAClC,GAAD,OAAqC,IAApB,UAAGA,GAAMuB,OAAT,WACpCvB,GACJA,GAOSmC,EAAU,SAACN,GACtB,IAAMO,EAAO,IAAIJ,KAAKH,GACtB,MAAO,CAACO,EAAKD,UAAWC,EAAKC,WAAa,EAAGD,EAAKE,eAAe3D,IAAIuD,GAAaK,KAAK,MAG5EC,EAAc,SAACX,GAC1B,IAAMO,EAAO,IAAIJ,KAAKH,GAItB,MAAO,CAHa,CAACO,EAAKK,WAAYL,EAAKM,aAAcN,EAAKO,cAAchE,IAAIuD,GAAaK,KAAK,KAC9E,CAACH,EAAKD,UAAWC,EAAKC,WAAa,EAAGD,EAAKE,eAAe3D,IAAIuD,GAAaK,KAAK,MAElEA,KAAK,MAG5BK,EAAQ,SAAC5C,GAAD,MACnB,sFAAsF6C,KAAK7C,IAEhF8C,EAAkB,SAACC,GAC9B,OAAOA,EACJC,QAAO,SAACC,EAAgBC,EAAaC,GAA9B,OACNA,EAAKC,WAAU,SAACC,GAAD,OAAkBA,EAAGxB,OAASoB,EAAKpB,UAAUqB,KAE7DI,MAAK,SAACrC,EAAaC,GAAd,OAA8BA,EAAEW,KAAOZ,EAAEY,QAC9ClD,KAAI,SAAC4E,EAAaC,EAAeT,GAChC,OAAIS,EAAQT,EAASxB,OAAS,GACxBgC,EAAEE,SAAWV,EAASS,EAAQ,GAAGC,OAC5B,2BACFF,GADL,IAEEG,SAAS,IAIRH,MAIAI,EAAgB,SAACC,GAAuB,IAC3CC,EAASD,EAATC,KAcR,OAZItE,EAAUsD,KAAKgB,KACjBD,EAAQ3D,MAAQF,EAAY8D,IAG1BA,EAAKC,QAAQ,MAAQ,IACvBF,EAAQG,MAAO,GAGb,0DAAmBlB,KAAKgB,KAC1BD,EAAQI,WAAY,GAGfJ,GAGIK,EAAkB,SAACL,GAE9B,IAAKA,EAEH,OADAM,IAAOC,MAAM,gGACN,EAGT,GDpFA,gCAAgBtB,KCoFJe,GAAU,CACpB,IAAM3D,EAAyB2D,EAAQ1D,MAAM,kMAC7C,GAAID,EAqBF,GApBiBA,EAAMmE,MAAK,SAACjE,GAC3B,GAAI,uKAAsD0C,KAAK1C,GAE7D,OADA+D,IAAOC,MAAP,qFAA+BhE,EAA/B,kKACO,EAHmC,MAMrBA,EAAK3B,MAAM,aANU,mBAMrC8B,EANqC,KAM7BE,EAN6B,KAQ5C,OAAID,SAASD,GAAU,IACrB4D,IAAOC,MAAP,qFAA+BhE,EAA/B,iLACO,IAG2C,IAAhD,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,IAAI2D,QAAQvD,SAASC,MACtC0D,IAAOC,MAAP,qFAA+BhE,EAA/B,qNACO,MAKG,OAAO,EAGzB,OAAO,GAMIkE,EAAyC,SAACC,GAAD,MAAiB,CACrEA,GAAIA,EACJC,KAAM,OACNC,KAAM,uCACNC,OAAQ,EACR5C,KAAM,EACN6C,OAAQJ,EACRK,MAAO,GACPC,YAAa,kKACbC,MAAO,EACPC,SAAU,EACVC,MAAO,EACPC,UAAU,EACVC,QAAQ,EACR3E,OAAQ4E,OAAOC,YAGJC,EAAc,SAACnC,GAAD,IAAcoC,IAAd,+DACzB,UAAGpC,EAAI,WAAOA,EAAKuB,KAAZ,KAAsB,+CAAea,GAAcpC,EAAK3C,QAAU2C,EAAK3C,QAAU,EAA5C,YAAqD2C,EAAK3C,OAA1D,iBAAwE,KCxEzGgF,EAAqB,CAChChB,GAAI,GACJC,KAAM,OACNC,KAAM,GACNE,OAAQ,GACRC,MAAO,GACPF,OAAQ,EACRI,MAAO,EACPD,YAAa,GACbE,SAAU,EACVE,UAAU,EACVD,MAAO,EACPlD,KAAM,EACNvB,OAAQ,GAaGiF,EAA2C,CACtDC,OAAQ,GACRC,SAAS,EACTC,gBAAiB,EACjBC,gBAAiB,EACjBC,aAAc,EACdC,aAAc,EACdC,MAAM,GChHFC,EAAOC,KAAKC,MAAMnE,aAAaC,QAAQ,SAAW,QACpDgE,GAAMjE,aAAaoE,QAAQ,MAAOH,EAAKI,KACpC,IAAMC,EAAuB,CAClCC,SAAUN,EACVjI,WAAqB,OAATiI,EACZO,UAAU,EACVC,SAAS,EACTxD,SAAU,GACVyD,MAAO,GACPL,IAAKJ,EAAOA,EAAKI,IAAM,GACvBM,YAAa,KACbC,MAAO,GACPvC,OAAO,EACPwC,cAAe,GACfC,iBAAkBrB,GAGPsB,EAAqB,CAChCC,WAAY,EAEZC,SAAU,GACVC,OAAQ,GAERC,SAAS,EACTd,IAAK,GACLe,UAAW,IAuKEC,EApKC,WAA4C,IAA3CtJ,EAA0C,uDAAlCuI,EAAcgB,EAAoB,uCACzD,OAAQA,EAAO7C,MACb,IAAK,QACL,IAAK,eACL,IAAK,oBACL,IAAK,eACL,IAAK,WACL,IAAK,YACL,IAAK,iBACL,IAAK,kBACL,IAAK,cACL,IAAK,YACL,IAAK,cACL,IAAK,YACL,IAAK,qBACL,IAAK,cACH,OAAO,2BACF1G,GADL,IAEE0I,SAAS,IAGb,IAAK,mBACL,IAAK,gBACL,IAAK,oBACL,IAAK,4BACL,IAAK,yBACL,IAAK,oBACL,IAAK,sBACL,IAAK,mBACL,IAAK,oBACL,IAAK,iBACL,IAAK,0BACL,IAAK,mBACL,IAAK,oBACH,OAAO,2BACF1I,GADL,IAEE0I,SAAS,IAGb,IAAK,gBACH,OAAO,2BACF1I,GADL,IAEEsI,IAAKiB,EAAOrB,KAAKI,IACjBE,SAAUe,EAAOrB,KACjBjI,WAA4B,OAAhBsJ,EAAOrB,KACnBU,YAAY,2BACPI,GADM,IAETV,IAAKiB,EAAOrB,KAAKI,MAEnBI,SAAS,IAGb,IAAK,aACH,OAAO,2BACF1I,GADL,IAEE0I,SAAS,EACTpC,MAAOiD,EAAOjD,QAGlB,IAAK,SACH,OAAO,2BACFtG,GADL,IAEEwI,SAAU,KACVvI,YAAY,IAGhB,IAAK,uBACH,IAAMiF,EAAWqE,EAAOC,OAAP,sBACTxJ,EAAMkF,UADG,YACUqE,EAAOrE,WAC9BqE,EAAOrE,SAEX,OAAO,2BACFlF,GADL,IAEEkF,SAAUD,EAAgBC,GAC1BwD,SAAS,IAGb,IAAK,mBACH,IAAME,EAAcW,EAAOrB,KAAKI,MAAQtI,EAAMsI,IAC1CiB,EAAOrB,KACPlI,EAAM4I,YAEV,OAAO,2BACF5I,GADL,IAEE4I,cACAD,MAAM,2BACD3I,EAAM2I,OADN,kBAEFY,EAAOjB,IAAMiB,EAAOrB,SAI3B,IAAK,oBACH,IAAMW,EAAkC,GAIxC,MAHA,sBAAI7I,EAAM6I,OAAV,YAAoBU,EAAOV,QACxBY,SAAQ,SAACrE,GAAD,OAAiByD,EAAMzD,EAAKqB,IAAMrB,KAEtC,2BACFpF,GADL,IAEE0I,SAAS,EACTG,MAAOa,OAAOC,OAAOd,KAGzB,IAAK,SACH,OAAO,2BACF7I,GADL,IAEEqG,OAAQkD,EAAOxD,UAGnB,IAAK,iBACH,OAAO,2BACF/F,GADL,IAEEqG,YAAQuD,IAGZ,IAAK,WACH,OAAO,2BACF5J,GADL,IAEE6J,SAAUN,EAAO/H,KAGrB,IAAK,mBACH,OAAO,2BACFxB,GADL,IAEE6J,cAAUD,IAGd,IAAK,6BACH,OAAO,2BACF5J,GADL,IAEE0I,SAAS,EACTI,cAAeS,EAAOT,gBAG1B,IAAK,cACH,OAAO,2BACF9I,GADL,IAEE0I,SAAS,EACTK,iBAAkB,CAChBpB,OAAQ4B,EAAO9C,GACfiB,4BAIN,IAAK,uBACH,OAAO,2BACF1H,GADL,IAEE+I,iBAAiB,2BACZ/I,EAAM+I,kBADK,kBAEbQ,EAAOO,MAAQP,EAAOxI,UAI7B,IAAK,sBACH,OAAO,2BACFf,GADL,IAEE0I,SAAS,EACTG,MAAO7I,EAAM6I,MAAM1D,QAAO,SAACC,GAAD,OAAiBA,EAAKqB,KAAO8C,EAAO9C,QAGlE,QACE,OAAOzG,ICxLA+J,EAAiBC,cAOfC,EANDC,sBACZC,EACA5B,EACA6B,8BAAoBC,0BAAgBN,KCRhCO,EAAWL,EAAMK,SAUjBC,EACJ,SAAC7D,GAAD,OACE,SAAC8D,GAAD,OACEF,EAAS,aAAE5D,QAAS8D,MAEpBC,EAAoB,SAAC/D,GAAkB,IAAD,EACpCgE,EAAoBhE,EJZvBiE,cACAC,QAAQ,OAAO,SAAClF,GAAD,OAAOA,EAAEmF,iBACxBD,QAAQ,KAAM,IIWjB,OAAO,EAAP,iBACGF,EAAWH,EAAa7D,IAD3B,wBAEMgE,EAFN,WAE0BH,EAAa,GAAD,OAAI7D,EAAJ,cAFtC,wBAGMgE,EAHN,QAGuBH,EAAa,GAAD,OAAI7D,EAAJ,WAHnC,GAoCaoE,GA7BQ,mSAClBL,EAAkB,UAClBA,EAAkB,aAClBA,EAAkB,iBAClBA,EAAkB,sBAClBA,EAAkB,aAClBA,EAAkB,iBAClBA,EAAkB,mBAClBA,EAAkB,cAClBA,EAAkB,gBAClBA,EAAkB,gBAClBA,EAAkB,aAClBA,EAAkB,gBAClBA,EAAkB,cAClBA,EAAkB,mBAClBA,EAAkB,mBAClBA,EAAkB,cAClBA,EAAkB,gBAClBA,EAAkB,cAClBA,EAAkB,cAClBA,EAAkB,WAClBA,EAAkB,aAClBA,EAAkB,uBAClBA,EAAkB,gBAvBA,IAwBrBM,mBAAoBR,EAAa,wBACjCS,iBAAkBT,EAAa,sBAC/BU,OAAQV,EAAa,Y,8BC3BRW,GAfA,SAAC/K,GAAyB,IAC/BgJ,EAAqChJ,EAArCgJ,OAAQD,EAA6B/I,EAA7B+I,SAAUiC,EAAmBhL,EAAnBgL,MAAUC,EADE,aACOjL,EADP,+BAGhCkL,EAAUtG,EAAMoE,GAAUA,EAAS,GACzC,OACE,kBAAC,KAAD,eACEmC,IAAKD,EACLF,MAAK,2BAAOA,GAAP,IAAcI,gBAAiBF,EAAU,cAAgB9H,EAAgB2F,MAC1EkC,GAEHlC,I,qECoCQsC,G,4MApDbxL,MAAQ,CAAEyL,SAAS,G,EAEnBC,YAAc,WACZ,EAAKC,SAAS,CACZF,SAAU,EAAKzL,MAAMyL,W,wDAIf,IACAH,EAAQM,KAAKzL,MAAbmL,IAER,OACE,kBAAC,IAAMlL,SAAP,KACE,yBACEyL,QAASD,KAAKF,YACdJ,IAAKA,EACLQ,IAAI,GACJC,UAAU,eAEZ,kBAAC,KAAD,CACEC,MACE,6BACE,uBACE3K,KAAMiK,EACNhK,OAAO,SACPC,IAAI,uBAEH+J,GAEH,kBAACW,GAAA,EAAD,CAAeJ,QAASD,KAAKF,eAGjCK,UAAU,cACVG,UAAU,EACVC,OAAQ,KACRV,QAASG,KAAK5L,MAAMyL,QACpBW,SAAUR,KAAKF,YACfW,MAAM,eAEN,yBACElB,MAAO,CACLmB,SAAU,QAEZhB,IAAKA,EACLQ,IAAI,W,GA7CIS,a,UCiHLvL,I,mNAnGbwL,SAAW,WAAO,IAAD,EACmB,EAAKrM,MAAMiF,KAArCsB,EADO,EACPA,KAAMQ,EADC,EACDA,MAAOD,EADN,EACMA,SAErB,OAAQP,GACN,IAAK,WACH,OAAOQ,EAET,IAAK,SACH,OAAOD,EAET,QACE,IAAMxE,EAAS,EAAKtC,MAAMsC,QAAU,EAAKtC,MAAMiF,KAAK3C,OACpD,SAAQA,GAAUA,GAAU,IAArB,UAA6BA,EAA7B,kB,EAIbgK,OAAS,CACPC,SAAU,uCACVC,OAAQ,8C,EAGVC,UAAY,WAAO,IAAD,EACQ,EAAKzM,MAArBgM,EADQ,EACRA,OAAQ7D,EADA,EACAA,IADA,EAEO,EAAKnI,MAAMiF,KAA1BgC,EAFQ,EAERA,OAAQX,EAFA,EAEAA,GAEhB,OAAIW,EAEA,yBAAK2E,UAAU,eACb,kBAAC,KAAD,CACE5K,UAAWmH,EACXuD,QAAS,kBAAMf,GAAQ+B,WAAW,CAAEvE,MAAK7B,KAAIqG,KAAK,MAElD,kBAACC,GAAA,EAAD,QAMJZ,EAEA,yBAAKJ,UAAU,eACZI,QAHP,G,EAQFa,OAAS,WAAO,IAAD,EACc,EAAK7M,MAAxBgB,EADK,EACLA,SAAUiE,EADL,EACKA,KADL,EAWTA,EARFuB,YAHW,MAGJvB,EAAKqB,GAHD,IAWTrB,EAPF4B,aAJW,MAIH,EAJG,EAKXD,EAME3B,EANF2B,YACAD,EAKE1B,EALF0B,MACAD,EAIEzB,EAJFyB,OAPW,EAWTzB,EAHFwB,cARW,MAQF,EARE,EASXF,EAEEtB,EAFFsB,KACAS,EACE/B,EADF+B,SAGI8F,EAAQ,EAAKT,WACnB,OACE,kBAAC,KAAD,CAAMT,UAAS,eAAW5E,IAAahG,EAAY,GAAK,aACtD,yBAAK4K,UAAU,aACb,yBAAKA,UAAU,aAAapF,GAC5B,yBAAKoF,UAAU,gBACb,yBAAKA,UAAU,cACZ/E,EAAQ,GAAR,oCAAsBA,IAEzB,yBAAK+E,UAAU,eACZnF,EAAS,GAAT,8BAAsBA,EAAtB,UAILE,GAASC,IACT,yBAAKgF,UAAU,aACZjF,GAAS,yBAAKiF,UAAU,cACvB,kBAAC,GAAD,CAAQ5C,OAAQrC,EAAOoC,SAAUvC,EAAMuG,MAAM,YAE9CnG,IAIHkG,GAASpG,IACT,yBAAKkF,UAAU,kBACb,yBAAKA,UAAU,aAGXkB,EAAK,UAAM,EAAKR,OAAO/F,IAAS,kCAA3B,aAAwCuG,GAAU,IAG3D,yBAAKlB,UAAU,eAAelF,IAGjC,EAAK+F,c,YA9FKL,cCsBJxM,gBAPS,SAACC,EAAeG,GAItC,MAAO,CAAEiF,KAHSpF,EAAV6I,MACWsE,MAAK,SAAC/H,GAAD,OAAiBA,EAAKqB,KAAOtG,EAAMsG,SAK9C1G,EAvBE,SAACI,GAA2B,IACnCsG,EAA2BtG,EAA3BsG,GAAIrB,EAAuBjF,EAAvBiF,KAASgI,EADqB,aACPjN,EADO,eAG1C,OAAKiF,EAMH,kBAAC,GAAD,eACEA,KAAMA,GACFgI,KAPNtC,GAAQuC,YAAY,CAAE5G,OACf,kBAAC,IAAMrG,SAAP,UCkLIkN,GAhLK,SAACnN,GAA8B,IACvCmI,EAAiBnI,EAAjBmI,IAAKvC,EAAY5F,EAAZ4F,QAEXC,EAIED,EAJFC,KACAE,EAGEH,EAHFG,KACA9D,EAEE2D,EAFF3D,MACAmL,EACExH,EADFwH,KAGF,GAAIA,EAAM,CAAC,IACD5F,EAAkD4F,EAAlD5F,OAAQ6F,EAA0CD,EAA1CC,MAAO/K,EAAmC8K,EAAnC9K,OAAQiE,EAA2B6G,EAA3B7G,KAAM+G,EAAqBF,EAArBE,iBAErC,GAAIA,EAAkB,CACpB,IAAMC,EAA+BhE,OAAOC,OAAO8D,GAE7CE,EAAe,SAACC,GACpB,cAAeA,GACb,IAAK,SACL,IAAK,SACH,OAAOA,EAET,QACE,MAAO,CACLA,EAAOC,MAAP,YAAoBD,EAAOC,MAC3BD,EAAOA,QAAP,UAAoBA,EAAOC,KAAO,MAAQ,GAA1C,aAAiDD,EAAOA,QACxDA,EAAOE,OAAP,eAAwBF,EAAOE,QAC/B3I,OAAO4I,SAASrJ,KAAK,MAI7B,OACE,kBAAC,KAAD,KACE,kBAAC,KAASsJ,MAAV,CACE/M,IAAI,eACJgN,OAAQjI,GAEP0H,EAAQ5M,KAAI,gBAAGW,EAAH,EAAGA,MAAOyM,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,MAAxB,OACX,yBACEnN,IAAKQ,EACLsK,UAAU,qBAEV,kBAAC,IAAD,CAASC,MAAOkC,GACd,8BAAOzM,IAET,6BACE,kBAAC,IAAD,CACEV,MAAO4M,EAAaQ,GACpBE,UAAQ,IAHZ,KAME,kBAAC,IAAD,CACEtN,MAAO4M,EAAaS,GACpBC,UAAQ,WAUxB,GAAI1G,EACF,OACE,oCACE,uBAAGoE,UAAU,cACV/F,GAEH,yBAAK+F,UAAWyB,EAAQ,GAAK,cAC3B,kBAAC,GAAD,CACE/G,GAAIkB,EAAO2G,OACX7L,OAAQA,EACRtB,SAAUqM,EACVrB,OAAQ7D,GAAO5B,EACb,kBAAC,KAAD,CACEsF,MAAM,qGACNuC,UAAW,kBAAMzD,GAAQ0D,SAAS,CAAElG,MAAKvC,UAASwH,UAClDkB,OAAO,yDACPC,WAAW,uCACXvN,SAAUqM,GAEV,kBAAC,KAAD,CAAQzB,UAAU,cAAc5K,SAAUqM,GACxC,kBAACmB,GAAA,EAAD,aAGF/E,MAQhB,GAAI7E,EAAMiB,GAAO,CACf,GAAI,oCAAoChB,KAAKgB,GAC3C,OACE,kBAAC,GAAD,CAAOsF,IAAKtF,IAIhB,IAAM5E,EACJ,uBACEC,KAAM2E,EACN1E,OAAO,SACPC,IAAI,uBAEHyE,GAIL,GAAIA,EAAKC,QAAQ,UAAY,EAAG,CAC9B,IAeM2I,EAAe,IAAIC,IAAI7I,GAAM4I,aAC/BE,EAAS,oBACPC,EAjBa,SAAC/I,GAClB,KAAIA,EAAKC,QAAQ,aAAe,GAS9B,OAAO,IAAI4I,IAAI7I,GAAM4I,aAAaI,IAAI,MAAQ,GAR9C,IAAMC,EAAajJ,EAAK3D,MAAM,mBAC9B,GAAI4M,EAAY,CACd,IAAMC,EAAYD,EAAWrO,MAC7B,GAAIsO,EACF,OAAOA,EAAUvO,MAAM,KAAKC,OAAS,GAM3C,MAAO,GAKOuO,CAAWnJ,GAE3B,GAAI+I,EAAS,CACX,IAAMK,EAASR,EAAaI,IAAI,QAC5BI,IACFN,GAAU,SAAWM,GAEvB,IAAMpL,EAAO4K,EAAaI,IAAI,KAI9B,OAHIhL,IACF8K,GAAU,UAAY9K,GAGtB,oCACG5C,EACD,4BACE4K,MAAO+C,EACPtI,GAAG,WACH4F,MAAM,OACNgD,OAAO,MACP/D,IAAG,uCAAkCyD,EAAlC,YAA6CD,GAChDQ,YAAY,IACZC,MAAM,gEACNC,iBAAe,MAOzB,OAAOpO,EAGT,IAAMqO,EAAQrN,EVtIS,SAAC4D,EAAc0J,GACxC,IAAMtN,EAAK,YAAOsN,GAClB,OAAO1J,EAAKrF,MAAM,KAAKG,KAAI,SAAC6O,EAAchK,GACxC,IAAMiK,EAAYxN,EAAMmD,WAAU,qBAAGjD,OAAoBqN,KACzD,GAAIC,GAAa,EAAG,CAAC,IAAD,EAMdxN,EAAMkB,OAAOsM,EAAW,GAAG,GAJ7BhN,EAFgB,EAEhBA,QACAI,EAHgB,EAGhBA,UACAC,EAJgB,EAIhBA,UACAC,EALgB,EAKhBA,IAGI2M,EAAUjN,EAAQc,OAAS,EAAjB,UACTR,EADS,cACAN,EAAQ8B,KAAK,QADb,UAET9B,EAAQ8B,KAAK,QAEdqH,GAAa7I,IAAQF,EAAa,UAAeE,IAAQD,GAAa,aAAe,GAE3F,OACE,kBAAC,IAAM7C,SAAP,CAAgBa,IAAK0O,EAAOhK,GACzB,IACD,kBAAC,IAAD,CAASqG,MAAO6D,GACd,uBAAG9D,UAAWA,GACX4D,EADH,IACUzM,EADV,OAOR,MAAM,IAAN,OAAWyM,MU0GPG,CAAY9J,EAAM5D,GAClB4D,EAEJ,OAAIE,EAEA,uBAAG6F,UAAU,cACV0D,GAKA,8BAAOA,IC/HHM,GAhDC,SAAC5P,GAA0B,IAAD,EAUpCA,EARF4F,QACE/B,EAHoC,EAGpCA,KACA6B,EAJoC,EAIpCA,QACAG,EALoC,EAKpCA,KACAG,EANoC,EAMpCA,UAEF+B,EAEE/H,EAFF+H,KACAI,EACEnI,EADFmI,IAGI0D,EAAQ9D,GACZ,kBAAC,IAAD,CAAM1G,GAAE,YAAO0G,EAAKI,IAAZ,cACN,kBAAC,IAAD,CACE0D,MAAO9D,EAAKe,WAAL,+HAA2CtE,EAAYuD,EAAKe,kBAAgBW,EACnFoG,UAAU,QAEV,yBAAKjE,UAAS,8BAAyBhI,EAASmE,EAAKe,YAAc,SAAW,KAC5E,kBAAC,GAAD,CACEE,OAAQjB,EAAKiB,OACbD,SAAUhB,EAAKgB,WAEjB,yBAAK6C,UAAU,0BACZ7D,EAAKgB,UAAYhB,EAAKI,QAOjC,OACE,kBAAC,KAAD,CACEyD,UAAS,uBAAkBlG,EAAU,UAAY,GAAxC,YAA8CM,GAAa+B,GAASlC,EAAKC,QAAL,WAAiBiC,EAAKgB,SAAtB,OAAsC,EAAK,YAAc,IACtI8C,MAAOnG,OAAU+D,EAAYoC,EAC7B/K,IAAK+C,GAEL,kBAAC,IAAD,CACEgI,MAAO1H,EAAQN,GACfgM,UAAU,QAEV,yBAAKjE,UAAU,aVtBA,SAAC/H,GACtB,IAAMO,EAAO,IAAIJ,KAAKH,GACtB,MAAO,CAACO,EAAKK,WAAYL,EAAKM,aAAcN,EAAKO,cAAchE,IAAIuD,GAAaK,KAAK,KUoBnDN,CAAQJ,KAEtC,kBAAC,GAAD,CAAa+B,QAAS5F,EAAM4F,QAASuC,IAAKA,MC7B1C2H,G,4MACJjQ,MAAQ,CACN+F,QAAS,GACTmK,SAAS,G,EAGXC,kBAAoB,WAClBrF,GAAQsF,YAAY,IACpBtF,GAAQuF,UAAU,IAClB,EAAK1E,SAAS,CAAE5F,QAAS9B,aAAaC,QAAQ,YAAc,M,EAG9DoM,qBAAuB,WACrBxF,GAAQyF,YAAY,K,EAGtBC,mBAAqB,SAACC,GAA2B,IAAD,EAClB,EAAKtQ,MAAzB+E,EADsC,EACtCA,SAAUyD,EAD4B,EAC5BA,MAEd,EAAK3I,MAAMkQ,SAAWO,EAAUvL,WAAaA,IAC/CjB,aAAaoE,QAAQ,UAAW,IAChC,EAAKsD,SAAS,CACZ5F,QAAS,GACTmK,SAAS,KAIbhL,EAASuE,SAAQ,SAAC/D,GACXiD,EAAMjD,EAAEE,SACXkF,GAAQ4F,QAAQ,CAAEpI,IAAK5C,EAAEE,a,EAK/B+K,gBAAkB,SAACC,GACjB,IAAM7K,EAAU6K,EAAMtP,OAAOP,MAC7BkD,aAAaoE,QAAQ,UAAWtC,GAChC,EAAK4F,SAAS,CAAE5F,a,EAGlB8K,UAAY,SAACD,GACO,UAAdA,EAAM3P,KAAoB2P,EAAME,WAClCF,EAAMG,iBAEN,EAAKC,iBAJkD,IAOjD1I,EAAQ,EAAKnI,MAAbmI,IACR,GAAkB,OAAdsI,EAAM3P,KAA8B,YAAd2P,EAAM3P,IAAmB,CACjD,IAAM8E,EAAU,EAAK5F,MAAM+E,SAASiI,MAAK,SAACzH,GAAD,OAAiBA,EAAEE,SAAW0C,KACvE,GAAIvC,EAAS,CAAC,IAAD,EAC0C6K,EAA7CK,cAAiBlQ,EADd,EACcA,MAAOmQ,EADrB,EACqBA,eAChC,GAA2D,IAAvDnQ,EAAM+C,OAAO,EAAGoN,GAAgBvQ,MAAM,MAAM+C,OAAc,CAAC,IACrDsC,EAASD,EAATC,KACR/B,aAAaoE,QAAQ,UAAWrC,GAChC,EAAK2F,SAAS,CAAE5F,QAASC,Q,EAMjCgL,cAAgB,WAAO,IACbjL,EAAY,EAAK/F,MAAjB+F,QADY,EAEW,EAAK5F,MAA5B+H,EAFY,EAEZA,KAAMQ,EAFM,EAENA,QAASJ,EAFH,EAEGA,IAEnBI,IAICR,EAKAA,EAAKgB,SAKL9C,EAAgBL,KAIrB,EAAK4F,SAAS,CAAEuE,SAAS,IACzBpF,GAAQqG,YAAY,CAClB7I,MACAvC,aAXAM,IAAOC,MAAM,yTALbD,IAAOC,MAAM,6L,EAoBjB8K,gBAAkB,WAChBtG,GAAQsG,gBAAgB,CAAEC,aAAc,EAAKlR,MAAM+E,SAAS,EAAK/E,MAAM+E,SAASxB,OAAS,M,EAG3F4N,SAAW,SAACV,GACNA,EAAMK,cAAcM,WAAa,KACnCX,EAAMG,iBACN,EAAKK,oB,EAITI,WAAa,SAACC,EAAYb,GAAiF,IACjGtI,EAAQ,EAAKnI,MAAbmI,IACJmJ,IACEA,EAAK/K,KAAKT,QAAQ,UAAY,EAChC6E,GAAQ0G,WAAW,CAAElJ,IAAKA,EAAKmJ,SAE/BpL,IAAOC,MAAM,wMAEfsK,EAAMG,mB,EAIVW,QAAU,SAACC,GACT,EAAKH,WAAWG,EAAEC,cAAcC,MAAM,GAAIF,I,EAG5CG,OAAS,SAACH,GACR,IAAMF,EAAOE,EAAEI,aAAalJ,MAAM,GAAGmJ,YACjCP,GACF,EAAKD,WAAWC,EAAME,I,EAG1B3E,OAAS,WAAO,IAAD,EAC6B,EAAK7M,MAAvC+E,EADK,EACLA,SAAUwD,EADL,EACKA,QAASC,EADd,EACcA,MAAOL,EADrB,EACqBA,IAElC,OACE,kBAAC,IAAD,CAAM2J,SAAUvJ,GACd,yBAAKqD,UAAS,gBACZ,yBACEA,UAAU,YACVuF,SAAU,EAAKA,UAEdpM,EAASpE,KAAI,SAAC4E,GAAD,OACZ,kBAAC,GAAD,CACEzE,IAAKyE,EAAE1B,KACP+B,QAASL,EACTwC,KAAMS,EAAMjD,EAAEE,QACd0C,IAAKA,QAIX,yBAAKyD,UAAU,iBACb,kBAAC,IAAMmG,SAAP,CACEC,YAAY,oGACZC,SAAU,CAAEC,QAAS,EAAGC,QAAS,IACjCC,SAAU,EAAK5B,gBACfE,UAAW,EAAKA,UAChB9P,MAAO,EAAKf,MAAM+F,QAClB2L,QAAS,EAAKA,QACdI,OAAQ,EAAKA,SAEf,kBAACU,EAAA,EAAD,CACE3G,QAAS,EAAKmF,oB,YAzJTzE,aA8KJxM,gBAZS,SAACC,GAAmB,IAClCkF,EAAkClF,EAAlCkF,SAAUoD,EAAwBtI,EAAxBsI,IAAKI,EAAmB1I,EAAnB0I,QAASC,EAAU3I,EAAV2I,MAEhC,MAAO,CACLzD,WACAoD,MACAI,UACAC,QACAT,KAAMS,EAAML,MAIDvI,CAAyBkQ,I,oBC9MzB,qBACb,yBAAKwC,QAAQ,gBAAgBC,UAAU,QAAQ3G,UAAU,eAAe4G,YAAU,OAAOtG,MAAM,MAAMgD,OAAO,MACvGvM,KAAK,UAAU8P,cAAY,QAC9B,0BAAMC,EAAE,guBCHG,qBACb,yBAAKJ,QAAQ,gBAAgBC,UAAU,QAAQ3G,UAAU,GAAG4G,YAAU,eAAetG,MAAM,MAAMgD,OAAO,MACnGvM,KAAK,eAAe8P,cAAY,QACnC,0BACEC,EAAE,gLACF/P,KAAK,YACP,0BACE+P,EAAE,uRACF/P,KAAK,gBACP,0BACE+P,EAAE,6LACF/P,KAAK,cCQIgQ,GAhBA,SAAC3S,GAAiC,IACvCuI,EAAYvI,EAAZuI,QAER,OACE,yBAAKqD,UAAU,UACZrD,EAEG,kBAACqK,GAAD,MAEA,kBAACC,GAAD,QCaGC,GAAb,4MACE9C,kBAAoB,WAAO,IAAD,EACF,EAAKhQ,MAAnB+H,EADgB,EAChBA,KAAMI,EADU,EACVA,IACTJ,GACH4C,GAAQ4F,QAAQ,CAAEpI,SAJxB,EAQE4K,YAAc,SAACpJ,EAAe/I,GAA6B,IACjDmH,EAAS,EAAK/H,MAAd+H,KACR,GAAKA,EAAL,CAEA,IAAMiL,EAAW,2BACZjL,GADY,kBAEd4B,EAAQ/I,IAGX,EAAKqS,YAAYD,KAjBrB,EAoBEZ,SAAW,SAACzI,GAAD,OACT,SAAC8G,GAAD,OACE,EAAKsC,YAAYpJ,EAAO8G,EAAMtP,OAAOP,SAtB3C,EAwBEqS,YAAc,SAACD,GAAqB,IAC1BjL,EAAS,EAAK/H,MAAd+H,KACJA,GACF4C,GAAQuI,QAAQ,CACd/K,IAAKJ,EAAKI,IACVJ,KAAMiL,KA7Bd,EAkCEG,YAAc,kBAAM,EAAKF,YAAL,2BACf,EAAKjT,MAAM+H,MADI,IAElBiB,OAAQ,OApCZ,EAuCEoK,SAAW,SAACtS,EAAaF,EAAemH,GAAiB,IAAD,EAC5BA,EAAlBgB,gBAD8C,MACnC,GADmC,IAEf,EAAK/I,MAApCqT,EAF8C,EAE9CA,SAAU5K,EAFoC,EAEpCA,YAAaN,EAFuB,EAEvBA,IACzBnH,GAAYqS,EAElB,OAAQvS,GACN,IAAK,SACH,OACE,6BACE,yBAAKkK,MAAO,CAAEsI,QAAS,SACrB,kBAAC,IAAD,CACE1S,MAAOA,EACPwR,SAAU,EAAKA,SAAStR,GACxBoN,SAAUlN,IAEZ,kBAAC,KAAD,CACE6K,MAAM,yFACNuC,UAAW,EAAK+E,YAChB7E,OAAO,eACPC,WAAW,qBACXgF,KAAM,kBAACC,GAAA,EAAD,CAAexI,MAAO,CAAEvH,MAAO,aACrCzC,UAAWJ,GAEX,kBAAC,KAAD,CACEI,SAAUA,IAAaJ,EACvB6S,QAAM,GAEN,kBAACD,GAAA,EAAD,SAIN,kBAAC,GAAD,CACExK,OAAQpI,EACRmI,SAAUA,EACVvG,KAAM,IACNwI,MAAO,CAAE0I,OAAQ,WAAYJ,QAAS,YAK9C,IAAK,MACH,OACE,kBAAC,IAAD,CACE1S,MAAOA,EACPsN,UAAQ,IAId,IAAK,aACH,OAAOtN,EAEH,kBAAC,IAAD,CACEA,MAAO4D,EAAYjC,SAAS3B,IAC5BsN,UAAQ,IAGV,yKAGN,IAAK,UACH,OAAO,oCAEFmF,GAAa5K,GAAeA,EAAYN,MAAQA,GACjD,oCACE,kBAAC,KAAD,CACEwL,UAAW/S,EACXwR,SAAU,SAACnJ,GAAD,OAAsB,EAAK8J,YAAYjS,EAAKmI,OAI3DrI,EAAQ,6CAAY,sEAGzB,QACE,OACE,kBAAC,IAAD,CACEgT,aAAchT,EACdwR,SAAU,EAAKA,SAAStR,GACxBoN,SAAUlN,MArHtB,EA2HEsL,OAAoC,CAClC,OAAU,uCACV,SAAY,6CACZ,WAAc,sHACd,QAAW,sEACX,IAAO,OAhIX,EAmIEO,OAAS,WAAO,IAAD,EACa,EAAK7M,MAAvB+H,EADK,EACLA,KAAMQ,EADD,EACCA,QAEd,OACE,kBAAC,KAAD,CACEqD,UAAU,WACViI,UAAU,EACVtL,aAAkBkB,IAAT1B,EACT8D,MAAO9D,GAAI,sGAAwBA,EAAKgB,UAAYhB,EAAKI,MAEzD,kBAAC,GAAD,CAAQI,QAASA,IAChBR,GAAQwB,OACNuK,KAAKjL,GACLlI,KAAI,SAACG,GACJ,IAAMQ,EAAQ,EAAKgL,OAAOxL,GAC1B,OAAOQ,GACL,kBAAC,KAAD,CACEsK,UAAW9K,EACXA,IAAKA,EACL+K,MAAOvK,GAIL,EAAK8R,SAAStS,EAAd,UAAsBiH,EAAKjH,IAAQ,IAAMiH,SA1J3D,YAA8BgM,IAAM3H,WAuLrBxM,gBAlBS,SAACC,EAAeG,GAA2B,IACzDuI,EAAgC1I,EAAhC0I,QAASC,EAAuB3I,EAAvB2I,MAAOC,EAAgB5I,EAAhB4I,YAElBN,EAAM,IAAI6L,gBAAgBhU,EAAMkC,MAAMyM,QAAQE,IAAI,QAAUhP,EAAMsI,KAAO,IACzEJ,EAAOS,EAAML,GAKnB,OAJIJ,IAASA,EAAKI,KAAOA,IACvBJ,EAAKI,IAAMA,GAGN,CACLI,UACAR,OACAI,MACAkL,WAAatL,KAAUU,IAAiBA,EAAYN,MAAQJ,EAAKI,OAASM,EAAYQ,SACtFR,iBAIW7I,CAAyBkT,ICrLzBmB,GAtBA,WACb,OACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CACE9I,IANQ,0FAOR3I,KAAM,IACNwI,MAAO,CAAE0I,OAAQ,SAAUJ,QAAS,WAEtC,6BACA,6BACA,kBAAC,KAAD,CACE/M,KAAK,UACL/D,KAAK,QACLkJ,QAAS,kBAAMf,GAAQG,OAAO,KAC9BE,MAAO,CAAEkB,MAAO,SAJlB,oC,0DCmRSgI,G,4MA1QbrU,MAAQyH,E,EAERgF,OAAS,CACPhG,GAAI,KACJC,KAAM,sBACNC,KAAM,oDACNC,OAAQ,qBACRC,OAAQ,uCACRC,MAAO,mDACPC,YAAa,mDACbC,MAAO,2BACPC,SAAU,wFACVC,MAAO,uCACPC,SAAU,sE,EAGZmN,MAAQ,CACN,CACErT,IAAK,SACLF,MAAO,wCAET,CACEE,IAAK,WACLF,MAAO,uEAET,CACEE,IAAK,SACLF,MAAO,4EAET,CACEE,IAAK,OACLF,MAAO,8CAET,CACEE,IAAK,OACLF,MAAO,wCAET,CACEE,IAAK,OACLF,MAAO,8CAET,CACEE,IAAK,MACLF,MAAO,4BAET,CACEE,IAAK,OACLF,MAAO,mC,EAIXwR,SAAW,SAACtR,EAAaF,GAAd,OAET,EAAK4K,SAAL,eAAiB1K,EAAMF,K,EAEzBwT,WAAa,kBACX,EAAK5I,SAAS,CAAE7E,MAAO,M,EAEzB0N,OAAS,CACP/N,GAAI,kBAAM,GACVC,KAAM,SAAC3F,EAAeE,GAAhB,OACJ,kBAAC,KAAD,CACEF,MAAOA,EACPwR,SAAU,SAACxR,GAAD,OAAmB,EAAKwR,SAAStR,EAAKF,KAE/C,EAAKuT,MAAMxT,KAAI,gBAAGG,EAAH,EAAGA,IAAKF,EAAR,EAAQA,MAAR,OACd,kBAAC,KAAO0T,OAAR,CAAe1T,MAAOE,EAAKA,IAAKA,GAC7BF,QAKT4F,KAAM,SAAC5F,EAAeE,GAAhB,OACJ,kBAAC,IAAD,CACEF,MAAOA,EACPwR,SAAU,SAACZ,GAAD,OAAsC,EAAKY,SAAStR,EAAK0Q,EAAEV,cAAclQ,WAGvF6F,OAAQ,SAAC7F,EAAeE,GAAhB,OACN,kBAAC,KAAD,CACEF,MAAOA,EACPc,IAAK,EACL6S,UAAW,EACXnC,SAAU,SAACxR,GAAD,OAAoB,EAAKwR,SAAStR,EAAKF,GAAS,IAC1D4T,KAAM,OAGV9N,OAAQ,SAAC9F,EAAeE,GAAhB,OACN,kBAAC,IAAD,CACEF,MAAOA,EACPwR,SAAU,SAACZ,GAAD,OAAsC,EAAKY,SAAStR,EAAK0Q,EAAEV,cAAclQ,WAGvF+F,MAAO,SAAC/F,EAAeE,GAAhB,OACL,6BACE,yBAAKkK,MAAO,CAAEsI,QAAS,SACrB,kBAAC,IAAD,CACE1S,MAAOA,EACPwR,SAAU,SAACZ,GAAD,OAAsC,EAAKY,SAAStR,EAAK0Q,EAAEV,cAAclQ,UAErF,kBAAC,KAAD,CACEiL,MAAM,qGACNuC,UAAW,EAAKgG,WAChB9F,OAAO,eACPC,WAAW,qBACXgF,KAAM,kBAACC,GAAA,EAAD,CAAexI,MAAO,CAAEvH,MAAO,cAErC,kBAAC,KAAD,CACEzC,UAAWJ,EACX6S,QAAM,GAEN,kBAACD,GAAA,EAAD,SAIN,kBAAC,GAAD,CACEzG,MAAM,SACN/D,OAAQpI,EACRmI,SAAUnI,EACV4B,KAAM,IACNwI,MAAO,CAAE0I,OAAQ,WAAYJ,QAAS,aAI5C1M,YAAa,SAAChG,EAAeE,GAAhB,OACX,kBAAC,IAAMiR,SAAP,CACEnR,MAAOA,EACPwR,SAAU,SAACZ,GAAD,OAAyC,EAAKY,SAAStR,EAAK0Q,EAAEV,cAAclQ,WAG1FiG,MAAO,SAACjG,EAAeE,GAAhB,OACL,kBAAC,KAAD,CACEF,MAAOA,EACPc,IAAK,EACL8S,KAAM,EACNpC,SAAU,SAACxR,GAAD,OAAoB,EAAKwR,SAAStR,EAAKF,GAAS,OAG9DkG,SAAU,SAAClG,EAAeE,EAAamE,GAA7B,MACM,WAAdA,EAAKsB,MAAqB,kBAAC,KAAD,CACxB3F,MAAOA,EACPc,IAAK,EACL8S,KAAM,EACNpC,SAAU,SAACxR,GAAD,OAAoB,EAAKwR,SAAStR,EAAKF,GAAS,OAG9DmG,MAAO,SAACnG,EAAeE,EAAamE,GAA7B,MACS,aAAdA,EAAKsB,MAAuB,kBAAC,KAAD,CAC1B3F,MAAOA,EACPc,IAAK,EACL8S,KAAM,EACNpC,SAAU,SAACxR,GAAD,OAAoB,EAAKwR,SAAStR,EAAKF,GAAS,OAG9DoG,SAAU,SAACpG,EAAgBE,GAAjB,OACR,EAAKd,MAAMiJ,SAAW,kBAAC,KAAD,CACpB0K,QAAS/S,EACTI,UAAW,EAAKhB,MAAMiJ,QACtBmJ,SAAU,SAACuB,GAAD,OAAsB,EAAKvB,SAAStR,EAAK6S,Q,EAKzDP,SAAW,SAACtS,EAAaF,EAAkCqE,GAEzD,IAAM0E,EAAQ,EAAK0K,OAAOvT,GAC1B,OAAO6I,GAASA,EAAM/I,EAAOE,EAAKmE,I,EAGpCwP,SAAW,WAAO,IACR5U,EADO,gBACPA,MADO,EAEiB,EAAKG,MAA7ByU,EAFO,EAEPA,SAFO,IAEGxP,YAFH,MAEU,GAFV,EAITyP,EAAc,eAAQ7U,GAC5B0J,OAAOuK,KAAKjU,GAAOyJ,SAAQ,SAACxI,GAAD,OAGzB4T,EAAQ5T,GAAO4T,EAAQ5T,KAASwG,EAAYxG,IAAQmE,EAAKnE,IAAS4T,EAAQ5T,MAGvE4T,EAAQlO,MAKbiO,EAASC,GACT,EAAKlJ,SAASlE,IALZpB,IAAOC,MAAM,iI,EAQjBwO,QAAU,WAAO,IACP9U,EADM,gBACNA,MADM,EAEQ,EAAKG,MAAnBiF,YAFM,MAEC,GAFD,EAId,OACE,yBAAK2G,UAAU,gBACb,yBAAKA,UAAU,sBACZrC,OACEuK,KAAKxM,GACL3G,KAAI,SAACG,GAGF,IAAMF,EAAQf,EAAMiB,KAASwG,EAAYxG,IAAQmE,EAAKnE,IAASjB,EAAMiB,GAC/D6I,EAAQ,EAAKyJ,SAAStS,EAAKF,EAAOf,GACxC,OAAO8J,GACL,kBAAC,KAAD,CACEiC,UAAW9K,EACXA,IAAKA,EAEL+K,MAAO,EAAKS,OAAOxL,IAElB6I,OAOb,yBAAKiC,UAAU,0BACb,kBAAC,KAAD,CACEC,MAAM,0IACNuC,UAAW,kBAAM,EAAK5C,SAASlE,IAC/BgH,OAAO,mDACPC,WAAW,uCACXgF,KAAM,kBAACC,GAAA,EAAD,CAAexI,MAAO,CAAEvH,MAAO,cAErC,kBAAC,KAAD,0DAIF,kBAAC,KAAD,CACEoI,MAAM,6HACNuC,UAAW,EAAKqG,SAChBnG,OAAO,uCACPC,WAAW,uCACXgF,KAAM,kBAACC,GAAA,EAAD,CAAexI,MAAO,CAAEvH,MAAO,cAErC,kBAAC,KAAD,iD,EASVoJ,OAAS,WAAO,IAAD,EACgB,EAAK7M,MAA1B4U,EADK,EACLA,QAAStJ,EADJ,EACIA,QAEjB,OACE,kBAAC,KAAD,CACEM,UAAU,qBACViJ,UAAQ,EACR9I,UAAU,EACVE,SAAU2I,EACV5I,OAAQ,KACRV,QAASA,EACTO,MACE,kBAACC,GAAA,EAAD,CAAeJ,QAASkJ,KAGzB,EAAKD,Y,YArQYvI,a,mBCwDX0I,G,4MAtDbrI,UAAY,SAACxH,GAAiB,IACpB8P,EAAa,EAAK/U,MAAlB+U,SACR,GAAKA,EAAL,CAEA,IAAMC,EAAiBD,EACpBpU,KAAI,YAAuD,IAApDW,EAAmD,EAAnDA,MAAOoK,EAA4C,EAA5CA,QAAkBuJ,GAA0B,EAAnChM,QAAmC,EAA1BgM,WAC/B,QAAIA,IAAcA,EAAUhQ,KAG1B,kBAAC,IAAKpE,KAAN,CAAWC,IAAKQ,GACd,kBAAC,KAAD,CAAQoK,QAAS,kBAAMA,GAAWA,EAAQzG,KACvC3D,OAIN0D,OAAO4I,SACZ,GAA8B,IAA1BoH,EAAezR,OAEnB,OACE,kBAAC,KAAD,CACE2R,QAAS,kBAAC,IAAD,KAAOF,GAChBG,QAAS,CAAC,UAEV,kBAAC,KAAD,KACE,kBAACC,GAAA,EAAD,U,EAMRvI,OAAS,WAAO,IAAD,EACU,EAAK7M,MAApB0I,EADK,EACLA,MAAOP,EADF,EACEA,IAEf,OAAKO,GAA0B,IAAjBA,EAAMnF,OAOlB,yBAAKqI,UAAU,cACZlD,EAAM/H,KAAI,SAACsE,GAAD,OACT,kBAAC,GAAD,CACEnE,IAAKmE,EAAKqB,GAAKrB,EAAKpB,KACpBoB,KAAMA,EACN+G,OAAQ,EAAKS,UAAUxH,GACvBkD,IAAKA,QAXT,kBAAC,KAAD,CAAOvB,YAAY,+E,YApCHwF,a,UCgHTiJ,G,4MAlHbC,aAAe,CACbC,aAAc,GACdC,cAAc,EACdC,iBAAiB,EACjBC,QAAS,CACP,QAAU,EACV,QAAU,EACV,UAAY,EACZ,MAAQ,EACR,MAAQ,EACR,MAAQ,EACR,KAAO,EACP,MAAQ,I,EA2BZC,WAAa,SAAC9V,GAA6B,IACjC4V,EAA2C5V,EAA3C4V,gBAAiBD,EAA0B3V,EAA1B2V,aAAcE,EAAY7V,EAAZ6V,QAEjCE,EAAY,SAACpP,EAAgBlF,GAAjB,OAChB,yBACEuU,SAAU,EACVjK,UAAU,wBAEVF,QAAS,WACPoK,QAAQC,IAAIvP,EAAMkP,EAAQlP,IAC1B,EAAKgF,SAAS,CAAEkK,QAAQ,2BAAMA,GAAP,kBAAiBlP,GAAQkP,EAAQlP,SAG1D,kBAAC,KAAD,CACEmN,QAEE+B,EAAQlP,KAEXlF,IAIL,OACE,kBAAC,KAAM0U,MAAP,CACEpC,kBAAcnK,EACduB,MAAO,CAAEsI,QAAS,OAAQ2C,cAAe,WAExCL,EAAU,SAAU,wCACpBA,EAAU,SAAU,4EACpBA,EAAU,WAAY,uEACtBA,EAAU,OAAQ,8CAClBA,EAAU,OAAQ,kCAClBA,EAAU,OAAQ,8CAClBA,EAAU,MAAO,kCACjBA,EAAU,OAAQ,wCACnB,yBAAKC,SAAU,EAAGjK,UAAU,wBACvBF,QAAS,kBAAM,EAAKF,SAAS,CAAEgK,cAAeA,MACjD,kBAAC,KAAD,CAAQ7B,QAAS6B,IAFnB,wFAIA,yBAAKK,SAAU,EAAGjK,UAAU,wBACvBF,QAAS,kBAAM,EAAKF,SAAS,CAAEiK,iBAAkBA,MACpD,kBAAC,KAAD,CAAQ9B,QAAS8B,IAFnB,uG,EAQNS,gBAAyC,iBAAM,I,EAC/CC,UAA+C,WAC7C,OACE,yBAAKvK,UAAU,kBACZ,EAAKsK,oB,EAKZE,WAAgD,kBAAM,kBAAC,IAAMnW,SAAP,O,EACtDwM,UAA+C,kBAAM,kBAAC,IAAMxM,SAAP,O,EACrDoW,SAA6C,a,EAE7CxJ,OAAS,WAAO,IACNtE,EAAY,EAAKvI,MAAjBuI,QACFG,EAAQ,EAAKA,MAEnB,OACE,kBAAC,KAAD,CAAMkD,UAAU,QAAQC,MAAO,EAAKwK,YAClC,kBAAC,GAAD,CAAQ9N,QAASA,IAChB,EAAK4N,UAAUzN,GACf,EAAK0N,WAAW1N,GAChB,EAAK+D,UAAU/D,K,qDA5FT,IAAD,EACuD+C,KAAK5L,MAA9D0V,EADE,EACFA,aAAcG,EADZ,EACYA,QAASF,EADrB,EACqBA,aAAcC,EADnC,EACmCA,gBAEvCa,EAAgBf,EAAa/K,cACnC,OAAOiB,KACJzL,MACA0I,MACA1D,QAAO,SAACC,GAAiB,IAChBuB,EAA8CvB,EAA9CuB,KAAMI,EAAwC3B,EAAxC2B,YAAaF,EAA2BzB,EAA3ByB,OAAQH,EAAmBtB,EAAnBsB,KAAMS,EAAa/B,EAAb+B,SACzC,OACGR,GAAQA,EAAKgE,cAAc1E,QAAQwQ,IAAkB,GAClD1P,GAAeA,EAAY4D,cAAc1E,QAAQwQ,IAAkB,GACnE5P,GAAUA,EAAO8D,cAAc1E,QAAQwQ,IAAkB,IAG7DZ,EAAQnP,KAEPiP,IAA6B,IAAbxO,GACbyO,IAAgC,IAAbzO,U,GAnCgDoF,a,UCPpEmK,GAAyD,SAACvW,GAAW,IACxEiF,EAAoCjF,EAApCiF,KAAMuR,EAA8BxW,EAA9BwW,WAAYpE,EAAkBpS,EAAlBoS,SAAUzQ,EAAQ3B,EAAR2B,IAD2C,EAGnD8U,mBAAS,GAH0C,mBAGxEnU,EAHwE,KAGhEoU,EAHgE,KAIzEC,EAAgB,SAAC/V,GACA,kBAAVA,IACT8V,EAAU9V,GAAS,GACnBwR,GAAYA,EAASxR,GAAS,KAIlC,OACE,oCACE,kBAAC,KAAD,eACEgT,aAAc,EACdhT,MAAO0B,EACPZ,IAAK,EACLC,IAAKA,GAAOsD,EAAK3C,OACjB8P,SAAUuE,GACLH,GAAc,KAErB,kBAAC,KAAD,CACE5V,MAAO0B,EACPsR,aAAc,EACdlS,IAAK,EACLC,IAAKA,GAAOsD,EAAK3C,OACjB8P,SAAUuE,EACVC,MAAOjV,GAAOsD,EAAK3C,QAAU,KAAO,OA2C7BuU,GAhCyC,SAAC7W,GAAW,IAC1DiF,EAAoCjF,EAApCiF,KAAMwP,EAA8BzU,EAA9ByU,SAAUqC,EAAoB9W,EAApB8W,WAAYnV,EAAQ3B,EAAR2B,IAC9BoV,EAAUpV,GAAOA,GAAO,IAAQA,GAAOsD,EAAK3C,QAAU2C,EAAK3C,QAAU,EACrEuJ,EAAQkL,EAAM,iFACGpV,GAAOsD,EAAK3C,OADf,iBAEhB,8CAEAA,EAAS,EAEb0U,KAAMC,QAAN,aACEpL,MAAOA,EACPD,UAAW,eACX+I,QAASoC,GACP,kBAAC,GAAD,iBACM/W,EADN,CAEEoS,SAAU,SAACxR,GACY,kBAAVA,IAAoB0B,EAAS1B,OAI9CsW,KAAM,SAACC,GACL1C,GAAYA,EAASnS,GACrB6U,KAEF7I,OAAQ,uCACRC,WAAY,uCACZ6I,cAAc,EACdvC,UAAU,GACNiC,GAAc,MCjDTO,GAAb,4MACExX,MADF,2BAEO,EAAKyV,cAFZ,IAGIgC,cAAc,EACdC,YAAa,KACbC,YAAa,KALjB,EAQExH,kBAAoB,WAClBrF,GAAQ8M,SAAS,KATrB,EAYEvB,gBAAkB,iBAAM,CACtB,kBAAC,KAAD,CACEpV,IAAI,UACJ4K,QAAS,kBAAM,EAAKgM,oBAAmB,KAFzC,yFAMA,kBAAC,IAAD,CACE5W,IAAI,SACJkR,YAAY,kFACZI,SAAU,SAACZ,GAAD,OAAsC,EAAKhG,SAAS,CAAE+J,aAAc/D,EAAEV,cAAclQ,SAC9F+W,YAAU,IAEZ,kBAAC,KAAD,CACE7W,IAAI,UACJoU,QAAS,EAAKS,WAAW,EAAK9V,OAC9BsV,QAAS,CAAC,UAEV,kBAAC,KAAD,KACE,kBAACyC,GAAA,EAAD,QAGJ,kBAAC,IAAD,CACE9W,IAAI,cACJ+K,MAAM,6LAEN,kBAAC,KAAD,CACEjL,MAAO,EAAKf,MAAM2X,YAClB9V,IAAK,EACLC,IAAK,GACLyQ,SAAU,SAACoF,GAAD,OAA0B,EAAKhM,SAAS,CAAEgM,YAAaA,GAAe,UA1CxF,EA+CEK,aAA2B,CACzB,CACEvW,MAAO,iCACPoK,QAAS,SAACzG,GAAD,OAAiB4R,GAAY,CACpC5R,KAAMA,EACNtD,IAAK,IACL8S,SAAU,SAACnS,GAAD,OACRqI,GAAQmN,SAAS,CACfxR,GAAIrB,EAAKqB,GACT6B,IAAK,EAAKnI,MAAMmI,IAChB4P,SAAU9S,EAAKsB,KACfjE,eAGN2S,UAAW,SAAChQ,GAAD,OAAiBA,EAAK+B,UAAY4G,QAAQ,EAAK5N,MAAMyI,aAAe,EAAKzI,MAAMyI,YAAYQ,WAExG,CACE3H,MAAO,iFACPoK,QAAS,SAACzG,GAAD,OAAiB,EAAK+S,kBAAkB/S,IACjDgQ,UAAW,SAAChQ,GAAD,OAAiB2I,QAAS,EAAK5N,MAAMmI,MAAQlD,EAAKQ,SAAWR,EAAK+B,UAAc,EAAKhH,MAAMyI,aAAe,EAAKzI,MAAMyI,YAAYQ,WAE9I,CACE3H,MAAO,oDACPoK,QAASoK,QAAQC,IACjBd,UAAW,kBAAMrH,QAAQ,EAAK5N,MAAMyI,aAAe,EAAKzI,MAAMyI,YAAYQ,WAE5E,CACE3H,MAAO,6CACPoK,QAAS,SAACzG,GAAD,OAAiB,EAAKgT,YAAYhT,IAC3CgQ,UAAW,SAAChQ,GAAD,OAAiB2I,QAAS,EAAK5N,MAAMmI,MAAQlD,EAAKQ,SAAWR,EAAK+B,UAAc,EAAKhH,MAAMyI,aAAe,EAAKzI,MAAMyI,YAAYQ,YA5ElJ,EAgFEyO,mBAAqB,eAACJ,EAAD,wDAA0B,EAAKzX,MAAMyX,aAArC,OACnB,EAAK9L,SAAS,CAAE8L,kBAjFpB,EAmFEU,kBAAoB,SAAC/S,GAAD,OAClB,EAAKuG,SAAS,CAAE+L,YAAatS,GAAQ,QApFzC,EAsFEiT,aAAe,SAACjT,GACd0F,GAAQzC,QAAQ,CAAEjD,SAClB,EAAKyS,oBAAmB,GACxB,EAAKM,kBAAkB,OAzF3B,EA4FEG,YAAc,WAAO,IAAD,EACoB,EAAKtY,MAAnCyX,EADU,EACVA,aAAcC,EADJ,EACIA,YACd9O,EAAgB,EAAKzI,MAArByI,YACFQ,KAAaR,IAAeA,EAAYQ,SAE9C,OACE,oCACE,kBAAC,GAAD,CACEqC,QAASgM,EACT1C,QAAS,kBAAM,EAAK8C,oBAAmB,IACvCjD,SAAU,EAAKyD,aACfjP,QAASA,IAEX,kBAAC,GAAD,CACEqC,UAAWiM,EACX3C,QAAS,kBAAM,EAAKoD,kBAAkB,OACtCvD,SAAU,EAAKyD,aACfjT,KAAMsS,QAAe9N,EACrBR,QAASA,MA9GnB,EAoHEgP,YAAqC,SAAChT,GAAD,OAAiB+R,KAAMC,QAAQ,CAClEpL,MAAO,6CACP8I,QAAS,8OACTyC,cAAc,EACd9I,OAAQ,6CACRC,WAAY,uCACZ2I,KAAM,SAACC,GACLxM,GAAQyN,WAAW,CAAE9R,GAAIrB,EAAKqB,KAC9B6Q,QA5HN,EAgIEf,WAAa,SAAC1N,GAAoB,IACxBD,EAAgB,EAAKzI,MAArByI,YACR,OACE,kBAAC,GAAD,CACEC,MAAOA,EACPD,YAAaA,EACbsM,SAAU,EAAK8C,gBAtIvB,EA2IEQ,iBAAmB,WAAO,IAAD,EACe,EAAKrY,MAAnC4I,EADe,EACfA,iBAAkBL,EADH,EACGA,QAClBf,EAAwFoB,EAAxFpB,OAAQI,EAAgFgB,EAAhFhB,aAAcD,EAAkEiB,EAAlEjB,gBAAiBD,EAAiDkB,EAAjDlB,gBAAiBD,EAAgCmB,EAAhCnB,QAASI,EAAuBe,EAAvBf,aAAcC,EAASc,EAATd,KACvF,OAAON,GACL,yBAAKoE,UAAU,uBACb,qFAAmBpE,GACnB,+KAAkCC,EAAU,uCAAW,2DACvD,+IAA2BC,GAC3B,mIAAyBC,GACzB,uKAA+BC,GAC/B,2JAA6BC,GAC7B,kBAAC,KAAD,CACE6D,QAAS,kBAAMf,GAAQC,mBAAmB,CAAEjB,MAAO,SAAU/I,MAAO,MACpEI,UAAW8G,GAAQS,GAFrB,wCAMA,4BACEqD,UAAU,SACVF,QAAS,kBAAMf,GAAQC,mBAAmB,CAAEjB,MAAO,SAAU/I,MAAO,MACpEI,SAAUuH,MA/JpB,EAqKE8N,SAAW,kBAAO,EAAKrW,MAAMuI,SAAZ,qKAAwD,EAAKvI,MAAM0I,MAAMnF,SArK5F,EAuKEkJ,UAAY,SAAC/D,GAAiC,IACpC8O,EAAgB,EAAK3X,MAArB2X,YACAjP,EAAY,EAAKvI,MAAjBuI,QACR,OACE,oCACG,EAAK4P,cACL,EAAKE,oBACJ9P,GACA,kBAAC,KAAD,CACEqD,UAAU,oBACVF,QAAS,kBAAMf,GAAQ2N,aAAa,CAAEhW,OAAQkV,EAAae,SAAU7P,EAAMA,EAAMnF,OAAS,OAF5F,0DAIaiU,EAJb,kBA/KV,YAA2BnC,IAuMZzV,gBAZS,SAACC,GAGvB,MAAO,CACL0I,QAH6D1I,EAAvD0I,QAINE,YAJ6D5I,EAA9C4I,YAKfN,IAL6DtI,EAAjCsI,IAM5BO,MAN6D7I,EAA5B6I,MAOjCE,iBAP6D/I,EAArB+I,oBAW7BhJ,CAAyByX,ICtNlCmB,I,mNACJxI,kBAAoB,WAClBrF,GAAQ8N,iBAAiB,K,EAG3BpI,mBAAqB,WAAO,IAAD,EACe,EAAKrQ,MAArC0Y,EADiB,EACjBA,YAAalQ,EADI,EACJA,OADI,EACGD,SAEZmQ,EAAYnV,OAAS,GACnCmV,EAAYpP,SAAQ,SAACnB,GACdK,EAAML,IACTwC,GAAQ4F,QAAQ,CAAEpI,Y,EAK1B0E,OAAS,WAAO,IAAD,EAC2B,EAAK7M,MAArC0Y,EADK,EACLA,YAAalQ,EADR,EACQA,MAAOkD,EADf,EACeA,QAEtBiN,EAAaD,EAChB1T,QAAO,SAACmD,GAAD,OAAiBK,EAAML,IAAQK,EAAML,GAAKA,OACjDxH,KAAI,SAACwH,GAAD,OAAiBK,EAAML,MAE9B,OACE,kBAAC,IAAD,CAAMyD,UAAU,gBACb+M,EAAWhY,KAAI,SAACoH,GAAD,OACd,yBACE6D,UAAU,qBACV9K,IAAKiH,EAAKI,IACVuD,QAAS,kBAAMA,EAAQ3D,KAErB,yBAAK6D,UAAS,6BAAwBhI,EAASmE,EAAKe,YAAc,SAAW,KAC3E,kBAAC,GAAD,CACEE,OAAQjB,EAAKiB,OACbD,SAAUhB,EAAKgB,WAEjB,yBAAK6C,UAAU,0BACZ7D,EAAKgB,UAAYhB,EAAKI,MAG1BJ,EAAKe,YACJ,yBAAK8C,UAAU,wBACZpH,EAAYuD,EAAKe,mB,YA1CNsD,cA+DfxM,gBAXS,SAACC,GAAmB,IAClC8I,EAAuC9I,EAAvC8I,cAAeR,EAAwBtI,EAAxBsI,IAAKI,EAAmB1I,EAAnB0I,QAE5B,MAAO,CACLC,MAH6C3I,EAAV2I,MAInCkQ,YAAanP,OAAOuK,KAAKnL,GACzBR,MACAI,aAIW3I,CAAyB4Y,ICjDlCI,G,4MACJ/Y,M,2BACK,EAAKyV,c,IACRiC,YAAa,KACbsB,SAAU,O,EAGZ7I,kBAAoB,WAAO,IAAD,EACF,EAAKhQ,MAAnB+H,EADgB,EAChBA,KAAMI,EADU,EACVA,KACTJ,GAAQI,GACXwC,GAAQ4F,QAAQ,CAAEpI,S,EAItB+N,gBAAkB,iBAAM,CACtB,kBAAC,IAAD,CACEpV,IAAI,SACJkR,YAAY,kFACZI,SAAU,SAACZ,GAAD,OAAsC,EAAKhG,SAAS,CAAE+J,aAAc/D,EAAEV,cAAclQ,SAC9F+W,YAAU,IAEZ,kBAAC,KAAD,CACE7W,IAAI,UACJoU,QAAS,EAAKS,WAAW,EAAK9V,OAC9BsV,QAAS,CAAC,UAEV,kBAAC,KAAD,KACE,kBAACyC,GAAA,EAAD,QAGJ,EAAKkB,iB,EAGPC,kBAAoB,SAACrQ,GAAoB,IAAD,EACP,EAAK1I,MAA5BkJ,EAD8B,EAC9BA,UAAWX,EADmB,EACnBA,QAEnB,GAAIW,IAAcX,EAAS,CACzB,IAAMyQ,EAAiBzP,OAAOC,OAAON,GAC/B+P,EAAuB,GACvBC,EAA2B,GAoBjC,OAlBAF,EACG1P,SAAQ,SAAC6P,GAAmB,IACnB7S,EAAO6S,EAAP7S,GACFrB,EAAOyD,EAAMsE,MAAK,SAAC/H,GAAD,OAAiBA,EAAKqB,KAAOA,KACjDrB,EACFgU,EAAYG,KAAZ,2BACKnU,GACAkU,IAGLD,EAAeE,KAAK9S,MAItB4S,EAAe3V,OAAS,GAC1BoH,GAAQuC,YAAY,CAAE5G,GAAI4S,EAAeG,UAGpCJ,EAGT,MAAO,I,EAGTJ,SAAW,SAAC5T,GAAD,OACT,EAAKuG,SAAS,CAAEqN,SAAU5T,GAAQ,Q,EAEpC6T,aAAe,WAAO,IACZD,EAAa,EAAKhZ,MAAlBgZ,SACR,OACE,kBAAC,KAAD,CACE/X,IAAI,aACJwK,UAAWuN,EACX9M,UAAU,GAEV,kBAAC,GAAD,CAAiBL,QAAS,SAAC3D,GACR,OAAb8Q,IACFlO,GAAQkO,SAAS,CACf1Q,IAAK,EAAKnI,MAAMmI,IAEhB7B,GAAIuS,EAASvS,GACbjF,GAAI0G,EACJ9C,KAAM4T,IAER,EAAKA,SAAS,Y,EAOxBS,sBAAwB,SAACrU,GAAD,OACtB,6BACE,6QACA,6BAFF,IAEQ,6BAFR,IAEc,6BACZ,kBAAC,KAAD,CACE+F,MAAO,CAAEkB,MAAO,0BAChBR,QAAS,WACPf,GAAQ+B,WAAW,CAAEpG,GAAIrB,EAAKqB,GAAI6B,IAAK,EAAKnI,MAAMmI,MAClDjC,IAAOqT,QAAQ,gDAJnB,yE,EAUJ1B,aAA2B,CACzB,CACEvW,MAAO,mDACPoK,QAAS,SAACzG,GAAD,OAAiB4R,GAAY,CACpC5R,KAAMA,EACNwP,SAAU,SAACnS,GAAD,OAAoBqI,GAAQkO,SAAS,CAC7CvS,GAAIrB,EAAKqB,GACT6B,IAAK,EAAKnI,MAAMmI,IAChBqR,aAAa,EACbvU,KAAK,2BACAA,GADD,IAEF3C,kBAKR,CACEhB,MAAO,2EACPoK,QAAS,SAACzG,GAAD,OAAiB+R,KAAMC,QAAQ,CACtCpL,MAAM,4EAAD,OAAkBzE,EAAYnC,GAAM,GAApC,KACLiS,KAAM,SAACC,GACLxM,GAAQkO,SAAS,CACfvS,GAAIrB,EAAKqB,GACT6B,IAAK,EAAKnI,MAAMmI,IAChBlD,KAAK,2BACAA,GADD,IAEF3C,OAAQ,IAEVmX,KAAK,IAEPtC,KAEF7I,OAAQ,eACRC,WAAY,0CAEd0G,UAAW,SAAChQ,GAAD,MAA+B,WAAdA,EAAKsB,OAEnC,CACEjF,MAAO,yDACPoK,QAAS,SAACzG,GAAD,OAAiB4R,GAAY,CACpC5R,KAAMA,EACNwP,SAAU,SAACnS,GAAD,OAAoBqI,GAAQkO,SAAS,CAC7CvS,GAAIrB,EAAKqB,GACT6B,IAAK,EAAKnI,MAAMmI,IAChBlD,KAAK,2BACAA,GADD,IAEF3C,kBAKR,CACEhB,MAAO,mDACPoK,QAAS,SAACzG,GAAD,OAAiB4R,GAAY,CACpC5R,KAAMA,EACNwP,SAAU,SAACnS,GAAD,OAAoB,EAAKuW,SAAL,2BAAmB5T,GAAnB,IAAyB3C,iBAG3D,CACEhB,MAAO,oDACPoK,QAASoK,QAAQC,IACjBd,UAAW,kBAAMrH,QAAQ,EAAK5N,MAAMyI,aAAe,EAAKzI,MAAMyI,YAAYQ,WAE5E,CACE3H,MAAO,uCACPoK,QAAS,SAACzG,GAAD,OAAiB4R,GAAY,CACpC5R,KAAMA,EACNwP,SAAU,SAACnS,GAAD,OACRqI,GAAQ+B,WAAW,CAAEpG,GAAIrB,EAAKqB,GAAI6B,IAAK,EAAKnI,MAAMmI,IAAK7F,eAE3D2S,UAAW,kBAAMrH,QAAQ,EAAK5N,MAAMyI,aAAe,EAAKzI,MAAMyI,YAAYQ,Y,EAI9EoN,SAAW,mBAAQ,EAAKrW,MAAM+H,MAAb,sGAAyC,EAAK/H,MAAM+H,KAAKgB,UAAY,EAAK/I,MAAM+H,KAAKI,M,EAEtGiO,WAAa,SAAC1N,GAAoB,IAAD,EACF,EAAK1I,MAA1ByI,EADuB,EACvBA,YAAaN,EADU,EACVA,IAErB,OACE,kBAAC,GAAD,CACEA,IAAKA,EACLM,YAAaA,EACbC,MAAO,EAAKqQ,kBAAkBrQ,GAC9BqM,SAAWtM,IAAgBA,EAAYN,MAAQA,GAAOM,EAAYQ,SAC9D,EAAK4O,kBACLpO,K,YAhMY4L,IA+NTzV,gBAxBS,SAACC,EAAeG,GAA4B,IAC1DuI,EAAgE1I,EAAhE0I,QAASC,EAAuD3I,EAAvD2I,MAAOC,EAAgD5I,EAAhD4I,YAAaC,EAAmC7I,EAAnC6I,MAAO3D,EAA4BlF,EAA5BkF,SAAU4D,EAAkB9I,EAAlB8I,cAEhDR,EAAM,IAAI6L,gBAAgBhU,EAAMkC,MAAMyM,QAAQE,IAAI,QAAUhP,EAAMsI,KAAO,IACzEJ,EAAOS,EAAML,GAOnB,OANIJ,IAASA,EAAKI,KAAOA,IACvBJ,EAAKI,IAAMA,GAKN,CACLI,UACAJ,MACAO,QACAQ,UANgBnB,EAAOA,EAAKmB,UAAY,GAOxCnB,OACAU,cACAD,QACAzD,WACA4D,mBAIW/I,CAAyBgZ,I,oBC7L3Bc,I,OAAwB,CACnCjM,OAAQ,EACRC,KAAM,EACNC,MAAO,IAGIgM,GAA+B,CAC1CC,QAAS,CACPC,SAAUH,GACVI,WAAYJ,GACZK,UAAWL,GACXM,SAAUN,GACVO,aAAcP,GACdQ,QAASR,GACTS,KAAMT,IAERU,OAAQ,CACNC,UAAWX,GACXY,QAASZ,GACTa,WAAYb,GACZc,QAASd,GACTe,aAAcf,GACdgB,SAAUhB,GACViB,MAAOjB,GACPkB,SAAUlB,GACVmB,MAAOnB,GACPoB,MAAOpB,GACPqB,QAASrB,GACTsB,OAAQtB,GACRuB,OAAQvB,GACRwB,OAAQxB,GACRyB,SAAUzB,IAEZ5M,MAAO,CACLsO,MAAO,EACPC,WAAY,EACZC,IAAK,EACLC,YAAa,EACbC,OAAQ,GAERC,gBAAiB,EACjBC,aAAc,EACdC,WAAYjC,GACZkC,YAAa,EACbC,WAAY,EACZC,aAAc,EACdC,SAAU,EACVC,YAAa,EACbC,eAAgB,EAChBC,YAAa,EACbC,iBAAkB,GAEpBC,IAAK,IAGMxC,GAAoB,CAC/B,CACEtY,MAAO,KACPyM,KAAM,2BACNpE,MAAO,YAET,CACErI,MAAO,KACPyM,KAAM,+DACNpE,MAAO,cAET,CACErI,MAAO,KACPyM,KAAM,2EACNpE,MAAO,aAET,CACErI,MAAO,KACPyM,KAAM,6CACNpE,MAAO,YAET,CACErI,MAAO,KACPyM,KAAM,yDACNpE,MAAO,gBAET,CACErI,MAAO,KACPyM,KAAM,mDACNpE,MAAO,WAET,CACErI,MAAO,KACPyM,KAAM,iCACNpE,MAAO,SAIEyQ,GAAmB,CAC9B,CACE9Y,MAAO,aACPyM,KAAM,uCACNsO,QAAS,WACT1S,MAAO,YACP2S,QAAS,SAACC,GAAD,OAAO,EAAK,EAAIA,EAAEC,KAE7B,CACElb,MAAO,WACPyM,KAAM,kFACNsO,QAAS,SACT1S,MAAO,UACP2S,QAAS,SAACC,GAAD,OAAQ,EAAIA,EAAEC,KAEzB,CACElb,MAAO,cACPyM,KAAM,4HACNsO,QAAS,SACT1S,MAAO,aACP2S,QAAS,SAACC,GAAD,OAAQ,EAAIA,EAAEC,KAEzB,CACElb,MAAO,UACPyM,KAAM,0DACNsO,QAAS,mBACT1S,MAAO,UACP2S,QAAS,SAACC,GAAD,OAAO,GAAM,GAAKA,EAAEC,GAAKD,EAAEE,MAEtC,CACEnb,MAAO,QACPyM,KAAM,wFACNsO,QAAS,iBACT1S,MAAO,eACP2S,QAAS,SAACC,GAAD,OAAO,GAAM,GAAKA,EAAEC,GAAKD,EAAEE,MAEtC,CACEnb,MAAO,WACPyM,KAAM,mDACNsO,QAAS,mBACT1S,MAAO,WACP2S,QAAS,SAACC,GAAD,OAAO,GAAKA,EAAEG,GAAKH,EAAEI,GAAM,EAAIJ,EAAEC,MAE5C,CACElb,MAAO,QACPyM,KAAM,+DACNsO,QAAS,WACT1S,MAAO,QACP2S,QAAS,SAACC,GAAD,OAAO,EAAK,EAAIA,EAAEC,KAE7B,CACElb,MAAO,WACPyM,KAAM,iCACNsO,QAAS,aACT1S,MAAO,WACP2S,QAAS,SAACC,GAAD,OAAO,IAAMA,EAAEG,GAAKH,EAAEC,MAEjC,CACElb,MAAO,QACPyM,KAAM,iCACNsO,QAAS,SACT1S,MAAO,QACP2S,QAAS,SAACC,GAAD,OAAO,EAAIA,EAAEC,KAExB,CACElb,MAAO,QACPyM,KAAM,6CACNsO,QAAS,aACT1S,MAAO,QACP2S,QAAS,SAACC,GAAD,OAAO,IAAMA,EAAEG,GAAKH,EAAEC,MAEjC,CACElb,MAAO,UACPyM,KAAM,iCACNsO,QAAS,SACT1S,MAAO,UACP2S,QAAS,SAACC,GAAD,OAAO,EAAIA,EAAEK,KAExB,CACEtb,MAAO,SACPyM,KAAM,uCACNsO,QAAS,SACT1S,MAAO,SACP2S,QAAS,SAACC,GAAD,OAAO,EAAIA,EAAEK,KAExB,CACEtb,MAAO,SACPyM,KAAM,qEACNsO,QAAS,SACT1S,MAAO,SACP2S,QAAS,SAACC,GAAD,OAAO,EAAIA,EAAEM,KAExB,CACEvb,MAAO,SACPyM,KAAM,uCACNsO,QAAS,SACT1S,MAAO,SACP2S,QAAS,SAACC,GAAD,OAAO,EAAIA,EAAEM,KAExB,CACEvb,MAAO,WACPyM,KAAM,yDACNsO,QAAS,cACT1S,MAAO,WACP2S,QAAS,SAACC,GAAD,OAAO,GAAKA,EAAEI,GAAKJ,EAAEK,OAIrB9P,GAAkB,CAC7B,CACExL,MAAO,QACPyM,KAAM,6CACNpE,MAAO,QACP2S,QAAS,SAACQ,EAAGhQ,GAAJ,OAAelL,KAAKmb,KAAOjQ,EAAMwO,IAAM,IAAO,EAAK,GAAK,GAAK,IAExE,CACEha,MAAO,WACPyM,KAAM,0DACNpE,MAAO,aACP2S,QAAS,SAACC,GAAD,OAAO,EAAI3a,KAAKC,MAAM0a,EAAEI,GAAK,KAExC,CACErb,MAAO,aACPyM,KAAM,2BACNpE,MAAO,OAET,CACErI,MAAO,eACPyM,KAAM,wFACNpE,MAAO,cACP2S,QAAS,SAACC,GAAD,OAAO,GAAM,GAAKA,EAAEE,KAE/B,CACEnb,MAAO,SACPyM,KAAM,2BACNpE,MAAO,WAIEqT,GAAqB,CAChC,CACE1b,MAAO,SACPyM,KAAM,qHACNpE,MAAO,kBACP2S,QAAS,SAACC,EAAGzP,GAAJ,OAAe,IAAMyP,EAAEE,GAAM,EAAIF,EAAEI,IAAS7P,EAAMuO,WAAavO,EAAMsO,QAEhF,CACE9Z,MAAO,gBACPyM,KAAM,2FACNpE,MAAO,gBAET,CACErI,MAAO,eACPyM,KAAM,gEACNpE,MAAO,aACP2S,QAAS,SAACC,GAAD,OAAOA,EAAEC,KAEpB,CACElb,MAAO,eACPyM,KAAM,qEACNpE,MAAO,cACP2S,QAAS,SAACC,GAAD,OAAO3a,KAAKC,MAAM0a,EAAEI,GAAK,KAEpC,CACErb,MAAO,eACPyM,KAAM,iFACNpE,MAAO,aACP2S,QAAS,SAACC,GAAD,OAAO,EAAIA,EAAEI,KAExB,CACErb,MAAO,eACPyM,KAAM,4EACNpE,MAAO,eACP2S,QAAS,SAACC,GAAD,OAAO,EAAI3a,KAAKqb,KAAKV,EAAEC,GAAK,KAEvC,CACElb,MAAO,eACPyM,KAAM,+DACNpE,MAAO,WACP2S,QAAS,SAACC,GAAD,OAAO,EAAIA,EAAEG,KAExB,CACEpb,MAAO,eACPyM,KAAM,wFACNpE,MAAO,cACP2S,QAAS,SAACC,GAAD,OAAO3a,KAAKD,IAAI,EAAG4a,EAAEE,GAAK,KAErC,CACEnb,MAAO,eACPyM,KAAM,0DACNpE,MAAO,iBACP2S,QAAS,SAACC,GAAD,OAAOA,EAAEW,KAEpB,CACE5b,MAAO,eACPyM,KAAM,sEACNpE,MAAO,cACP2S,QAAS,SAACC,EAAGzP,GAAJ,OAAgBA,EAAMsO,MAAQ,IAAM,EAAK,EAAImB,EAAEK,IAAO9P,EAAMqP,oBAW5DgB,GAAmB,SAACC,GAC/B,MAAO,UAAIxD,GAAYQ,GAAWtN,GAAUkQ,IAAUhQ,MAAK,qBAAGrD,QAAsByT,MCjUhFC,G,4MACJxd,MAAQ8Z,G,EAER3J,kBAAoB,WAAO,IAAD,EACF,EAAKhQ,MAAnB+H,EADgB,EAChBA,KAAMI,EADU,EACVA,IACTJ,GACH4C,GAAQ4F,QAAQ,CAAEpI,S,EAItBmV,WAAa,WAAO,IACVjK,EAAa,EAAKrT,MAAlBqT,SAER,OACE,kBAAC,KAAD,CAAMzH,UAAU,gBACd,yBAAKA,UAAU,qBACb,0BAAMA,UAAU,uBAChB,yBAAKA,UAAU,4BAAf,SAGA,yBAAKA,UAAU,sBAAf,OAGA,yBAAKA,UAAU,sBAAf,SAID2R,GAAc5c,KAAI,gBAAGW,EAAH,EAAGA,MAAOyM,EAAV,EAAUA,KAAMpE,EAAhB,EAAgBA,MAAhB,OACjB,yBACE7I,IAAKQ,EACLsK,UAAU,qBAEV,kBAAC,IAAD,CAASC,MAAOkC,GACd,0BAAMnC,UAAU,sBAAsBtK,IAExC,kBAAC,KAAKT,KAAN,CAAW2F,KAAM,CAAC,UAAWmD,EAAO,UAClC,kBAAC,IAAD,CACEiC,UAAU,2BACVsC,UAAQ,EACRxM,IAAK,EACLC,IAAK,EACLX,UAAWqS,KAGf,kBAAC,KAAKxS,KAAN,CAAW2F,KAAM,CAAC,UAAWmD,EAAO,WAClC,kBAAC,KAAD,CACEiC,UAAU,qBACVlK,IAAK,EACLC,IAAK,EACLX,UAAWqS,KAGf,kBAAC,KAAKxS,KAAN,CAAW2F,KAAM,CAAC,UAAWmD,EAAO,SAClC,kBAAC,KAAD,CACEiC,UAAU,qBACVlK,IAAK,EACLC,IAAK,EACLX,UAAWqS,W,EAUzBmK,UAAY,WAAO,IACTnK,EAAa,EAAKrT,MAAlBqT,SAER,OACE,kBAAC,KAAD,CAAMzH,UAAU,eACd,yBAAKA,UAAU,oBACb,0BAAMA,UAAU,sBAChB,yBAAKA,UAAU,2BAAf,SAGA,yBAAKA,UAAU,qBAAf,OAGA,yBAAKA,UAAU,qBAAf,SAID6R,GAAa9c,KAAI,gBAAGW,EAAH,EAAGA,MAAOyM,EAAV,EAAUA,KAAMsO,EAAhB,EAAgBA,QAAS1S,EAAzB,EAAyBA,MAAzB,OAChB,yBACE7I,IAAK6I,EACLiC,UAAU,oBAEV,kBAAC,IAAD,CAASC,MAAOkC,GACd,0BAAMnC,UAAU,qBAAqBtK,IAEvC,kBAAC,KAAKT,KAAN,CAAW2F,KAAM,CAAC,SAAUmD,EAAO,UACjC,kBAAC,IAAD,CACEiC,UAAU,oBACVsC,UAAQ,EACRlN,UAAWqS,KAGf,kBAAC,KAAKxS,KAAN,CAAW2F,KAAM,CAAC,SAAUmD,EAAO,WACjC,kBAAC,KAAD,CACEiC,UAAU,oBACV5K,UAAWqS,EACX3R,IAAK,EACLC,IAAK,MAGT,kBAAC,IAAD,CAASkK,MAAOwQ,GACd,kBAAC,KAAKxb,KAAN,CAAW2F,KAAM,CAAC,SAAUmD,EAAO,SACjC,kBAAC,IAAD,CACEiC,UAAU,oBACVsC,UAAQ,EACRlN,UAAWqS,Y,EAU3BhH,SAAW,WAAO,IACRgH,EAAa,EAAKrT,MAAlBqT,SAER,OACE,kBAAC,KAAD,CAAMzH,UAAU,cACb8R,GAAY/c,KAAI,gBAAGW,EAAH,EAAGA,MAAOyM,EAAV,EAAUA,KAAMpE,EAAhB,EAAgBA,MAAO2S,EAAvB,EAAuBA,QAAvB,OACf,yBACExb,IAAK6I,EACLiC,UAAU,mBAEV,kBAAC,IAAD,CAASC,MAAOkC,GACd,0BAAMnC,UAAU,oBAAoBtK,IAEtC,kBAAC,KAAKT,KAAN,CAAW2F,KAAM,CAAC,QAASmD,IACd,WAAVA,EAEG,kBAAC,IAAMoI,SAAP,CACEnG,UAAU,mBACV5K,UAAWqS,IAGXiJ,EAEE,kBAAC,IAAD,CACE1Q,UAAU,mBACVsC,UAAQ,EACRlN,UAAWqS,IAGb,kBAAC,KAAD,CACEzH,UAAU,mBACVlK,IAAK,EACLC,IAAKuF,OAAOyW,iBACZ3c,UAAWqS,W,EAUjCuK,aAAe,WAAO,IACZvK,EAAa,EAAKrT,MAAlBqT,SAER,OACE,kBAAC,KAAD,CAAMzH,UAAU,mBACd,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,sBACb,0BAAMA,UAAU,4BAAhB,4FACA,yBAAKA,UAAU,2BACb,kBAAC,KAAK/K,KAAN,CAAW2F,KAAM,CAAC,QAAS,iBACzB,kBAAC,KAAD,CACE7E,IAAK,EAAK9B,MAAMiN,MAAM2O,sBAAmBhS,EACzC/H,KAAME,KAAKC,MAAM,EAAKhC,MAAMiN,MAAM2O,gBAAkB,GACpDza,UAAWqS,KALjB,IASE,kBAAC,KAAKxS,KAAN,CAAW2F,KAAM,CAAC,QAAS,oBACzB,kBAAC,IAAD,CACE0H,UAAQ,EACRlN,UAAWqS,OAKnB,yBAAKzH,UAAU,8BACb,yBAAKA,UAAU,sBACb,kBAAC,IAAD,CAASC,MAAM,gFACb,yBAAKD,UAAU,4BAAf,iBAIF,yBAAKA,UAAU,6BAAf,OAGA,yBAAKA,UAAU,2BAAf,SAIF,yBAAKA,UAAU,sBACb,kBAAC,KAAK/K,KAAN,CAAW2F,KAAM,CAAC,QAAS,aAAc,UACvC,kBAAC,IAAD,CACEoF,UAAU,2BACVsC,UAAQ,EACRlN,UAAWqS,KAGf,kBAAC,KAAKxS,KAAN,CAAW2F,KAAM,CAAC,QAAS,aAAc,WACvC,kBAAC,KAAD,CACEoF,UAAU,4BACVlK,IAAK,EACLC,IAAK,GACLX,UAAWqS,KAGf,kBAAC,KAAKxS,KAAN,CAAW2F,KAAM,CAAC,QAAS,aAAc,SACvC,kBAAC,IAAD,CACEoF,UAAU,0BACVsC,UAAQ,EACRlN,UAAWqS,QAMrB,yBAAKzH,UAAU,wBACZiS,GAAeC,MAAM,GAAGnd,KAAI,gBAAGW,EAAH,EAAGA,MAAOyM,EAAV,EAAUA,KAAMpE,EAAhB,EAAgBA,MAAhB,OAC3B,yBACE7I,IAAK6I,EACLiC,UAAU,wBAEV,kBAAC,IAAD,CAASC,MAAOkC,GACd,0BAAMnC,UAAU,8BAA8BtK,IAEhD,kBAAC,KAAKT,KAAN,CAAW2F,KAAM,CAAC,QAASmD,IACzB,kBAAC,IAAD,CACEiC,UAAU,6BACVsC,UAAQ,EACRlN,UAAWqS,Y,EAU3BjB,SAAwC,SAACxR,EAAOmd,GAC1Cnd,EAAMwb,IACR,EAAK5Q,SAAS,CAAE4Q,IAAKxb,EAAMwb,MAE3B,EAAK5Q,SAAS,EAAKwS,YAAYpd,EAAOmd,K,EAK1CC,YAAc,SAACpd,EAAcmd,GAAiB,IACpCnE,EAAgCmE,EAAhCnE,QAASQ,EAAuB2D,EAAvB3D,OAAQtN,EAAeiR,EAAfjR,MAAOsP,EAAQ2B,EAAR3B,IAEhC,IAAKxb,EAAMwb,IAAK,CACd,IAAM6B,EAA0C,GAChDV,GAAcjU,SAAQ,YAAuB,IAApBK,EAAmB,EAAnBA,MAAOrI,EAAY,EAAZA,MAExBV,EAAyBgZ,EAAQjQ,GACjCgE,EAAQ/L,KAAKD,IAAI,EAAGC,KAAKF,IAAI,EAAGd,EAAM8M,KAAO9M,EAAM6M,SAEzDmM,EAAQjQ,GAAR,2BACK/I,GADL,IAEE+M,UAEFsQ,EAAa3c,EAAMkJ,eAAiBmD,KAGtCb,EAAMqP,iBAAmB,EACzBsB,GAAanU,SAAQ,YAAyB,IAAtBK,EAAqB,EAArBA,MAAO2S,EAAc,EAAdA,QAEvB1b,EAAyBwZ,EAAOzQ,GAChC8D,EAAS7L,KAAKD,IAAI,EAAGf,EAAM6M,QAC3BC,EAAO9L,KAAKD,IAAI,EAAG2a,EAAUA,EAAQ2B,EAAcnR,GAAS,GAC5Da,EAAQ/L,KAAKD,IAAI,EAAGC,KAAKF,IAAI,GAAIgM,EAAOD,IAE9C2M,EAAOzQ,GAAS,CACd8D,SACAC,OACAC,SAEFb,EAAMqP,kBAAqBvb,EAAM6M,OAAS,KAG5C,sBAAIiQ,IAAJ,YAAoBG,KAAgBvU,SAAQ,YAAyB,IAAtBK,EAAqB,EAArBA,MAAO2S,EAAc,EAAdA,QACpD,GAAIA,EACF,GAAc,eAAV3S,EAAwB,CAC1B,IAAM+D,EAAO4O,EAAQ2B,EAAcnR,GAC7BW,EAASX,EAAMnD,GAAO8D,OAC5BX,EAAMnD,GAAS,CACb8D,SACAC,OACAC,MAAOF,EAASC,QAGlBZ,EAAMnD,GAAS/H,KAAKC,MAAMya,EAAQ2B,EAAcnR,OAMxD,MAAO,CACL8M,UACAQ,SACAtN,QACAsP,Q,EAIJ8B,WAAa,SAACC,EAAwBC,GACpC,IAAMpQ,EAASqQ,gBAAKD,EAAWD,GACzBlQ,EAAQoQ,gBAAKF,EAAYC,GAEzB7Q,EAA+B,GA8BrC,OA5BAhE,OAAO+U,QAAQtQ,GAAQ1E,SAAQ,YAA0E,IAAD,mBAAvE9C,EAAuE,KAAjE+X,EAAiE,KACzF,QAAT/X,GAA4C,kBAAnB+X,EAY7BhV,OAAO+U,QAAQC,GAAgBjV,SAAQ,YAAgD,IAAD,mBAA7CK,EAA6C,KAAtC/I,EAAsC,KAE9E4d,EAAavQ,EAAMzH,GAAMmD,GACzB8U,EAA6BtB,GAAiBxT,GAChD8U,GACFlR,EAAQ6L,KAAK,CACX9X,MAAOmd,EAAOnd,MACdyM,KAAM0Q,EAAO1Q,KACbC,OAAQpN,EACRqN,MAAOuQ,OAnBXjR,EAAQ6L,KAAK,CACX9X,MAAO,MACPyM,KAAM,yDACNC,OAAQuQ,EAERtQ,MAAOA,EAAMzH,QAoBZ+G,G,EAGTmR,OAAS,WAAO,IAAD,EACS,EAAK1e,MAAnBmI,EADK,EACLA,IAAKJ,EADA,EACAA,KACP4W,EAAY,EAAK9e,MAEvB,GAAKkI,EAKL,GAAI4W,EAAU7R,MAAMoP,YAAc,EAChChW,IAAOC,MAAM,+OADf,CAKA,IAAMoH,EAAU,EAAK2Q,WAAWnW,EAAK4W,WAAahF,GAAkBgF,GAC7C,IAAnBpR,EAAQhK,QAKZ2C,IAAOqT,QAAQ,qGACf5O,GAAQuI,QAAQ,CACd/K,MACAJ,KAAK,2BACAA,GADD,IAEF4W,gBAGJhU,GAAQqG,YAAY,CAClB7I,MACAvC,QAAQ,+LACRwH,KAAM,CAAEE,iBAAkBC,MAf1BrH,IAAOC,MAAM,qLAXbD,IAAOC,MAAM,4I,EA+BjB0G,OAAS,WAAO,IAAD,EACc,EAAK7M,MAAxB+H,EADK,EACLA,KAAMsL,EADD,EACCA,SAEd,OAAKtL,EASH,kBAAC,KAAD,CACE6W,cAAe7W,EAAK4W,WAAahF,GACjCkF,eAAgB,EAAKzM,UAErB,kBAAC,KAAD,CACExG,UAAU,OACVC,MAAK,gGAAqB9D,EAAKgB,UAAYhB,EAAKI,KAChD2W,MACE,kBAAC,KAAD,CACEjT,MAAM,iHACNyC,OAAO,eACPC,WAAW,uCACXH,UAAW,EAAKsQ,QAEhB,kBAAC,KAAD,+CAIJ,yBAAK9S,UAAU,YACb,kBAAC,KAAK/K,KAAN,CAAW2F,KAAM,CAAC,QAChB,kBAAC,IAAMuL,SAAP,CACE/Q,UAAWqS,EACX0L,UAAW,MAIjB,6BACG,EAAKnB,gBAER,6BACE,6BACG,EAAKN,aACL,EAAKjR,YAER,6BACG,EAAKmR,gBA1CZ,kBAAC,IAAD,CAAM1L,UAAQ,GACZ,kBAAC,KAAD,CAAOlL,YAAY,6I,YA/YLwF,aAmdTxM,gBAlBS,SAACC,EAAeG,GAA4B,IAC1DuI,EAAgC1I,EAAhC0I,QAASC,EAAuB3I,EAAvB2I,MAAOC,EAAgB5I,EAAhB4I,YAElBN,EAAM,IAAI6L,gBAAgBhU,EAAMkC,MAAMyM,QAAQE,IAAI,QAAUhP,EAAMsI,KAAO,IACzEJ,EAAOS,EAAML,GAKnB,OAJIJ,IAASA,EAAKI,KAAOA,IACvBJ,EAAKI,IAAMA,GAGN,CACLI,UACAR,OACAI,MACAkL,WAAatL,KAAUU,IAAiBA,EAAYN,MAAQJ,EAAKI,OAASM,EAAYQ,SACtFR,iBAIW7I,CAAyByd,ICjczB2B,GAjDU,CACvB,CACEje,KAAM,sBACNke,UAAWnP,IAEb,CACE/O,KAAM,+BACNke,UAAWnM,GACXoM,OAAO,GAET,CACEne,KAAM,gCACNke,UAAWrG,GACXsG,OAAO,GAET,CACEne,KAAM,2BACNke,UAAWrG,GACXsG,OAAO,GAET,CACEne,KAAM,gCACNke,UAAW5B,GACX6B,OAAO,GAET,CACEne,KAAM,2BACNke,UAAW5B,GACX6B,OAAO,GAET,CACEne,KAAM,0BACNke,UAAWnM,GACXoM,OAAO,GAET,CACEne,KAAM,uBACNke,UAAW5H,IAEb,CACEtW,KAAM,sBACNke,UCtDW,kBACb,kBAAC,KAAD,CAAMrT,UAAU,QAAhB,odAEE,6BAAK,6BACL,kGACA,4aACwF,6BADxF,kHAEuB,6BAFvB,oFAGkB,6BAHlB,yLAIsD,6BAJtD,8EAKiB,6BALjB,wcAO8C,6BAP9C,yJAQqC,6BARrC,gQASiE,6BATjE,0EAU4B,6BAV5B,+RAWwD,6BAXxD,uUAYkE,6BAZlE,iVAakE,6BAblE,kbAcmF,6BAdnF,6OAemD,6BAfnD,uQAgBoD,6BAhBpD,qSAiByD,6BAjBzD,6QAkBqD,6BAlBrD,8RAmBuD,6BAnBvD,4IAoB6B,6BApB7B,2ZAqBgF,6BArBhF,sLAsBoC,6BAtBpC,sSAuB0D,6BAvB1D,iOAwB4C,6BAxB5C,gPAyBiD,6BAzBjD,+MA0ByC,6BA1BzC,+aA2BqF,6BA3BrF,gIA4B2B,6BA5B3B,qUA6BgE,6BA7BhE,gPA8BiD,6BA9BjD,qPA+BiD,6BA/BjD,yVAgCqE,6BAhCrE,6LAiCsC,6BAjCtC,seAkC+F,6BAlC/F,2DAmCa,6BAnCb,kQAoCoD,6BApCpD,2RAqCyD,6BArCzD,sTAsCgE,6BAtChE,6UAuCmE,6BAvCnE,sLAwCoC,6BAxCpC,uQAyCoD,6BAzCpD,oFA0CkB,6BA1ClB,sTA2C2D,6BA3C3D,iYA4C0E,6BA5C1E,mUA6C8D,6BA7C9D,yXA8CiF,6BA9CjF,KA+CI,8BAGJ,gKACA,2OACuD,6BADvD,4PAEmD,6BAFnD,iTAG2D,6BAH3D,wTAIuE,6BAJvE,2KAK6C,6BAL7C,uNAM4C,6BAN5C,mMAOuC,6BAPvC,6OAQ8C,6BAR9C,+MASyC,6BATzC,iWAUmE,6BAVnE,2IAWsC,6BAXtC,KAYI,8BAGJ,oCACA,gDACkB,6BADlB,kBAEiB,6BAFjB,gBAGe,6BAHf,iBAIgB,6BAJhB,YAKW,6BALX,KAMI,iCDtBN,CACE7K,KAAM,wBACNke,UAAWhL,K,UEIArU,gBANS,SAACC,GAGvB,MAAO,CAAE0I,QAFkB1I,EAAnB0I,QAEUpC,MAFStG,EAAVsG,SAKJvG,EA/CD,SAACI,GAAwB,IAC7BmG,EAAmBnG,EAAnBmG,MAAOoC,EAAYvI,EAAZuI,QAEf,OACE,kBAAC,KAAD,CAAMA,QAASA,GACb,kBAAC,KAAD,CACE4W,SAAU,SAAC3V,GAAD,OAAYmB,GAAQyU,MAAM5V,KAEpC,kBAAC,KAAK3I,KAAN,CACES,MAAM,QACNkF,KAAK,QACL6Y,MAAO,CAAC,CAAEC,UAAU,EAAM1Z,QAAS,wDAEnC,kBAAC,IAAD,OAEF,kBAAC,KAAK/E,KAAN,CACES,MAAM,WACNkF,KAAK,WACL6Y,MAAO,CAAC,CAAEC,UAAU,EAAM1Z,QAAS,sFAEnC,kBAAC,IAAM2Z,SAAP,OAEF,kBAAC,KAAK1e,KAAN,KACE,kBAAC,KAAD,CACE0F,KAAK,UACLiZ,SAAS,UAFX,oCAQHrZ,GACC,kBAAC,KAAD,CACEI,KAAK,QACLX,QAASO,EAAMP,cCPVhG,oBAAQ,SAACC,GAAD,MAAoB,CAAEC,WAAYD,EAAMC,cAAhDF,EA7Bf,SAAgBI,GACd,OAAKA,EAAMF,WAYT,kBAAC,IAAD,KAEIkf,GAAOre,KAAI,SAACC,GAAD,OACT,kBAAC,IAAD,CACEE,IAAKF,EAAMG,KACXA,KAAMH,EAAMG,KACZke,UAAWre,EAAMqe,UACjBC,MAAOte,EAAMse,QAAS,OAI5B,kBAAC,IAAD,CAAU7d,GAAG,yBArBb,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEN,KAAK,IACLke,UAAWQ,SCDjBC,I,sBAAW,GAmBFC,GAAoB,YArCT,WACtB,IAAMC,EAAW,WACVhc,EAASrB,SAASuB,aAAaC,QAAQ,iBAAmB,KAAO,MACpE4G,GAAQE,iBAAiB,KAG7B,CACE,YACA,YACA,UACA,SACA,cACAvB,SAAQ,SAACuW,GACTC,SAASC,iBAAiBF,EAAWD,GAAU,MAEjDA,IAuBAI,ICxBIC,GAAa,yBAAKrU,UAAU,cAAf,cAAwCzL,OAAO8f,UAAUxV,QAAQ,IAAK,MAEnFyV,G,4MACJlQ,kBAAoB2P,G,EAEpBtP,mBAAqB,WAAO,IAAD,EACI,EAAKrQ,MAA1BkG,EADiB,EACjBA,OAAQwD,EADS,EACTA,SAEZxD,IACFN,IAAQua,KAAKja,GACbyE,GAAQyV,cAAc,KAEpB1W,GACFiB,GAAQ0V,gBAAgB,K,EAI5BC,YAAc,WAAO,IACX5W,EAAa,EAAK1J,MAAlB0J,SACR,OAAOA,GAAY,kBAAC,IAAD,CAAUrI,GAAIqI,K,EAGnCmD,OAAS,WACP,OACE,oCACGoT,GACD,kBAAC,IAAD,KACG,EAAKK,cACN,kBAAC,EAAD,MACA,yBAAK1U,UAAU,OACb,kBAAC,GAAD,U,YA5BMQ,aAqCHxM,gBADS,SAACC,GAAD,MAAoB,CAAE6J,SAAU7J,EAAM6J,SAAUxD,OAAQrG,EAAMqG,UACvEtG,CAAyBsgB,I,2ECjDlCK,GAAWC,KAAUC,cAAcC,IACnCC,GAAOJ,GAASI,OAChBC,GAAWL,GAASK,WAE1BD,GAAKE,oBAAmB,SAAC9Y,GACnBA,GACF4C,GAAQmW,aAAa,CAAE/Y,SACvB4C,GAAQ4F,QAAQ,CAAEpI,IAAKJ,EAAKI,IAAKM,aAAa,KAE9CkC,GAAQG,OAAO,O,iBCVTsU,I,aAqBAtU,I,aAOeiW,IA5BzB,SAAU3B,GAAMhW,GAAhB,8EAIiB,OAHP4X,EAAoB5X,EAApB4X,MAAOC,EAAa7X,EAAb6X,SADjB,kBAIuBN,GAAKO,2BAA2BF,EAAOC,GAJ9D,OAIUlZ,EAJV,OAKI4C,GAAQmW,aAAa,CAAE/Y,SACvBjE,aAAaoE,QAAQ,OAAQF,KAAKmZ,UAAUpZ,EAAKA,OACjDjE,aAAaoE,QAAQ,MAAOH,EAAKA,KAAKI,KAP1C,qDASI2N,QAAQ3P,MAAR,MACmB,wBAAf,KAAMib,KAVd,iBAWmB,OAXnB,UAWyBT,GAAKU,+BAA+BL,EAAOC,GAXpE,QAWYlZ,EAXZ,OAYM4C,GAAQmW,aAAa,CAAE/Y,SACvBjE,aAAaoE,QAAQ,OAAQF,KAAKmZ,UAAUpZ,EAAKA,OACjDjE,aAAaoE,QAAQ,MAAOH,EAAKI,KAdvC,wBAgBMwC,GAAQ2W,UAAU,CAAEnb,MAAK,OAhB/B,uDAqBA,SAAU2E,KAAV,kEAIE,OAHAhH,aAAa4I,WAAW,QACxB5I,aAAa4I,WAAW,OACxB5I,aAAa4I,WAAW,YAH1B,SAIQiU,GAAKY,UAJb,wCAOe,SAAUR,KAAV,kEACb,OADa,SACPpU,aAAI,CACR6U,aAAW,QAASpC,IACpBoC,aAAW,SAAU1W,MAHV,wC,iBC7BLoI,I,aAgCArI,I,aAkBA4N,I,aASesI,IA3DzB,SAAU7N,GAAQ7I,GAAlB,0EAGE,OAFQlC,EAAckC,EAAdlC,IAAKJ,EAASsC,EAATtC,KADf,SAGQ6Y,GACHa,IAAI,SACJC,MAAMvZ,GACNwZ,IAHG,2BAIC5Z,GAJD,IAKFe,YAAY,IAAI9E,MAAOC,UACvBkE,SATN,OAYEwC,GAAQiX,eAAe,IACvBjX,GAAQ4F,QAAQ,CAAEpI,QAbpB,wCAgBA,IAAM0Z,GAA0C,GAEhD,SAAStR,GAAQlG,GAAoB,IAC3BlC,EAAqBkC,EAArBlC,IAAKM,EAAgB4B,EAAhB5B,YAEToZ,GAAe1Z,KAASM,IAC5BoZ,GAAe1Z,IAAO,EACtByY,GACGa,IAAI,SACJC,MAAMvZ,GACN2Z,GAAG,SAAS,SAACC,GACZ,IAAMha,EAAOga,EAAQC,OAAS,GAC9BrX,GAAQsX,eAAe,CAAEla,OAAMI,MAAKM,oBAI1C,SAAUoC,KAAV,8EACQ1C,EAAMrE,aAAaC,QAAQ,SACb,cAARoE,EAFd,iDAME,OAHMtE,GAAO,IAAIG,MAAOC,UAExBH,aAAaoE,QAAQ,eAArB,UAAwCrE,IAL1C,SAMQ+c,GACHa,IAAI,SACJC,MAFG,UAEMvZ,IACTuZ,MAAM,cACNC,IAAI9d,GAVT,OAYE,OAZF,SAYQ+c,GACHa,IAAI,iBACJC,MAFG,UAEMvZ,IACTwZ,IAAI9d,GAfT,wCAkBA,SAAU4U,KAAV,0EACsB,OADtB,SAC4BmI,GACvBa,IAAI,iBACJS,KAAK,SAHV,OACQC,EADR,OAKQxZ,EAAiBwZ,EAAYH,OAAS,GAC5CrX,GAAQyX,wBAAwB,CAAEzZ,kBANpC,wCASe,SAAUoY,KAAV,kEACb,OADa,SACPpU,aAAI,CACR6U,aAAW,WAAYjR,IACvBiR,aAAW,WAAYtO,IACvBsO,aAAW,qBAAsB3W,IACjC2W,aAAW,qBAAsB/I,MALtB,wC,iBCxDLzH,I,aA6CAf,I,aAWAgB,I,aAuCOoR,I,aAmBQtB,IAlHzB,SAAU/P,GAAY3G,GAAtB,kFAYI,OAXMlC,EAA4BkC,EAA5BlC,IAAKvC,EAAuByE,EAAvBzE,QADf,EACsCyE,EAAd+C,YADxB,MAC+B,GAD/B,EAEQvJ,GAAO,IAAIG,MAAOC,UAElBqe,EAAa3c,EAAc,CAC/B9B,OACA4B,OAAQ0C,EACRtC,KAAK,GAAD,OAAKD,EAAL,KACJwH,SARJ,kBAYUwT,GACHa,IAAI,YACJC,MAFG,UAEM7d,IACT8d,IAAIW,GAfX,OAgBIxe,aAAaoE,QAAQ,UAAW,IAChCyC,GAAQ4X,mBAAmB,CAAE3c,QAAS0c,IAjB1C,kDAmBI3X,GAAQ6X,gBAAgB,IACxB1M,QAAQ3P,MAAR,MACAwE,GAAQzE,OAAO,CAAEN,QAAS,kSArB9B,uDAyBA,SAASsK,KACP0Q,GACGa,IAAI,YACJgB,aACAC,YAAY,GACZZ,GAAG,SAAS,SAACa,GACZ,IAAM5d,EAAWwE,OAAOC,OAAOmZ,EAAYX,OAAS,IACpDrX,GAAQiY,mBAAmB,CACzB7d,WACAsE,QAAQ,ILpBU,WACxB,IAAIqW,GAAJ,CACAA,IAAW,EAEX,IAAMmD,EAAWC,aAAY,WAC3B,IAAMjX,EAAQiU,SAASiD,KAAKC,cAAc,SACtCnX,IACFA,EAAMoX,UAAgC,QAApBpX,EAAMoX,UAAsB,UAAY,MAErDvD,IAAaI,SAASoD,SACzBrX,EAAMoX,UAAY,MAClBE,cAAcN,GACdnD,IAAW,MAGd,MKQC0D,MAIN,SAAShT,KACPwQ,GAASa,IAAI,YAAY4B,MAG3B,SAAUpT,KAAV,0EACsB,OADtB,SAC4B2Q,GACvBa,IAAI,YACJgB,aACAC,YAAY,KACZR,KAAK,SALV,OACQS,EADR,OAOQ5d,EAAWwE,OAAOC,OAAOmZ,EAAYX,OAAS,IACpDrX,GAAQiY,mBAAmB,CAAE7d,aAR/B,wCAWA,SAAUkM,GAAgB5G,GAA1B,4EAGsB,OAFZ6G,EAAiB7G,EAAjB6G,aADV,SAG4B0P,GACvBa,IAAI,YACJgB,aACAa,MAHuB,UAGdpS,EAAarN,OACtB6e,YAAY,IACZR,KAAK,SARV,OAGQS,EAHR,OAUQ5d,EAAWwE,OAAOC,OAAOmZ,EAAYX,OAAS,IACpDrX,GAAQiY,mBAAmB,CAAE7d,WAAUsE,QAAQ,IAXjD,wCAcA,SAASgI,GAAWhH,GAAoB,IAC9BiH,EAAcjH,EAAdiH,KAAMnJ,EAAQkC,EAARlC,IAERob,EAAU,IAAIC,eACdC,EAAW,IAAIC,SAErBD,EAASE,OAAO,QAASrS,GAEzBiS,EAAQK,KAAK,OAAQ,kCACrBL,EAAQM,iBAAiB,gBAAzB,6BACAN,EAAQO,mBAAqB,WAC3B,GAAuB,MAAnBP,EAAQQ,QAAyC,IAAvBR,EAAQS,WAAkB,CACtD,IAAIC,EAAMjc,KAAKC,MAAMsb,EAAQW,cAE7BvZ,GAAQqG,YAAY,CAClB7I,MACAvC,QAASqe,EAAI7W,KAAKnM,OAEpB0J,GAAQzE,OAAO,CAAEN,QAAS,4HAI9B2d,EAAQY,KAAKV,GAGR,SAAUpB,GAAchY,GAAxB,0EAUL,OATQzE,EAAYyE,EAAZzE,QAEF0c,EAAa3c,EAAc,CAC/B9B,KAAM+B,EAAQ/B,KACd4B,OAAQG,EAAQH,OAChBI,KAAMD,EAAQC,KACduH,KAAMxH,EAAQwH,OAPX,SAUCwT,GACHa,IAAI,YACJC,MAFG,UAEM9b,EAAQ/B,OACjB8d,IAAIW,GAbF,cAeL3X,GAAQyZ,qBAAqB,CAAExe,QAAS0c,IAfnC,kBAgBEA,GAhBF,wCAmBQ,SAAUvB,KAAV,kEACb,OADa,SACPpU,aAAI,CACR6U,aAAW,eAAgBxQ,IAC3BwQ,aAAW,eAAgBvR,IAC3BuR,aAAW,oBAAqBvQ,IAChCuQ,aAAW,YAAatR,IACxBsR,aAAW,cAAepR,IAC1BoR,aAAW,cAAenQ,IAC1BmQ,aAAW,iBAAkBa,MARlB,wC,2BCjHLna,I,aAsBAuP,I,aAWAvK,I,aAaAoL,I,aAeAF,I,aAwEe2I,IArIzB,SAAU7Y,GAAQmC,GAAlB,gFAaE,OAZQpF,EAASoF,EAATpF,KACFpB,GAAO,IAAIG,MAAOC,UAClBqC,EAAKrB,EAAKqB,IpC0HhB,IAAM1E,KAAKE,SAAS4B,SAAS,IAAIC,OAAO,EAAG,GoCzHrC8B,EAAS3B,aAAaC,QAAQ,OAE9BsgB,EANR,2BAOOpf,GAPP,IAQIqB,KACAzC,OACA4B,WAVJ,SAaQmb,GACHa,IAAI,SACJC,MAFG,UAEMpb,IACTqb,IAAI0C,GAhBT,OAkBE1Z,GAAQ2Z,eAAe,CAAED,aACzB1Z,GAAQuC,YAAY,CAAE5G,OAnBxB,wCAsBA,SAAUmR,KAAV,0EACmB,OADnB,SACyBmJ,GACpBa,IAAI,SACJgB,aACA8B,aAAa,IACbrC,KAAK,SALV,OACQsC,EADR,OAOQ9b,EAAQa,OAAOC,OAAOgb,EAASxC,OAAS,IAC9CrX,GAAQ8Z,gBAAgB,CAAE/b,UAR5B,wCAWA,SAAUwE,GAAY7C,GAAtB,4EAGkB,OAFR/D,EAAO+D,EAAP/D,GADV,SAGwBsa,GACnBa,IAAI,SACJC,MAAMpb,GACN4b,KAAK,SANV,cAGQwC,EAHR,OAQQzf,EAAOyf,EAAQ1C,OAAS3b,EAAcC,GAC5CqE,GAAQ8Z,gBAAgB,CAAE/b,MAAO,CAACzD,KATpC,mBAUS,GAVT,wCAaA,SAAUqT,GAAajO,GAAvB,kFAGmB,OAHnB,EACmCA,EAAzB/H,cADV,MACmB,EADnB,EACsBiW,EAAalO,EAAbkO,SADtB,SAGyBqI,GACpBa,IAAI,SACJgB,aACAkC,QAHoB,UAGTpM,EAASjS,KACpBie,aAAajiB,EAAS,GACtB4f,KAAK,SARV,OAGQsC,EAHR,OAUQvhB,EAAIuhB,EAASxC,MACbtZ,EAAQa,OAAOC,OAAOvG,GAAK,IAAIE,OAAO,GAC5CwH,GAAQ8Z,gBAAgB,CAAE/b,UAZ5B,wCAeA,SAAU0P,GAAW/N,GAArB,cAgBiBua,EAhBjB,MAyCiBC,EAzCjB,oEAIE,OAJF,8CAyCE,WAA0Brf,GAA1B,oBAAAvC,EAAA,yDACQ8E,EAAcS,EAAMhD,GAD5B,oDAGQsf,EAAaC,IAEnBC,YAAW,kBAAMra,GAAQC,mBAAmB,CAC1CjB,MAAO,eACP/I,MAAO4E,EAAQ,MACbsf,IACA/c,EAAKmB,UATX,sBAUUjE,EAAOsE,OAAOC,OAAOzB,EAAKmB,WAAW8D,MAAK,SAAC/H,GAAD,OAA0BA,EAAKqB,KAAOA,MAV1F,kCAYYsa,GAASa,IAAT,gBAAsB1Z,EAAKI,IAA3B,sBAA4C7B,EAA5C,YAAkDrB,EAAKpB,OAAQ8d,IAAI,IAZ/E,QAaMqD,YAAW,kBAAMra,GAAQC,mBAAmB,CAC1CjB,MAAO,eACP/I,QAASqkB,MACPH,GAhBV,yBAmBQD,EAAWrf,EAAQ,GAnB3B,6CAzCF,uBAyCiBqf,EAzCjB,0FAgBE,WAA6Brf,GAA7B,kBAAAvC,EAAA,yDACQ2C,EAAoBb,EAASS,GADrC,oDAGQsf,EAAaC,IAEnBC,YAAW,kBAAMra,GAAQC,mBAAmB,CAC1CjB,MAAO,kBACP/I,MAAO4E,EAAQ,MACbsf,IACAlf,EAAQwH,OAAQxH,EAAQwH,KAAK5F,QAAU5B,EAAQwH,KAAK5F,SAAWlB,EATrE,gCAUUsa,GAASa,IAAT,mBAAyB7b,EAAQ/B,KAAjC,UAA8C8d,IAAI,IAV5D,OAWIqD,YAAW,kBAAMra,GAAQC,mBAAmB,CAC1CjB,MAAO,kBACP/I,QAASskB,MACPJ,GAdR,wBAgBQF,EAAcpf,EAAQ,GAhB9B,6CAhBF,uBAgBiBof,EAhBjB,4CACUte,EAAO+D,EAAP/D,GADV,SAIQsa,GAASa,IAAT,gBAAsBnb,IAAMqb,IAAI,IAJxC,OAa8C,OAR5ChX,GAAQC,mBAAmB,CAAEjB,MAAO,UAAW/I,OAAO,IAClDukB,EAAc,EACZJ,EAAU,WAEd,OADAI,GAAe1jB,EAAa,GAAI,MARpC,KAa+B8H,OAb/B,UAaoDqX,GAASa,IAAT,YAAyBS,KAAK,SAblF,uBAa4FF,MAb5F,2BAaqG,GAbrG,QAmCE,OAnCF,UAaQjd,EAbR,KAasCyE,OAbtC,gBAcM0b,EAAkB,EAdxB,UAmCQN,EAAc,GAnCtB,QAsCwC,OAtCxC,KAsCyBrb,OAtCzB,UAsC8CqX,GAASa,IAAT,SAAsBS,KAAK,SAtCzE,uBAsCmFF,MAtCnF,2BAsC4F,GAtC5F,QA+DE,OA/DF,UAsCQxZ,EAtCR,KAsCgCgB,OAtChC,gBAuCMyb,EAAe,EAvCrB,UA+DQJ,EAAW,GA/DnB,QAiEEG,YACE,kBAAMra,GAAQC,mBAAmB,CAAEjB,MAAO,OAAQ/I,OAAO,MACzDmkB,KAEFpa,GAAQya,kBAAkB,CAAE9e,OArE9B,yCAwEe,SAAUya,KAAV,kEACb,OADa,SACPpU,aAAI,CACR6U,aAAW,cAAepJ,IAC1BoJ,aAAW,WAAYtZ,IACvBsZ,aAAW,YAAa/J,IACxB+J,aAAW,iBAAkBlJ,IAC7B+M,aAAU,iBAAkBnY,MANjB,wC,iBCrIL2L,I,aA4DAnM,I,aA+BA4Y,I,aAkBAxN,I,aA+BAzJ,I,aA6Be0S,IAzKzB,SAAUlI,GAASxO,GAAnB,yFACU/D,EAAwC+D,EAAxC/D,GAAI6B,EAAoCkC,EAApClC,IAAKqR,EAA+BnP,EAA/BmP,YAAaC,EAAkBpP,EAAlBoP,IAAKxU,EAAaoF,EAAbpF,KAAM5D,EAAOgJ,EAAPhJ,KAErCiF,GAAM6B,GAAOlD,GAHnB,oBAIUuB,EAAOY,EAAYnC,IACrBuU,EALR,uBAMM7O,GAAQqG,YAAY,CAClB7I,MACAvC,QAAQ,iEAAD,OAAiBY,GACxB4G,KAAM,CAAE5F,OAAQlB,EAAIhE,OAAQ2C,EAAK3C,UAEnCqI,GAAQ4a,gBAAgB,IACxB5a,GAAQzE,OAAO,CAAEN,QAAQ,iEAAD,OAAiBY,KACzCmE,GAAQjB,SAAS,CAAErI,GAAI,wBAb7B,mBAca,GAdb,OAiBoB,OAjBpB,UAiB0BqL,GAAW,CAAEpG,KAAI6B,MAAK7F,OAAQ2C,EAAK3C,SAjB7D,0CAmBMwT,QAAQ3P,MAAR,kBAAiCkE,GACjCM,GAAQ6a,aAAa,CAAElf,KAAI6B,QApBjC,mBAqBa,GArBb,YAwBQsR,EAxBR,wBAyBYjT,EAAOY,EAAYnC,GAAM,GAC/B0F,GAAQqG,YAAY,CAClB7I,MACAvC,QAAQ,uEAAD,OAAkBY,GACzB4G,KAAM,CAAE5F,OAAQlB,KAElBqE,GAAQzE,OAAO,CAAEN,QAAQ,yFAAD,OAAqBY,KAC7CmE,GAAQjB,SAAS,CAAErI,GAAI,wBACvBsJ,GAAQ4a,gBAAgB,IAjC9B,mBAkCa,GAlCb,YAqCQlkB,EArCR,wBAsCMsJ,GAAQmN,SAAS,CAAE3P,IAAK9G,EAAG8G,IAAK7B,KAAIyR,SAAU9S,EAAKsB,KAAMjE,OAAQ2C,EAAK3C,SACtEqI,GAAQzE,OAAO,CAAEN,QAAQ,iEAAD,OAAiBX,EAAKuB,KAAtB,kDAAsCnF,EAAG0H,SAAzC,OACxB4B,GAAQ4a,gBAAgB,IAxC9B,kCA4CI5a,GAAQqG,YAAY,CAClB7I,MACAvC,QAAQ,qDAAD,OAAeY,GACtB4G,KAAM,CAAE5F,OAAQlB,EAAIhE,OAAQ2C,EAAK3C,OAAQiE,KAAMtB,EAAKsB,QAEtDoE,GAAQzE,OAAO,CAAEN,QAAQ,uEAAD,OAAkBY,KAC1CmE,GAAQjB,SAAS,CAAErI,GAAI,wBACvBsJ,GAAQ4a,gBAAgB,IAnD5B,mBAoDW,GApDX,eAuDE5a,GAAQ6a,aAAa,CAAElf,KAAI6B,QAC3B2N,QAAQ3P,MAAR,mDAAkEkE,GAxDpE,mBAyDS,GAzDT,yCA4DA,SAAUqC,GAAWrC,GAArB,oFAOmB,OANT/D,EAAwB+D,EAAxB/D,GAAI6B,EAAoBkC,EAApBlC,IADd,EACkCkC,EAAf/H,cADnB,MAC4B,EAD5B,EAEQmf,EAAMb,GACTa,IADS,SAETC,MAAMvZ,GACNuZ,MAAM,aALX,SAOyB4D,GAAiB,CAAEhf,KAAI6B,QAPhD,YAOQsd,EAPR,8BASQA,EAASnjB,OAASA,GAAU,GATpC,iBAeM,OALM2C,EAVZ,2BAWWwgB,GAXX,IAYQnjB,OAAQmjB,EAASnjB,OAASA,IAZlC,UAeYmf,EAAIC,MAAJ,UAAapb,EAAb,YAAmBmf,EAAS5hB,OAAQ8d,IAAI1c,GAfpD,eAgBM0F,GAAQ+a,kBAAkB,CAAEpf,KAAI6B,QAhBtC,mBAiBa,GAjBb,QAoBI,OApBJ,UAoBUsZ,EAAIC,MAAJ,UAAapb,EAAb,YAAmBmf,EAAS5hB,OAAQ8d,IAAI,IApBlD,eAqBIhX,GAAQ+a,kBAAkB,CAAEpf,KAAI6B,QArBpC,mBAsBW,GAtBX,eAyBE2N,QAAQ3P,MAAR,kCAAyCgC,EAAzC,gCAAoE7B,EAApE,MACAqE,GAAQzE,OAAO,CAAEN,QAAQ,sIACzB+E,GAAQgb,eAAe,CAAErf,KAAI6B,MAAKhC,MAAO,gBA3B3C,mBA4BS,GA5BT,yCA+BA,SAAUmf,GAAiBjb,GAA3B,gFAGmB,OAFT/D,EAAY+D,EAAZ/D,GAAI6B,EAAQkC,EAARlC,IADd,SAGyByY,GACpBa,IAAI,SACJC,MAAMvZ,GACNuZ,MAAM,aACNQ,KAAK,SAPV,UAGQsC,EAHR,SAQQ9b,EAA0Ba,OAAOC,OAAOgb,EAASxC,OAAS,KACtDze,OATZ,qBAWU0B,EAAcyD,EAAMsE,MAAK,SAAA/H,GAAI,OAAIA,EAAKqB,KAAOA,MAXvD,yCAaarB,GAbb,0EAkBA,SAAU6S,GAASzN,GAAnB,2FACU/D,EAAkC+D,EAAlC/D,GAAI6B,EAA8BkC,EAA9BlC,IAAK4P,EAAyB1N,EAAzB0N,SADnB,EAC4C1N,EAAf/H,cAD7B,MACsC,EADtC,EAEOgE,GAAO6B,GAAQ4P,EAFtB,uBAGIjC,QAAQ3P,MAAM,wDAAyDG,EAAI6B,EAAK4P,GAChFpN,GAAQib,aAAa,IAJzB,6BAQQ/hB,GAAO,IAAIG,MAAOC,UACpBgB,EAAuB,CAAEqB,KAAIzC,OAAM0C,KAAMwR,EAAUzV,OAAQA,GAE9C,WAAbyV,GAAsC,aAAbA,EAX/B,iBAYqB,OAZrB,UAY2BuN,GAAiB,CAAEhf,KAAI6B,QAZlD,SAYUsd,EAZV,UAcMxgB,EAAK3C,QAAUmjB,EAASnjB,QAAU,GAAKA,EACvC2C,EAAKpB,KAAO4hB,EAAS5hB,MAf3B,QAoBE,OADMgiB,EAnBR,UAmBoB5gB,EAAKqB,GAnBzB,YAmB+BrB,EAAKpB,MAnBpC,UAoBQ+c,GACHa,IAAI,SACJC,MAAMvZ,GACNuZ,MAAM,aACNA,MAAMmE,GACNlE,IAAI1c,GAzBT,eA2BE0F,GAAQmb,gBAAgB,CAAExf,KAAI6B,QA3BhC,mBA4BS,GA5BT,yCA+BA,SAAUkG,GAAShE,GAAnB,kFAMe,OALLlC,EAAiBkC,EAAjBlC,IAAKvC,EAAYyE,EAAZzE,QADf,EAEmCA,EAAQwH,KAAjC5F,EAFV,EAEUA,OAAQlF,EAFlB,EAEkBA,OAAQiE,EAF1B,EAE0BA,KAExBX,EAAQwH,KAAKC,OAAQ,EAJvB,SAMqBgV,GAAc,CAAEla,MAAKvC,YAN1C,oBAOcW,EAPd,iBAQiB,OARjB,SAQuBuR,GAAS,CAC1BxR,GAAIkB,EACJW,MACA7F,OAAQA,GAAU,EAClByV,SAAUxR,IAZhB,0CAeMoE,GAAQqG,YAAY,CAClB7I,MACAvC,QAAQ,iGAEV+E,GAAQob,gBAAgB,IAnB9B,mBAoBa,GApBb,eAwBEjQ,QAAQ3P,MAAM,uCAAwCkE,GACtDM,GAAQqb,aAAa,IAzBvB,mBA0BS,GA1BT,yCA6Be,SAAUjF,KAAV,kEACb,OADa,SACPpU,aAAI,CACR6U,aAAW,YAAa1J,IACxB0J,aAAW,cAAe9U,IAC1B8U,aAAW,YAAa3I,IACxB2I,aAAW,YAAanT,MALb,wC,iBC1KU4X,IAAV,SAAUA,KAAV,kEACb,OADa,SACPtZ,aAAI,CACRgU,KACAnY,KACAzD,KACA2D,KACAQ,OANW,wCCIK0E,QACW,cAA7BzN,OAAOG,SAAS4lB,UAEe,UAA7B/lB,OAAOG,SAAS4lB,UAEhB/lB,OAAOG,SAAS4lB,SAAShkB,MACvB,2DCRN0H,EAAeuc,IAAIC,IACnBC,IAASxZ,OACP,kBAAC,IAAD,CAAU/C,MAAOA,GACf,kBAAC,GAAD,OAEFgW,SAASwG,eAAe,SD4HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA1gB,GACL2P,QAAQ3P,MAAMA,EAAMP,c","file":"static/js/main.a630f6af.chunk.js","sourcesContent":["import React from 'react';\nimport { Menu as AntdMenu } from 'antd';\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport '../styles/menu.scss';\nimport menu from '../configs/menu.json';\nimport { IState } from '../reducers/interfaces';\n\ninterface IMenuProps extends RouteComponentProps {\n  isLoggedIn: boolean;\n}\n\ninterface IMenuConfig {\n  label: string;\n  path: string;\n  link?: boolean;\n}\n\nfunction Menu(props: IMenuProps) {\n  if (!props.isLoggedIn) {\n    return <React.Fragment/>;\n  }\n\n  const mode = window.innerWidth < 767\n    ? 'horizontal'\n    : 'inline';\n\n  return (\n    <AntdMenu\n      mode={mode}\n      selectedKeys={[props.location.pathname.split('/').pop() || '']}\n    >\n      {menu.map((value: IMenuConfig) => (\n        <AntdMenu.Item\n          key={value.path.split('/').pop()}\n          disabled={value.path === props.location.pathname}\n        >\n          {\n            value.link\n              ? (\n\n                <a\n                  href={value.path}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Помощь\n                </a>\n              ) : (\n                <Link to={value.path}>\n                  {value.label}\n                </Link>\n              )\n          }\n        </AntdMenu.Item>\n      ))}\n    </AntdMenu>\n  );\n}\n\nexport default connect((state: IState) => ({ isLoggedIn: state.isLoggedIn }))(withRouter(Menu));\n","import React from 'react';\nimport { Tooltip } from 'antd';\n\nexport interface IRoll {\n  roll: string;\n  results: number[];\n  amount: number;\n  size: number;\n  maxResult: number;\n  minResult: number;\n  sum: number;\n}\n\nexport const diceRegex = /([1-9]|10)[dд]((10|12|20)|[468])/miu;\nexport const diceRegexG = /([1-9]|10)[dд]((10|12|20)|[468])/miug;\n\nexport const getRandomInt = (min: number, max: number) =>\n  Math.floor(Math.random() * ((max + 1) - min) + min);\n\nexport const hasDice = (str: string) =>\n  /\\d+[dд]\\d+/imu.test(str);\n\nexport const rollDice = (amount: number, size: number) => {\n  return new Array(amount).fill(amount + size).map(() => getRandomInt(1, size));\n};\n\nexport const exportRolls = (str: string) => {\n  const rolls = str.match(diceRegexG);\n  if (rolls) {\n    return rolls.map((roll: string): IRoll => {\n      const [_amount, _size] = roll.split(/[dд]/);\n      const amount = parseInt(_amount);\n      const size = parseInt(_size);\n      const results = rollDice(amount, size);\n\n      return ({\n        maxResult: size * amount,\n        minResult: amount,\n        sum: results.reduce((a, b) => a + b, 0),\n        roll,\n        results,\n        amount,\n        size,\n      })\n    }).splice(0, 10);\n  }\n  return [];\n};\n\nexport const importRolls = (body: string, _rolls: IRoll[]) => {\n  const rolls = [..._rolls]; // Avoid mutations\n  return body.split(' ').map((word: string, index: number) => {\n    const rollIndex = rolls.findIndex(({ roll }) => roll === word);\n    if (rollIndex > -1) {\n      const {\n        results,\n        maxResult,\n        minResult,\n        sum\n      } = rolls.splice(rollIndex, 1)[0];\n\n      const summing = results.length > 1\n        ? `${sum} = ${results.join(' + ')}`\n        : `${results.join(' + ')}`;\n\n      const className = (sum === maxResult && 'critHit') || (sum === minResult && 'critMiss') || '';\n\n      return (\n        <React.Fragment key={word + index}>\n          {' '}\n          <Tooltip title={summing}>\n            <b className={className}>\n              {word}({sum})\n            </b>\n          </Tooltip>\n        </React.Fragment>\n      )\n    }\n    return ` ${word}`;\n  });\n};\n","import { message as notify } from 'antd';\n\nimport { IItem, IMessage } from '../reducers/interfaces';\nimport { diceRegex, exportRolls, hasDice } from './dice';\n\nexport const camelize = (str: string) => {\n  return str\n    .toLowerCase()\n    .replace(/_./g, (m) => m.toUpperCase())\n    .replace(/_/g, '')\n};\n\nexport const colorFromString = (str: string) => {\n  if (!str) return '#000';\n\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n  for (let i = 0; i < 3; i++) {\n    let value = (hash >> (i * 8)) & 0xFF;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n\n  return color;\n};\n\nexport const isOnline = (time?: number) => {\n  if (!time) return false;\n  const lastActivity = time || parseInt(localStorage.getItem('lastActivity') || '0');\n  return (lastActivity + 180000) > new Date().getTime();\n};\n\nexport const doubleDigit = (str: number) => `${str}`.length === 1\n  ? `0${str}`\n  : str;\n\nexport const getTime = (time: number) => {\n  const date = new Date(time);\n  return [date.getHours(), date.getMinutes(), date.getSeconds()].map(doubleDigit).join(':');\n};\n\nexport const getDate = (time: number) => {\n  const date = new Date(time);\n  return [date.getDate(), date.getMonth() + 1, date.getFullYear()].map(doubleDigit).join('.');\n};\n\nexport const getFullTime = (time: number) => {\n  const date = new Date(time);\n  const messageTime = [date.getHours(), date.getMinutes(), date.getSeconds()].map(doubleDigit).join(':');\n  const messageDate = [date.getDate(), date.getMonth() + 1, date.getFullYear()].map(doubleDigit).join('.');\n\n  return [messageTime, messageDate].join(' ');\n};\n\nexport const isURL = (str: string) =>\n  /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/igm.test(str);\n\nexport const processMessages = (messages: IMessage[]) => {\n  return messages\n    .filter((item: IMessage, pos: number, self: IMessage[]) =>\n      self.findIndex((_i: IMessage) => _i.time === item.time) === pos\n    )\n    .sort((a: IMessage, b: IMessage) => b.time - a.time)\n    .map((m: IMessage, index: number, messages: IMessage[]) => {\n      if (index < messages.length - 2) {\n        if (m.author === messages[index + 1].author) {\n          return {\n            ...m,\n            grouped: true,\n          }\n        }\n      }\n      return m;\n    })\n};\n\nexport const formatMessage = (message: IMessage) => {\n  const { body } = message;\n\n  if (diceRegex.test(body)) {\n    message.rolls = exportRolls(body);\n  }\n\n  if (body.indexOf('*') > -1) {\n    message.isRP = true;\n  }\n\n  if (/(@[a-zа-яё]*)/mui.test(body)) {\n    message.mentioned = true;\n  }\n\n  return message;\n};\n\nexport const validateMessage = (message: string) => {\n\n  if (!message) {\n    notify.error('Сообщение пустое');\n    return false;\n  }\n\n  if (hasDice(message)) {\n    const rolls: string[] | null = message.match(/(( |^)[a-zа-я]+\\d+[dд]\\d+)|(\\d+[dд]\\d+[a-zа-я]+( |$))|(\\d+[dд]\\d+)/miug);\n    if (rolls) {\n      const wasError = rolls.some((roll: string) => {\n        if (/(([a-zа-яё])\\d+[dд]\\d+)|(\\d+[dд]\\d+([a-zа-яё]))/miug.test(roll)) {\n          notify.error(`Ошибка в дайсе ${roll}. Рядом не должно быть символов`);\n          return true;\n        }\n\n        const [amount, size] = roll.split(/[dд]/u);\n\n        if (parseInt(amount) > 10) {\n          notify.error(`Ошибка в дайсе ${roll}. Нельзя бросать больше 10-ти дайсов`);\n          return true;\n        }\n\n        if ([2,4,6,8,10,12,20].indexOf(parseInt(size)) === -1) {\n          notify.error(`Ошибка в дайсе ${roll}. Можно бросать только дайсы размеров 4 6 8 10 12 20`);\n          return true;\n        }\n\n        return false;\n      });\n      if (wasError) return false;\n    }\n  }\n  return true;\n};\n\nexport const generateID = () =>\n  '_' + Math.random().toString(36).substr(2, 9);\n\nexport const getFailedItem: ((id: string) => IItem) = (id: string) => ({\n  id: id,\n  type: 'misc',\n  name: 'Ошибка',\n  weight: 0,\n  time: 0,\n  effect: id,\n  image: '',\n  description: 'Такого предмета не существует',\n  price: 0,\n  capacity: 0,\n  armor: 0,\n  approved: true,\n  failed: true,\n  amount: Number.MAX_VALUE,\n});\n\nexport const getItemName = (item: IItem, showAmount: boolean = true) =>\n  `${item ? `'${item.name}'` : 'предмет'}` + (showAmount && item.amount && item.amount >= 2 ? ` (${item.amount}шт)` : '');\n","import { IRoll } from '../helpers/dice';\nimport { ICharacter } from \"../containers/Character/config\";\n\nexport interface IAction {\n  type: string;\n\n  [key: string]: any; // Payload could be any type or size\n}\n\nexport interface IMessage {\n  author: string;\n  time: number;\n  body: string;\n  grouped?: boolean; // Remove header and top margin of message, because author is the same\n  isRP?: boolean;\n  mentioned?: boolean;\n  rolls?: IRoll[];\n  data?: { [key: string]: any }; // Extra data for special purposes\n}\n\nexport interface IState {\n  userData: IUser | null;\n  isLoggedIn: boolean;\n  settings: IUser | false;\n  loading: boolean;\n  messages: IMessage[];\n  users: IUsers;\n  uid: string;\n  currentUser: IUser | null;\n  items: IItem[];\n  error: Error | false;\n  notify?: string;\n  redirect?: string;\n  usersActivity: { [key: string]: string };\n  deletingItemData: IDeletedItemData;\n}\n\nexport interface IInventoryItem {\n  id: string;\n  time: number;\n  type: ItemType;\n  amount: number;\n}\n\nexport interface IInventory {\n  [key: string]: IInventoryItem;\n}\n\nexport interface IUser {\n  nickname: string;\n  avatar: string;\n  uid: string,\n  lastOnline: number;\n  isAdmin?: boolean;\n  inventory: IInventory,\n  character?: ICharacter,\n}\n\nexport interface IUsers {\n  [key: string]: IUser;\n}\n\nexport type ItemType = 'weapon' | 'usable' | 'wearable' | 'junk' | 'ammo' | 'note' | 'key' | 'misc';\n\nexport interface IItem {\n  id: string;\n  name: string;\n  weight: number;\n  time: number;\n  effect: string;\n  image: string;\n  description: string;\n  price: number;\n  capacity: number;\n  armor: number;\n  amount?: number;\n  approved: boolean;\n  author?: string;\n  type: ItemType;\n  failed?: boolean;\n}\n\nexport const defaultItem: IItem = {\n  id: '',\n  type: 'junk',\n  name: '',\n  effect: '',\n  image: '',\n  weight: 0,\n  price: 0,\n  description: '',\n  capacity: 0,\n  approved: false,\n  armor: 0,\n  time: 0,\n  amount: 0,\n};\n\nexport interface IDeletedItemData {\n  itemId?: string;\n  deleted?: boolean;\n  messagesChecked?: number;\n  messagesCleared?: number;\n  usersChecked?: number;\n  usersCleared?: number;\n  done?: boolean;\n}\n\nexport const defaultDeletedItemData: IDeletedItemData = {\n  itemId: '',\n  deleted: false,\n  messagesChecked: 0,\n  messagesCleared: 0,\n  usersChecked: 0,\n  usersCleared: 0,\n  done: false,\n};\n","import { processMessages } from '../helpers/utils';\nimport { defaultDeletedItemData, IAction, IItem, IState, IUser } from './interfaces';\n\nconst user = JSON.parse(localStorage.getItem('user') || 'null');\nif (user) localStorage.setItem('uid', user.uid);\nexport const initialState: IState = {\n  userData: user,\n  isLoggedIn: user !== null,\n  settings: false,\n  loading: false,\n  messages: [],\n  users: {},\n  uid: user ? user.uid : '',\n  currentUser: null,\n  items: [],\n  error: false,\n  usersActivity: {},\n  deletingItemData: defaultDeletedItemData,\n};\n\nexport const defaultUser: IUser = {\n  lastOnline: 0,\n\n  nickname: '',\n  avatar: '',\n\n  isAdmin: false,\n  uid: '',\n  inventory: {},\n};\n\nconst reducer = (state = initialState, action: IAction) => {\n  switch (action.type) {\n    case 'LOGIN':\n    case 'GET_MESSAGES':\n    case 'GET_MORE_MESSAGES':\n    case 'SEND_MESSAGE':\n    case 'SET_USER':\n    case 'GET_ITEMS':\n    case 'GET_MORE_ITEMS':\n    case 'GET_ITEMS_BY_ID':\n    case 'CREATE_ITEM':\n    case 'GIVE_ITEM':\n    case 'REMOVE_ITEM':\n    case 'PASS_ITEM':\n    case 'GET_USERS_ACTIVITY':\n    case 'UPLOAD_FILE': {\n      return {\n        ...state,\n        loading: true,\n      }\n    }\n    case 'SET_USER_SUCCESS':\n    case 'SET_USER_FAIL':\n    case 'GET_MESSAGES_FAIL':\n    case 'GET_MORE_MESSAGES_SUCCESS':\n    case 'GET_MORE_MESSAGES_FAIL':\n    case 'GIVE_ITEM_SUCCESS':\n    case 'REMOVE_ITEM_SUCCESS':\n    case 'REMOVE_ITEM_FAIL':\n    case 'PASS_ITEM_SUCCESS':\n    case 'PASS_ITEM_FAIL':\n    case 'GET_USERS_ACTIVITY_FAIL':\n    case \"DELETE_ITEM_FAIL\":\n    case 'SEND_MESSAGE_FAIL': {\n      return {\n        ...state,\n        loading: false,\n      }\n    }\n    case 'LOGIN_SUCCESS': {\n      return {\n        ...state,\n        uid: action.user.uid,\n        userData: action.user,\n        isLoggedIn: action.user !== null,\n        currentUser: {\n          ...defaultUser,\n          uid: action.user.uid,\n        },\n        loading: false,\n      }\n    }\n    case 'LOGIN_FAIL': {\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      }\n    }\n    case 'LOGOUT': {\n      return {\n        ...state,\n        userData: null,\n        isLoggedIn: false,\n      }\n    }\n    case 'GET_MESSAGES_SUCCESS': {\n      const messages = action.concat\n        ? [...state.messages, ...action.messages]\n        : action.messages;\n\n      return {\n        ...state,\n        messages: processMessages(messages),\n        loading: false,\n      }\n    }\n    case 'GET_USER_SUCCESS': {\n      const currentUser = action.user.uid === state.uid\n        ? action.user\n        : state.currentUser;\n\n      return {\n        ...state,\n        currentUser,\n        users: {\n          ...state.users,\n          [action.uid]: action.user,\n        },\n      }\n    }\n    case 'GET_ITEMS_SUCCESS': {\n      const items: { [key: string]: IItem } = {};\n      [...state.items, ...action.items]\n        .forEach((item: IItem) => items[item.id] = item);\n\n      return {\n        ...state,\n        loading: false,\n        items: Object.values(items),\n      }\n    }\n    case 'NOTIFY': {\n      return {\n        ...state,\n        notify: action.message,\n      }\n    }\n    case 'NOTIFY_SUCCESS': {\n      return {\n        ...state,\n        notify: undefined,\n      }\n    }\n    case 'REDIRECT': {\n      return {\n        ...state,\n        redirect: action.to,\n      }\n    }\n    case 'REDIRECT_SUCCESS': {\n      return {\n        ...state,\n        redirect: undefined,\n      }\n    }\n    case 'GET_USERS_ACTIVITY_SUCCESS': {\n      return {\n        ...state,\n        loading: false,\n        usersActivity: action.usersActivity,\n      }\n    }\n    case 'DELETE_ITEM': {\n      return {\n        ...state,\n        loading: true,\n        deletingItemData: {\n          itemId: action.id,\n          defaultDeletedItemData,\n        },\n      }\n    }\n    case 'DELETE_ITEM_PROGRESS': {\n      return {\n        ...state,\n        deletingItemData: {\n          ...state.deletingItemData,\n          [action.field]: action.value\n        },\n      }\n    }\n    case 'DELETE_ITEM_SUCCESS': {\n      return {\n        ...state,\n        loading: false,\n        items: state.items.filter((item: IItem) => item.id !== action.id),\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { initialState } from '../reducers';\nimport reducers from '../reducers'\n\nexport const sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  reducers,\n  initialState,\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\n);\n\nexport default store;\n","import store from '../helpers/store';\nimport { camelize } from '../helpers/utils';\n\nconst dispatch = store.dispatch;\n\nexport interface IPayload {\n  [key: string]: any;\n}\n\ninterface IActions {\n  [key: string]: (payload: IPayload) => void;\n}\n\nconst createAction =\n  (type: string) =>\n    (payload?: IPayload) =>\n      dispatch({ type, ...payload });\n\nconst createAsyncAction = (type: string) => {\n  const typeName = camelize(type);\n  return {\n    [typeName]: createAction(type),\n    [`${typeName}Success`]: createAction(`${type}_SUCCESS`),\n    [`${typeName}Fail`]: createAction(`${type}_FAIL`),\n  }\n};\n\nconst actions: IActions = {\n  ...createAsyncAction('LOGIN'),\n  ...createAsyncAction('GET_USER'),\n  ...createAsyncAction('GET_MESSAGES'),\n  ...createAsyncAction('GET_MORE_MESSAGES'),\n  ...createAsyncAction('SET_USER'),\n  ...createAsyncAction('SEND_MESSAGE'),\n  ...createAsyncAction('CHANGE_MESSAGE'),\n  ...createAsyncAction('SUBSCRIBE'),\n  ...createAsyncAction('UNSUBSCRIBE'),\n  ...createAsyncAction('UPLOAD_FILE'),\n  ...createAsyncAction('SET_ITEM'),\n  ...createAsyncAction('DELETE_ITEM'),\n  ...createAsyncAction('GET_ITEMS'),\n  ...createAsyncAction('GET_ITEM_BY_ID'),\n  ...createAsyncAction('GET_MORE_ITEMS'),\n  ...createAsyncAction('GIVE_ITEM'),\n  ...createAsyncAction('REMOVE_ITEM'),\n  ...createAsyncAction('PASS_ITEM'),\n  ...createAsyncAction('TAKE_ITEM'),\n  ...createAsyncAction('NOTIFY'),\n  ...createAsyncAction('REDIRECT'),\n  ...createAsyncAction('GET_USERS_ACTIVITY'),\n  ...createAsyncAction('DELETE_ITEM'),\n  deleteItemProgress: createAction('DELETE_ITEM_PROGRESS'),\n  updateLastOnline: createAction('UPDATE_LAST_ONLINE'),\n  logout: createAction('LOGOUT'),\n};\n\nexport default actions;\n","import React from 'react';\nimport { Avatar as AntdAvatar } from 'antd';\nimport { AvatarProps } from 'antd/es/avatar';\n\nimport { colorFromString, isURL } from '../helpers/utils';\n\ninterface IAvatarProps extends AvatarProps {\n  avatar: string;\n  nickname: string;\n}\n\nconst Avatar = (props: IAvatarProps) => {\n  const { avatar, nickname, style, ...rest } = props;\n\n  const _avatar = isURL(avatar) ? avatar : '';\n  return (\n    <AntdAvatar\n      src={_avatar}\n      style={{ ...style, backgroundColor: _avatar ? 'transparent' : colorFromString(nickname) }}\n      {...rest}\n    >\n      {nickname}\n    </AntdAvatar>\n  )\n};\n\nexport default Avatar;\n","import React, { Component } from 'react';\nimport { Modal } from 'antd';\nimport { CloseOutlined } from '@ant-design/icons';\n\nclass Image extends Component<{ src: string }, { visible: boolean }> {\n  state = { visible: false };\n\n  toggleModal = () => {\n    this.setState({\n      visible: !this.state.visible,\n    });\n  };\n\n  render() {\n    const { src } = this.props;\n\n    return (\n      <React.Fragment>\n        <img\n          onClick={this.toggleModal}\n          src={src}\n          alt=\"\"\n          className=\"chat-image\"\n        />\n        <Modal\n          title={\n            <div>\n              <a\n                href={src}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {src}\n              </a>\n              <CloseOutlined onClick={this.toggleModal}/>\n            </div>\n          }\n          className=\"image-modal\"\n          closable={false}\n          footer={null}\n          visible={this.state.visible}\n          onCancel={this.toggleModal}\n          width=\"fit-content\"\n        >\n          <img\n            style={{\n              maxWidth: '90vw',\n            }}\n            src={src}\n            alt=\"\"\n          />\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Image;\n","import React, { Component } from 'react';\nimport { Card, Button } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\n\nimport '../styles/item.scss';\nimport { IItem } from '../reducers/interfaces';\nimport Avatar from './Avatar';\nimport actions from '../reducers/actions';\n\ninterface IItemProps {\n  item: IItem,\n  footer?: JSX.Element,\n  disabled?: boolean;\n  uid?: string;\n  amount?: number;\n}\n\nclass Item extends Component<IItemProps> {\n  getStats = () => {\n    const { type, armor, capacity } = this.props.item;\n\n    switch (type) {\n      case 'wearable':\n        return armor;\n\n      case 'weapon':\n        return capacity;\n\n      default:\n        const amount = this.props.amount || this.props.item.amount;\n        return (amount && amount >= 2) ? `${amount}шт` : false;\n    }\n  };\n\n  labels = {\n    wearable: 'Защита',\n    weapon: 'Магазин',\n  };\n\n  getFooter = () => {\n    const { footer, uid } = this.props;\n    const { failed, id } = this.props.item;\n\n    if (failed) {\n      return (\n        <div className=\"item-footer\">\n          <Button\n            disabled={!uid}\n            onClick={() => actions.removeItem({ uid, id, all: true })}\n          >\n            <DeleteOutlined/>\n          </Button>\n        </div>\n      )\n    }\n\n    if (footer)\n      return (\n        <div className=\"item-footer\">\n          {footer}\n        </div>\n      )\n  };\n\n  render = () => {\n    const { disabled, item } = this.props;\n    const {\n      name = item.id,\n      price = 0,\n      description,\n      image,\n      effect,\n      weight = 0,\n      type,\n      approved,\n    } = item;\n\n    const stats = this.getStats();\n    return (\n      <Card className={`item ${(approved && !disabled) ? '' : 'disabled'}`}>\n        <div className=\"item-info\">\n          <div className=\"item-name\">{name}</div>\n          <div className=\"item-subinfo\">\n            <div className=\"item-price\">\n              {price > 0 && `Цена: ${price}`}\n            </div>\n            <div className=\"item-weight\">\n              {weight > 0 && `Вес: ${weight}lb`}\n            </div>\n          </div>\n        </div>\n        {(image || description) && (\n          <div className=\"item-body\">\n            {image && <div className=\"item-image\">\n              <Avatar avatar={image} nickname={name} shape=\"square\"/>\n            </div>}\n            {description}\n          </div>\n        )}\n\n        {(stats || effect) && (\n          <div className=\"item-prefooter\">\n            <div className=\"item-ammo\">\n              {\n                // @ts-ignore\n                stats ? `${this.labels[type] || 'Кол-во'}: ${stats}` : ''\n              }\n            </div>\n            <div className=\"item-effect\">{effect}</div>\n          </div>\n        )}\n        {this.getFooter()}\n      </Card>\n    )\n  }\n}\n\nexport default Item;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Item from './Item';\nimport { IItem, IState } from '../reducers/interfaces';\nimport actions from '../reducers/actions';\n\ninterface IItemByIdProps {\n  id: string;\n  item?: IItem;\n  disabled?: boolean;\n  footer?: JSX.Element;\n  messageId?: number;\n  amount?: number;\n}\n\nconst ItemById = (props: IItemByIdProps) => {\n  const { id, item, ...itemProps } = props;\n\n  if (!item) {\n    actions.getItemById({ id });\n    return <React.Fragment/>;\n  }\n\n  return (\n    <Item\n      item={item}\n      {...itemProps}\n    />\n  );\n};\n\nconst mapStateToProps = (state: IState, props: IItemByIdProps) => {\n  const { items } = state;\n  const item = items.find((item: IItem) => item.id === props.id);\n\n  return { item }\n};\n\nexport default connect(mapStateToProps)(ItemById);\n","import React from 'react';\nimport {\n  Button,\n  Popconfirm,\n  Collapse,\n  Tooltip,\n  Input,\n} from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\n\nimport { isURL } from '../../helpers/utils';\nimport { IMessage } from '../../reducers/interfaces';\nimport { importRolls } from '../../helpers/dice';\nimport Image from '../../components/Image';\nimport ItemById from '../../components/ItemById';\nimport actions from '../../reducers/actions';\nimport { ICharacterChanges, ICharacteristic } from \"../Character/config\";\n\ninterface IMessageBodyProps {\n  message: IMessage;\n  uid?: string;\n}\n\nconst MessageBody = (props: IMessageBodyProps) => {\n    const { uid, message } = props;\n    const {\n      body,\n      isRP,\n      rolls,\n      data,\n    } = message;\n\n    if (data) {\n      const { itemId, taken, amount, type, characterChanges } = data;\n\n      if (characterChanges) {\n        const changes: ICharacterChanges[] = Object.values(characterChanges);\n\n        const formatChange = (change: number | string | ICharacteristic) => {\n          switch (typeof change) {\n            case 'string':\n            case 'number':\n              return change;\n\n            default:\n              return [\n                change.base && `b:${change.base}`,\n                change.change && `${change.base ? ' + ' : ''}c:${change.change}`,\n                change.total && ` = t:${change.total}`,\n              ].filter(Boolean).join('');\n          }\n        };\n\n        return (\n          <Collapse>\n            <Collapse.Panel\n              key=\"char-changes\"\n              header={body}\n            >\n              {changes.map(({ label, full, before, after }) => (\n                <div\n                  key={label}\n                  className=\"chat-char-changes\"\n                >\n                  <Tooltip title={full}>\n                    <span>{label}</span>\n                  </Tooltip>\n                  <div>\n                    <Input\n                      value={formatChange(before)}\n                      readOnly\n                    />\n                    ->\n                    <Input\n                      value={formatChange(after)}\n                      readOnly\n                    />\n                  </div>\n                </div>\n              ))}\n            </Collapse.Panel>\n          </Collapse>\n        )\n      }\n\n      if (itemId) {\n        return (\n          <>\n            <i className=\"rp-message\">\n              {body}\n            </i>\n            <div className={taken ? '' : 'rp-message'}>\n              <ItemById\n                id={itemId.trim()}\n                amount={amount}\n                disabled={taken}\n                footer={uid && type ? (\n                  <Popconfirm\n                    title=\"Подобрать предмет?\"\n                    onConfirm={() => actions.takeItem({ uid, message, data })}\n                    okText=\"Подобрать\"\n                    cancelText=\"Отмена\"\n                    disabled={taken}\n                  >\n                    <Button className=\"take-button\" disabled={taken}>\n                      <UploadOutlined/>\n                    </Button>\n                  </Popconfirm>\n                ) : undefined}\n              />\n            </div>\n          </>\n        )\n      }\n    }\n\n    if (isURL(body)) {\n      if (/\\.(gif|jpe?g|tiff|png|webp|bmp)/ig.test(body)) {\n        return (\n          <Image src={body}/>\n        )\n      }\n\n      const link = (\n        <a\n          href={body}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {body}\n        </a>\n      );\n\n      if (body.indexOf('youtu') > -1) {\n        const getVideoId = (body: string) => {\n          if (body.indexOf('youtu.be') > -1) {\n            const regExMatch = body.match(/youtu\\.be\\/.* /i);\n            if (regExMatch) {\n              const lastMatch = regExMatch.pop();\n              if (lastMatch) {\n                return lastMatch.split('/').pop() || '';\n              }\n            }\n          } else {\n            return new URL(body).searchParams.get('v') || '';\n          }\n          return ''\n        };\n\n        const searchParams = new URL(body).searchParams;\n        let params = 'listType=playlist';\n        const videoId = getVideoId(body);\n\n        if (videoId) {\n          const listId = searchParams.get('list');\n          if (listId)\n            params += '&list=' + listId;\n\n          const time = searchParams.get('t');\n          if (time)\n            params += '&start=' + time;\n\n          return (\n            <>\n              {link}\n              <iframe\n                title={videoId}\n                id=\"ytplayer\"\n                width=\"100%\"\n                height=\"360\"\n                src={`http://www.youtube.com/embed/${videoId}?${params}`}\n                frameBorder=\"0\"\n                allow=\"accelerometer; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n              />\n            </>\n          )\n        }\n      }\n\n      return link;\n    }\n\n    const _body = rolls\n      ? importRolls(body, rolls)\n      : body;\n\n    if (isRP) {\n      return (\n        <i className=\"rp-message\">\n          {_body}\n        </i>\n      )\n    }\n\n    return <span>{_body}</span>;\n  }\n;\n\nexport default MessageBody;\n","import React from 'react';\nimport { Card, Tooltip } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { IMessage, IUser } from '../../reducers/interfaces';\nimport Avatar from '../../components/Avatar';\nimport MessageBody from './MessageBody';\nimport {\n  getDate,\n  getFullTime,\n  getTime,\n  isOnline\n} from '../../helpers/utils';\n\ninterface IMessageProps {\n  message: IMessage,\n  user: IUser,\n  uid: string;\n}\n\nconst Message = (props: IMessageProps) => {\n  const {\n    message: {\n      time,\n      grouped,\n      body,\n      mentioned,\n    },\n    user,\n    uid,\n  } = props;\n\n  const title = user && (\n    <Link to={`./${user.uid}/settings`}>\n      <Tooltip\n        title={user.lastOnline ? `Последняя активность: ${getFullTime(user.lastOnline)}` : undefined}\n        placement=\"left\"\n      >\n        <div className={`chat-message__title ${isOnline(user.lastOnline) ? 'online' : ''}`}>\n          <Avatar\n            avatar={user.avatar}\n            nickname={user.nickname}\n          />\n          <div className=\"chat-message__nickname\">\n            {user.nickname || user.uid}\n          </div>\n        </div>\n      </Tooltip>\n    </Link>\n  );\n\n  return (\n    <Card\n      className={`chat-message ${grouped ? 'grouped' : ''} ${mentioned && user && (body.indexOf(`@${user.nickname} `) > -1) ? 'mentioned' : ''}`}\n      title={grouped ? undefined : title}\n      key={time}\n    >\n      <Tooltip\n        title={getDate(time)}\n        placement=\"left\"\n      >\n        <div className=\"chat-time\">{getTime(time)}</div>\n      </Tooltip>\n      <MessageBody message={props.message} uid={uid}/>\n    </Card>\n  );\n};\n\nexport default Message;\n","import React, {\n  ChangeEvent,\n  Component,\n  KeyboardEvent,\n  ClipboardEvent,\n  DragEvent,\n} from 'react';\nimport { connect } from 'react-redux';\nimport { SendOutlined } from '@ant-design/icons';\nimport {\n  Input,\n  message as notify,\n  Spin,\n} from 'antd';\n\nimport '../../styles/chat.scss';\nimport actions from '../../reducers/actions';\nimport { IMessage, IState, IUser, IUsers } from '../../reducers/interfaces';\nimport Message from './Message';\nimport { validateMessage } from '../../helpers/utils';\n\ninterface IChatProps {\n  messages: IMessage[],\n  uid: string,\n  loading: boolean,\n  users: IUsers;\n  user: IUser;\n}\n\ninterface IChatState {\n  message: string;\n  sending: boolean;\n}\n\nclass Chat extends Component<IChatProps, IChatState> {\n  state = {\n    message: '',\n    sending: false,\n  };\n\n  componentDidMount = () => {\n    actions.getMessages({});\n    actions.subscribe({});\n    this.setState({ message: localStorage.getItem('message') || '' });\n  };\n\n  componentWillUnmount = () => {\n    actions.unsubscribe({});\n  };\n\n  componentDidUpdate = (prevProps: IChatProps) => {\n    const { messages, users } = this.props;\n\n    if (this.state.sending && prevProps.messages !== messages) {\n      localStorage.setItem('message', '');\n      this.setState({\n        message: '',\n        sending: false,\n      });\n    }\n\n    messages.forEach((m: IMessage) => {\n      if (!users[m.author]) {\n        actions.getUser({ uid: m.author });\n      }\n    });\n  };\n\n  onChangeMessage = (event: ChangeEvent<HTMLTextAreaElement>) => {\n    const message = event.target.value;\n    localStorage.setItem('message', message);\n    this.setState({ message });\n  };\n\n  onKeyDown = (event: KeyboardEvent<HTMLTextAreaElement>) => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n\n      this.onSendMessage();\n    }\n\n    const { uid } = this.props;\n    if (event.key === 'Up' || event.key === 'ArrowUp') {\n      const message = this.props.messages.find((m: IMessage) => m.author === uid);\n      if (message) {\n        const { currentTarget: { value, selectionStart } } = event;\n        if (value.substr(0, selectionStart).split('\\n').length === 1) {\n          const { body } = message;\n          localStorage.setItem('message', body);\n          this.setState({ message: body });\n        }\n      }\n    }\n  };\n\n  onSendMessage = () => {\n    const { message } = this.state;\n    const { user, loading, uid } = this.props;\n\n    if (loading) {\n      return;\n    }\n\n    if (!user) {\n      notify.error('Данные о пользователе отсутствуют');\n      return;\n    }\n\n    if (!user.nickname) {\n      notify.error('Никнейм не установлен. Пройдите в настройки и назовите себя');\n      return;\n    }\n\n    if (!validateMessage(message)) {\n      return;\n    }\n\n    this.setState({ sending: true });\n    actions.sendMessage({\n      uid,\n      message,\n    });\n  };\n\n  getMoreMessages = () => {\n    actions.getMoreMessages({ firstMessage: this.props.messages[this.props.messages.length - 1] })\n  };\n\n  onScroll = (event: React.UIEvent<HTMLDivElement, UIEvent>) => {\n    if (event.currentTarget.scrollTop <= 50) {\n      event.preventDefault();\n      this.getMoreMessages();\n    }\n  };\n\n  uploadFile = (file: File, event: ClipboardEvent<HTMLTextAreaElement> | DragEvent<HTMLTextAreaElement>) => {\n    const { uid } = this.props;\n    if (file) {\n      if (file.type.indexOf('image') > -1) {\n        actions.uploadFile({ uid: uid, file });\n      } else {\n        notify.error('Только картинки могут быть загружены');\n      }\n      event.preventDefault();\n    }\n  };\n\n  onPaste = (e: ClipboardEvent<HTMLTextAreaElement>) => {\n    this.uploadFile(e.clipboardData.files[0], e)\n  };\n\n  onDrop = (e: DragEvent<HTMLTextAreaElement>) => {\n    const file = e.dataTransfer.items[0].getAsFile();\n    if (file)\n      this.uploadFile(file, e)\n  };\n\n  render = () => {\n    const { messages, loading, users, uid } = this.props;\n\n    return (\n      <Spin spinning={loading}>\n        <div className={`chat-wrapper`}>\n          <div\n            className=\"chat-body\"\n            onScroll={this.onScroll}\n          >\n            {messages.map((m: IMessage) => (\n              <Message\n                key={m.time}\n                message={m}\n                user={users[m.author]}\n                uid={uid}\n              />\n            ))}\n          </div>\n          <div className=\"chat-controls\">\n            <Input.TextArea\n              placeholder=\"Введите сообщение\"\n              autoSize={{ minRows: 1, maxRows: 10 }}\n              onChange={this.onChangeMessage}\n              onKeyDown={this.onKeyDown}\n              value={this.state.message}\n              onPaste={this.onPaste}\n              onDrop={this.onDrop}\n            />\n            <SendOutlined\n              onClick={this.onSendMessage}\n            />\n          </div>\n        </div>\n      </Spin>\n    )\n  }\n}\n\nconst mapStateToProps = (state: IState) => {\n  const { messages, uid, loading, users } = state;\n\n  return {\n    messages,\n    uid,\n    loading,\n    users,\n    user: users[uid]\n  };\n};\n\nexport default connect(mapStateToProps)(Chat);\n","import React from 'react';\n\nexport default () => (\n  <svg viewBox=\"64 64 896 896\" focusable=\"false\" className=\"anticon-spin\" data-icon=\"sync\" width=\"1em\" height=\"1em\"\n       fill=\"#ff4d4f\" aria-hidden=\"true\">\n    <path d=\"M168 504.2c1-43.7 10-86.1 26.9-126 17.3-41 42.1-77.7 73.7-109.4S337 212.3 378 195c42.4-17.9 87.4-27 133.9-27s91.5 9.1 133.8 27A341.5 341.5 0 01755 268.8c9.9 9.9 19.2 20.4 27.8 31.4l-60.2 47a8 8 0 003 14.1l175.7 43c5 1.2 9.9-2.6 9.9-7.7l.8-180.9c0-6.7-7.7-10.5-12.9-6.3l-56.4 44.1C765.8 155.1 646.2 92 511.8 92 282.7 92 96.3 275.6 92 503.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8zm756 7.8h-60c-4.4 0-7.9 3.5-8 7.8-1 43.7-10 86.1-26.9 126-17.3 41-42.1 77.8-73.7 109.4A342.45 342.45 0 01512.1 856a342.24 342.24 0 01-243.2-100.8c-9.9-9.9-19.2-20.4-27.8-31.4l60.2-47a8 8 0 00-3-14.1l-175.7-43c-5-1.2-9.9 2.6-9.9 7.7l-.7 181c0 6.7 7.7 10.5 12.9 6.3l56.4-44.1C258.2 868.9 377.8 932 512.2 932c229.2 0 415.5-183.7 419.8-411.8a8 8 0 00-8-8.2z\"/>\n  </svg>\n);\n","import React from 'react';\n\nexport default () => (\n  <svg viewBox=\"64 64 896 896\" focusable=\"false\" className=\"\" data-icon=\"check-circle\" width=\"1em\" height=\"1em\"\n       fill=\"currentColor\" aria-hidden=\"true\">\n    <path\n      d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\"\n      fill=\"#52c41a\"/>\n    <path\n      d=\"M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm193.4 225.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.3 0 19.9 5 25.9 13.3l71.2 98.8 157.2-218c6-8.4 15.7-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.4 12.7z\"\n      fill=\"transparent\"/>\n    <path\n      d=\"M699 353h-46.9c-10.2 0-19.9 4.9-25.9 13.3L469 584.3l-71.2-98.8c-6-8.3-15.6-13.3-25.9-13.3H325c-6.5 0-10.3 7.4-6.5 12.7l124.6 172.8a31.8 31.8 0 0051.7 0l210.6-292c3.9-5.3.1-12.7-6.4-12.7z\"\n      fill=\"#52c41a\"/>\n  </svg>\n);\n","import React from 'react';\n\nimport LoadIcon from './LoadIcon';\nimport CheckIcon from './CheckIcon';\n\nconst Loader = (props: { loading: boolean }) => {\n  const { loading } = props;\n\n  return (\n    <div className=\"loader\">\n      {loading\n        ? (\n          <LoadIcon/>\n        ) : (\n          <CheckIcon/>\n        )\n      }\n    </div>\n  )\n};\n\nexport default Loader;\n","import React, { ChangeEvent } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Card,\n  Input,\n  Button,\n  Popconfirm, Switch,\n} from 'antd';\nimport { RouteComponentProps } from 'react-router';\n\nimport { ClearOutlined } from '@ant-design/icons';\n\nimport actions from '../../reducers/actions';\nimport { defaultUser } from '../../reducers';\nimport { IState, IUser } from '../../reducers/interfaces';\nimport Avatar from '../../components/Avatar';\nimport Loader from '../../components/Loader/index';\nimport { getFullTime } from '../../helpers/utils';\n\ninterface ISettingsProps extends RouteComponentProps {\n  loading: boolean;\n  user: IUser | null;\n  hasRight: boolean;\n  uid: string;\n  currentUser: IUser | null;\n}\n\nexport class Settings extends React.Component<ISettingsProps> {\n  componentDidMount = () => {\n    const { user, uid } = this.props;\n    if (!user) {\n      actions.getUser({ uid });\n    }\n  };\n\n  rawOnChange = (field: string, value: string | boolean) => {\n    const { user } = this.props;\n    if (!user) return;\n\n    const newSettings = {\n      ...user,\n      [field]: value,\n    };\n\n    this.setSettings(newSettings);\n  };\n\n  onChange = (field: string) =>\n    (event: ChangeEvent<HTMLInputElement>) =>\n      this.rawOnChange(field, event.target.value);\n\n  setSettings = (newSettings: {}) => {\n    const { user } = this.props;\n    if (user) {\n      actions.setUser({\n        uid: user.uid,\n        user: newSettings,\n      });\n    }\n  };\n\n  clearAvatar = () => this.setSettings({\n    ...this.props.user,\n    avatar: '',\n  });\n\n  getField = (key: string, value: string, user: IUser) => {\n    const { nickname = '' } = user;\n    const { hasRight, currentUser, uid } = this.props;\n    const disabled = !hasRight;\n\n    switch (key) {\n      case 'avatar':\n        return (\n          <div>\n            <div style={{ display: 'flex' }}>\n              <Input\n                value={value}\n                onChange={this.onChange(key)}\n                readOnly={disabled}\n              />\n              <Popconfirm\n                title=\"Очистить аватар?\"\n                onConfirm={this.clearAvatar}\n                okText=\"Да\"\n                cancelText=\"Нет\"\n                icon={<ClearOutlined style={{ color: '#ff4d4f' }}/>}\n                disabled={!value}\n              >\n                <Button\n                  disabled={disabled || !value}\n                  danger\n                >\n                  <ClearOutlined/>\n                </Button>\n              </Popconfirm>\n            </div>\n            <Avatar\n              avatar={value}\n              nickname={nickname}\n              size={128}\n              style={{ margin: '8px auto', display: 'block' }}\n            />\n          </div>\n        );\n\n      case 'uid':\n        return (\n          <Input\n            value={value}\n            readOnly\n          />\n        );\n\n      case 'lastOnline':\n        return value\n          ? (\n            <Input\n              value={getFullTime(parseInt(value))}\n              readOnly\n            />\n          ) : (\n            'Пользователь ещё не был активен'\n          );\n\n      case 'isAdmin':\n        return <>\n          {\n            (hasRight && (currentUser && currentUser.uid !== uid)) &&\n            <>\n              <Switch\n                checked={!!value}\n                onChange={(isAdmin: boolean) => this.rawOnChange(key, isAdmin)}\n              />\n            </>\n          }\n          {value ? 'Имеются' : 'Отсутствуют'}\n        </>;\n\n      default:\n        return (\n          <Input\n            defaultValue={value}\n            onChange={this.onChange(key)}\n            readOnly={disabled}\n          />\n        )\n    }\n  };\n\n  labels: { [key: string]: string } = {\n    'avatar': 'Аватар',\n    'nickname': 'Никнейм',\n    'lastOnline': 'Последняя активность',\n    'isAdmin': 'Права админа',\n    'uid': 'UID',\n  };\n\n  render = () => {\n    const { user, loading } = this.props;\n\n    return (\n      <Card\n        className=\"settings\"\n        bordered={false}\n        loading={user === undefined}\n        title={user && `Настройки игрока ${user.nickname || user.uid}`}\n      >\n        <Loader loading={loading}/>\n        {user && Object\n          .keys(defaultUser)\n          .map((key: string) => {\n            const label = this.labels[key];\n            return label && (\n              <Card\n                className={key}\n                key={key}\n                title={label}\n              >\n                {\n                  // @ts-ignore\n                  this.getField(key, `${user[key] || ''}`, user)\n                }\n              </Card>\n            )\n          })\n        }\n      </Card>\n    )\n  }\n}\n\nconst mapStateToProps = (state: IState, props: ISettingsProps) => {\n  const { loading, users, currentUser } = state;\n\n  const uid = new URLSearchParams(props.match.params).get('uid') || state.uid || '0';\n  const user = users[uid];\n  if (user && !user.uid && uid) {\n    user.uid = uid;\n  }\n\n  return {\n    loading,\n    user,\n    uid,\n    hasRight: (!!user && !!currentUser) && (currentUser.uid === user.uid || !!currentUser.isAdmin),\n    currentUser,\n  };\n};\n\nexport default connect(mapStateToProps)(Settings);\n","import React from 'react';\nimport { Button, Avatar, Card } from 'antd';\n\nimport actions from '../reducers/actions';\n\nconst byeLink = 'https://cdn.lowgif.com/full/fc3d7d9abd06a92e-hi-bear-gifs-get-the-best-gif-on-giphy.gif';\n\nconst Logout = () => {\n  return (\n    <Card>\n      <Avatar\n        src={byeLink}\n        size={256}\n        style={{ margin: '0 auto', display: 'block' }}\n      />\n      <br/>\n      <br/>\n      <Button\n        type=\"primary\"\n        size=\"large\"\n        onClick={() => actions.logout({ })}\n        style={{ width: '100%' }}\n      >\n        Выйти\n      </Button>\n    </Card>\n  )\n};\n\nexport default Logout;\n","import React, { ChangeEvent, Component } from 'react';\nimport {\n  Card,\n  Input,\n  InputNumber,\n  Button,\n  Popconfirm,\n  message as notify,\n  Modal,\n  Select,\n  Switch,\n} from 'antd';\nimport { ClearOutlined, CloseOutlined } from '@ant-design/icons';\n\nimport { defaultItem, IItem } from '../../reducers/interfaces';\nimport Avatar from '../../components/Avatar';\n\ninterface IItemCreatorProps {\n  onSubmit: (item: IItem) => void;\n  onClose: () => void;\n  visible: boolean;\n  item?: IItem;\n  isAdmin?: boolean;\n}\n\nclass ItemCreator extends Component<IItemCreatorProps, IItem> {\n  state = defaultItem;\n\n  labels = {\n    id: 'ID',\n    type: 'Тип*',\n    name: 'Название*',\n    weight: 'Вес',\n    effect: 'Эффект',\n    image: 'Картинка',\n    description: 'Описание',\n    price: 'Цена',\n    capacity: 'Размер магазина',\n    armor: 'Защита',\n    approved: 'Подтверждён',\n  };\n\n  types = [\n    {\n      key: 'weapon',\n      value: 'Оружие',\n    },\n    {\n      key: 'wearable',\n      value: 'Одежда/Броня',\n    },\n    {\n      key: 'usable',\n      value: 'Используемое',\n    },\n    {\n      key: 'ammo',\n      value: 'Патроны',\n    },\n    {\n      key: 'misc',\n      value: 'Прочее',\n    },\n    {\n      key: 'note',\n      value: 'Записка',\n    },\n    {\n      key: 'key',\n      value: 'Ключ',\n    },\n    {\n      key: 'junk',\n      value: 'Мусор',\n    },\n  ];\n\n  onChange = (key: string, value: string | boolean | number) =>\n    // @ts-ignore\n    this.setState({ [key]: value });\n\n  clearImage = () =>\n    this.setState({ image: '' });\n\n  fields = {\n    id: () => false,\n    type: (value: string, key: string) => (\n      <Select\n        value={value}\n        onChange={(value: string) => this.onChange(key, value)}\n      >\n        {this.types.map(({ key, value }) => (\n          <Select.Option value={key} key={key}>\n            {value}\n          </Select.Option>\n        ))}\n      </Select>\n    ),\n    name: (value: string, key: string) => (\n      <Input\n        value={value}\n        onChange={(e: ChangeEvent<HTMLInputElement>) => this.onChange(key, e.currentTarget.value)}\n      />\n    ),\n    weight: (value: number, key: string) => (\n      <InputNumber\n        value={value}\n        min={0}\n        precision={2}\n        onChange={(value?: number) => this.onChange(key, value || 0)}\n        step={0.01}\n      />\n    ),\n    effect: (value: string, key: string) => (\n      <Input\n        value={value}\n        onChange={(e: ChangeEvent<HTMLInputElement>) => this.onChange(key, e.currentTarget.value)}\n      />\n    ),\n    image: (value: string, key: string) => (\n      <div>\n        <div style={{ display: 'flex' }}>\n          <Input\n            value={value}\n            onChange={(e: ChangeEvent<HTMLInputElement>) => this.onChange(key, e.currentTarget.value)}\n          />\n          <Popconfirm\n            title=\"Очистить картинку?\"\n            onConfirm={this.clearImage}\n            okText=\"Да\"\n            cancelText=\"Нет\"\n            icon={<ClearOutlined style={{ color: '#ff4d4f' }}/>}\n          >\n            <Button\n              disabled={!value}\n              danger\n            >\n              <ClearOutlined/>\n            </Button>\n          </Popconfirm>\n        </div>\n        <Avatar\n          shape=\"square\"\n          avatar={value}\n          nickname={value}\n          size={128}\n          style={{ margin: '8px auto', display: 'block' }}\n        />\n      </div>\n    ),\n    description: (value: string, key: string) => (\n      <Input.TextArea\n        value={value}\n        onChange={(e: ChangeEvent<HTMLTextAreaElement>) => this.onChange(key, e.currentTarget.value)}\n      />\n    ),\n    price: (value: number, key: string) => (\n      <InputNumber\n        value={value}\n        min={0}\n        step={1}\n        onChange={(value?: number) => this.onChange(key, value || 0)}\n      />\n    ),\n    capacity: (value: number, key: string, item: IItem) => (\n      item.type === 'weapon' && <InputNumber\n        value={value}\n        min={1}\n        step={1}\n        onChange={(value?: number) => this.onChange(key, value || 1)}\n      />\n    ),\n    armor: (value: number, key: string, item: IItem) => (\n      item.type === 'wearable' && <InputNumber\n        value={value}\n        min={0}\n        step={1}\n        onChange={(value?: number) => this.onChange(key, value || 0)}\n      />\n    ),\n    approved: (value: boolean, key: string) => (\n      this.props.isAdmin && <Switch\n        checked={value}\n        disabled={!this.props.isAdmin}\n        onChange={(checked: boolean) => this.onChange(key, checked)}\n      />\n    ),\n  };\n\n  getField = (key: string, value: string | number | boolean, item: IItem) => {\n    // @ts-ignore\n    const field = this.fields[key];\n    return field && field(value, key, item);\n  };\n\n  onSubmit = () => {\n    const { state } = this;\n    const { onSubmit, item = {} } = this.props;\n\n    const newItem: IItem = { ...state };\n    Object.keys(state).forEach((key: string) =>\n      // @ts-ignore\n      // eslint-disable-next-line\n      newItem[key] = newItem[key] === defaultItem[key] && item[key] || (newItem[key])\n    );\n\n    if (!newItem.name) {\n      notify.error('Имя не может быть пустым');\n      return;\n    }\n\n    onSubmit(newItem);\n    this.setState(defaultItem);\n  };\n\n  content = () => {\n    const { state } = this;\n    const { item = {} } = this.props;\n\n    return (\n      <div className=\"item-creator\">\n        <div className=\"item-creator__body\">\n          {Object\n            .keys(defaultItem)\n            .map((key: string) => {\n                // @ts-ignore\n                // eslint-disable-next-line\n                const value = state[key] === defaultItem[key] && item[key] || (state[key]);\n                const field = this.getField(key, value, state);\n                return field && (\n                  <Card\n                    className={key}\n                    key={key}\n                    // @ts-ignore\n                    title={this.labels[key]}\n                  >\n                    {field}\n                  </Card>\n                )\n              }\n            )\n          }\n        </div>\n        <div className=\"item-creator__controls\">\n          <Popconfirm\n            title=\"Все данные будут обнулены\"\n            onConfirm={() => this.setState(defaultItem)}\n            okText=\"Очистить\"\n            cancelText=\"Отмена\"\n            icon={<ClearOutlined style={{ color: '#ff4d4f' }}/>}\n          >\n            <Button>\n              Очистить\n            </Button>\n          </Popconfirm>\n          <Popconfirm\n            title=\"Подтвердить изменения?\"\n            onConfirm={this.onSubmit}\n            okText=\"Готово\"\n            cancelText=\"Отмена\"\n            icon={<ClearOutlined style={{ color: '#15395b' }}/>}\n          >\n            <Button>\n              Готово\n            </Button>\n          </Popconfirm>\n        </div>\n      </div>\n    )\n  };\n\n  render = () => {\n    const { onClose, visible } = this.props;\n\n    return (\n      <Modal\n        className=\"item-creator-modal\"\n        centered\n        closable={false}\n        onCancel={onClose}\n        footer={null}\n        visible={visible}\n        title={\n          <CloseOutlined onClick={onClose}/>\n        }\n      >\n        {this.content()}\n      </Modal>\n    )\n  }\n}\n\nexport default ItemCreator;\n","import React, { Component } from 'react';\nimport {\n  Dropdown,\n  Menu,\n  Button,\n  Empty,\n} from 'antd';\nimport { InsertRowBelowOutlined } from '@ant-design/icons';\n\nimport { IItem, IUser } from '../../reducers/interfaces';\nimport Item from '../../components/Item';\n\nexport interface IControl {\n  label: string,\n  onClick: (item: IItem) => void;\n  condition?: (item: IItem) => boolean;\n  isAdmin?: boolean;\n}\n\ninterface IItemsListProps {\n  items: IItem[];\n  uid?: string;\n  currentUser: IUser | null;\n  controls?: IControl[];\n}\n\nclass ItemsList extends Component<IItemsListProps> {\n  getFooter = (item: IItem) => {\n    const { controls } = this.props;\n    if (!controls) return;\n\n    const controlButtons = controls\n      .map(({ label, onClick, isAdmin, condition }: IControl) => {\n        if (condition && !condition(item)) return false;\n\n        return (\n          <Menu.Item key={label}>\n            <Button onClick={() => onClick && onClick(item)}>\n              {label}\n            </Button>\n          </Menu.Item>\n        );\n      }).filter(Boolean);\n    if (controlButtons.length === 0) return;\n\n    return (\n      <Dropdown\n        overlay={<Menu>{controlButtons}</Menu>}\n        trigger={['click']}\n      >\n        <Button>\n          <InsertRowBelowOutlined/>\n        </Button>\n      </Dropdown>\n    )\n  };\n\n  render = () => {\n    const { items, uid } = this.props;\n\n    if (!items || items.length === 0) {\n      return (\n        <Empty description=\"Нет предметов\"/>\n      )\n    }\n\n    return (\n      <div className=\"items-body\">\n        {items.map((item: IItem) => (\n          <Item\n            key={item.id + item.time}\n            item={item}\n            footer={this.getFooter(item)}\n            uid={uid}\n          />\n        ))}\n      </div>\n    )\n  }\n}\n\nexport default ItemsList;\n","import React, { Component } from 'react';\nimport {\n  Switch,\n  Radio,\n  Card,\n} from 'antd';\n\nimport Loader from '../../components/Loader';\nimport { RouteComponentProps } from \"react-router\";\nimport { IItem, ItemType } from \"../../reducers/interfaces\";\n\nexport interface IItemsTableProps extends RouteComponentProps {\n  loading: boolean;\n  items: IItem[];\n}\n\nexport interface IItemsTableState {\n  searchString: string;\n  filters: { [key: string]: boolean };\n  showApproved: boolean;\n  showNotApproved: boolean;\n}\n\nclass ItemsTable<P extends IItemsTableProps, S extends IItemsTableState> extends Component<P, S> {\n  defaultState = {\n    searchString: '',\n    showApproved: true,\n    showNotApproved: false,\n    filters: {\n      'weapon': true,\n      'usable': true,\n      'wearable': true,\n      'junk': true,\n      'ammo': true,\n      'note': true,\n      'key': true,\n      'misc': true,\n    },\n  };\n\n  get items() {\n    const { searchString, filters, showApproved, showNotApproved } = this.state;\n\n    const _searchString = searchString.toLowerCase();\n    return this\n      .props\n      .items\n      .filter((item: IItem) => {\n        const { name, description, effect, type, approved } = item;\n        return (\n          (name && name.toLowerCase().indexOf(_searchString) > -1)\n          || (description && description.toLowerCase().indexOf(_searchString) > -1)\n          || (effect && effect.toLowerCase().indexOf(_searchString) > -1)\n        ) && (\n          // @ts-ignore\n          filters[type]\n        ) && (\n          (showApproved && approved === true)\n          || (showNotApproved && approved === false)\n        )\n      })\n  }\n\n  getFilters = (state: IItemsTableState) => {\n    const { showNotApproved, showApproved, filters } = state;\n\n    const getButton = (name: ItemType, label: string) => (\n      <div\n        tabIndex={0}\n        className=\"items-approved-button\"\n        // @ts-ignore\n        onClick={() => {\n          console.log(name, filters[name]);\n          this.setState({ filters: { ...filters, [name]: !filters[name] } })\n        }}\n      >\n        <Switch\n          checked={\n            // @ts-ignore\n            filters[name]\n          }/>\n        {label}\n      </div>\n    );\n\n    return (\n      <Radio.Group\n        defaultValue={undefined}\n        style={{ display: 'flex', flexDirection: 'column' }}\n      >\n        {getButton('weapon', 'Оружие')}\n        {getButton('usable', 'Используемое')}\n        {getButton('wearable', 'Одежда/Броня')}\n        {getButton('ammo', 'Патроны')}\n        {getButton('junk', 'Мусор')}\n        {getButton('note', 'Записки')}\n        {getButton('key', 'Ключи')}\n        {getButton('misc', 'Прочее')}\n        <div tabIndex={0} className=\"items-approved-button\"\n             onClick={() => this.setState({ showApproved: !showApproved })}>\n          <Switch checked={showApproved}/>Подтвержденные\n        </div>\n        <div tabIndex={0} className=\"items-approved-button\"\n             onClick={() => this.setState({ showNotApproved: !showNotApproved })}>\n          <Switch checked={showNotApproved}/>Не Подтвержденные\n        </div>\n      </Radio.Group>\n    )\n  };\n\n  getPageControls: (() => JSX.Element[]) = () => [];\n  getHeader: ((items: IItem[]) => JSX.Element) = () => {\n    return (\n      <div className=\"items-controls\">\n        {this.getPageControls()}\n      </div>\n    )\n  };\n\n  getContent: ((items: IItem[]) => JSX.Element) = () => <React.Fragment/>;\n  getFooter: ((items: IItem[]) => JSX.Element) = () => <React.Fragment/>;\n  getTitle: () => string | undefined | false = () => undefined;\n\n  render = () => {\n    const { loading } = this.props;\n    const items = this.items;\n\n    return (\n      <Card className=\"items\" title={this.getTitle()}>\n        <Loader loading={loading}/>\n        {this.getHeader(items)}\n        {this.getContent(items)}\n        {this.getFooter(items)}\n      </Card>\n    )\n  }\n}\n\nexport default ItemsTable;\n","import React, { useState } from 'react';\nimport { InputNumber, Modal, Slider } from 'antd';\nimport { InputNumberProps } from 'antd/lib/input-number';\nimport { ModalFuncProps } from 'antd/lib/modal';\n\nimport { IItem } from '../reducers/interfaces';\n\ninterface IAmountModalProps {\n  item: IItem;\n  inputProps?: InputNumberProps;\n  modalProps?: ModalFuncProps;\n  onSubmit?: (value: number) => void;\n  onChange?: (value?: number | [number, number]) => void;\n  max?: number;\n}\n\nexport const AmountModal: (props: IAmountModalProps) => JSX.Element = (props) => {\n  const { item, inputProps, onChange, max } = props;\n\n  const [amount, setAmount] = useState(1);\n  const onInnerChange = (value?: number | [number, number]) => {\n    if (typeof value === 'number') {\n      setAmount(value || 1);\n      onChange && onChange(value || 1);\n    }\n  };\n\n  return (\n    <>\n      <InputNumber\n        defaultValue={1}\n        value={amount}\n        min={1}\n        max={max || item.amount}\n        onChange={onInnerChange}\n        {...(inputProps || {})}\n      />\n      <Slider\n        value={amount}\n        defaultValue={1}\n        min={1}\n        max={max || item.amount}\n        onChange={onInnerChange}\n        dots={(max || item.amount || 10) <= 12}\n      />\n    </>\n  )\n};\n\n/**\n * This function creates modal for choosing item quantity.\n * I didn't made a simple modal, because I would need to make\n * a lot of state actions in order to pass all needed data\n */\nconst amountModal: (props: IAmountModalProps) => void = (props) => {\n  const { item, onSubmit, modalProps, max } = props;\n  const enough = (max && max >= 2) || (!max && item.amount && item.amount >= 2);\n  const title = enough\n    ? `Сколько? (макс. ${max || item.amount}шт)`\n    : 'Уверены?';\n\n  let amount = 1;\n\n  Modal.confirm({\n    title: title,\n    className: 'amount-modal',\n    content: enough && (\n      <AmountModal\n        {...props}\n        onChange={(value?: number | [number, number]) => {\n          if (typeof value === 'number') amount = value;\n        }}\n      />\n    ),\n    onOk: (close) => {\n      onSubmit && onSubmit(amount);\n      close();\n    },\n    okText: 'Готово',\n    cancelText: 'Отмена',\n    maskClosable: true,\n    centered: true,\n    ...(modalProps || {}),\n  });\n};\n\nexport default amountModal;\n","import React, { ChangeEvent } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Button,\n  Input,\n  Dropdown,\n  InputNumber,\n  Tooltip,\n  Modal,\n} from 'antd';\nimport { FilterOutlined } from '@ant-design/icons';\n\nimport '../../styles/items.scss';\nimport actions from '../../reducers/actions';\nimport { IDeletedItemData, IItem, IState, IUser } from '../../reducers/interfaces';\nimport ItemCreator from './ItemCreator';\nimport ItemsList, { IControl } from '../ItemsTable/ItemsList';\nimport ItemsTable, { IItemsTableProps, IItemsTableState } from \"../ItemsTable\";\nimport amountModal from \"../../components/AmountModal\";\n\nexport interface IItemsProps extends IItemsTableProps {\n  user: IUser | null;\n  uid: string;\n  currentUser: IUser | null;\n  deletingItemData: IDeletedItemData;\n}\n\ninterface IItemsState extends IItemsTableState {\n  creatingItem: boolean;\n  editingItem: IItem | null;\n  itemsToLoad: number;\n}\n\nexport class Items extends ItemsTable<IItemsProps, IItemsState> {\n  state = {\n    ...this.defaultState,\n    creatingItem: false,\n    editingItem: null,\n    itemsToLoad: 99,\n  };\n\n  componentDidMount = () => {\n    actions.getItems({});\n  };\n\n  getPageControls = () => [\n    <Button\n      key=\"creator\"\n      onClick={() => this.toggleCreatingItem(true)}\n    >\n      Создать предмет\n    </Button>,\n    <Input\n      key=\"search\"\n      placeholder=\"Поиск предмета\"\n      onChange={(e: ChangeEvent<HTMLInputElement>) => this.setState({ searchString: e.currentTarget.value })}\n      allowClear\n    />,\n    <Dropdown\n      key=\"filters\"\n      overlay={this.getFilters(this.state)}\n      trigger={['click']}\n    >\n      <Button>\n        <FilterOutlined/>\n      </Button>\n    </Dropdown>,\n    <Tooltip\n      key=\"load-amount\"\n      title=\"Кол-во загружаемых предметов за раз\"\n    >\n      <InputNumber\n        value={this.state.itemsToLoad}\n        min={1}\n        max={99}\n        onChange={(itemsToLoad?: number) => this.setState({ itemsToLoad: itemsToLoad || 1 })}\n      />\n    </Tooltip>\n  ];\n\n  cardControls: IControl[] = [\n    {\n      label: 'Взять',\n      onClick: (item: IItem) => amountModal({\n        item: item,\n        max: 100,\n        onSubmit: (amount: number) =>\n          actions.giveItem({\n            id: item.id,\n            uid: this.props.uid,\n            itemType: item.type,\n            amount,\n          })\n      }),\n      condition: (item: IItem) => item.approved && Boolean(this.props.currentUser && this.props.currentUser.isAdmin)\n    },\n    {\n      label: 'Редактировать',\n      onClick: (item: IItem) => this.toggleEditingItem(item),\n      condition: (item: IItem) => Boolean((this.props.uid === item.author && !item.approved) || (this.props.currentUser && this.props.currentUser.isAdmin))\n    },\n    {\n      label: 'В консоль',\n      onClick: console.log,\n      condition: () => Boolean(this.props.currentUser && this.props.currentUser.isAdmin)\n    },\n    {\n      label: 'Удалить',\n      onClick: (item: IItem) => this.deleteModal(item),\n      condition: (item: IItem) => Boolean((this.props.uid === item.author && !item.approved) || (this.props.currentUser && this.props.currentUser.isAdmin))\n    },\n  ];\n\n  toggleCreatingItem = (creatingItem: boolean = !this.state.creatingItem) =>\n    this.setState({ creatingItem });\n\n  toggleEditingItem = (item?: IItem | null) =>\n    this.setState({ editingItem: item || null });\n\n  onCreateItem = (item: IItem) => {\n    actions.setItem({ item });\n    this.toggleCreatingItem(false);\n    this.toggleEditingItem(null);\n  };\n\n  getCreators = () => {\n    const { creatingItem, editingItem } = this.state;\n    const { currentUser } = this.props;\n    const isAdmin = !!(currentUser && currentUser.isAdmin);\n\n    return (\n      <>\n        <ItemCreator\n          visible={creatingItem}\n          onClose={() => this.toggleCreatingItem(false)}\n          onSubmit={this.onCreateItem}\n          isAdmin={isAdmin}\n        />\n        <ItemCreator\n          visible={!!editingItem}\n          onClose={() => this.toggleEditingItem(null)}\n          onSubmit={this.onCreateItem}\n          item={editingItem || undefined}\n          isAdmin={isAdmin}\n        />\n      </>\n    )\n  };\n\n  deleteModal: (item: IItem) => void = (item: IItem) => Modal.confirm({\n    title: 'Удалить',\n    content: 'Это действие невозможно отменить. Вы уверены?',\n    maskClosable: true,\n    okText: 'Удалить',\n    cancelText: 'Отмена',\n    onOk: (close) => {\n      actions.deleteItem({ id: item.id });\n      close();\n    }\n  });\n\n  getContent = (items: IItem[]) => {\n    const { currentUser } = this.props;\n    return (\n      <ItemsList\n        items={items}\n        currentUser={currentUser}\n        controls={this.cardControls}\n      />\n    )\n  };\n\n  getDeletingModal = () => {\n    const { deletingItemData, loading } = this.props;\n    const { itemId, usersChecked, messagesCleared, messagesChecked, deleted, usersCleared, done } = deletingItemData;\n    return itemId && (\n      <div className=\"item-deleting-modal\">\n        <div>ID предмета: {itemId}</div>\n        <div>Удалён из списка предметов: {deleted ? 'готово' : 'в процессе'}</div>\n        <div>Проверено сообщений: {messagesChecked}</div>\n        <div>Очищено сообщений: {messagesCleared}</div>\n        <div>Проверено пользователей: {usersChecked}</div>\n        <div>Очищено пользователей: {usersCleared}</div>\n        <Button\n          onClick={() => actions.deleteItemProgress({ field: 'itemId', value: '' })}\n          disabled={!done || loading}\n        >\n          Готово\n        </Button>\n        <button\n          className=\"secret\"\n          onClick={() => actions.deleteItemProgress({ field: 'itemId', value: '' })}\n          disabled={loading}\n        />\n      </div>\n    )\n  };\n\n  getTitle = () => !this.props.loading && `Список предметов. Количество: ${this.props.items.length}`;\n\n  getFooter = (items: IItem[]): JSX.Element => {\n    const { itemsToLoad } = this.state;\n    const { loading } = this.props;\n    return (\n      <>\n        {this.getCreators()}\n        {this.getDeletingModal()}\n        {!loading && (\n          <Button\n            className=\"items-load-button\"\n            onClick={() => actions.getMoreItems({ amount: itemsToLoad, lastItem: items[items.length - 1] })}\n          >\n            Загрузить {itemsToLoad}шт\n          </Button>\n        )}\n      </>\n    )\n  };\n}\n\nconst mapStateToProps = (state: IState) => {\n  const { loading, currentUser, uid, items, deletingItemData } = state;\n\n  return {\n    loading,\n    currentUser,\n    uid,\n    items,\n    deletingItemData,\n  };\n};\n\nexport default connect(mapStateToProps)(Items);\n","import React, { Component } from 'react';\nimport { Menu } from 'antd';\nimport '../styles/active-users.scss';\n\nimport { IUsers, IUser, IState } from '../reducers/interfaces';\nimport { connect } from \"react-redux\";\nimport actions from \"../reducers/actions\";\nimport { getFullTime, isOnline } from \"../helpers/utils\";\nimport Avatar from './Avatar';\n\ninterface IActiveUsersListProps {\n  activeUsers: string[];\n  uid: string;\n  loading: boolean;\n  users: IUsers;\n  onClick: (user: IUser) => void;\n}\n\nclass ActiveUsersList extends Component<IActiveUsersListProps> {\n  componentDidMount = () => {\n    actions.getUsersActivity({});\n  };\n\n  componentDidUpdate = () => {\n    const { activeUsers, users, loading } = this.props;\n\n    if (!loading && activeUsers.length > 0) {\n      activeUsers.forEach((uid: string) => {\n        if (!users[uid])\n          actions.getUser({ uid });\n      });\n    }\n  };\n\n  render = () => {\n    const { activeUsers, users, onClick } = this.props;\n\n    const validUsers = activeUsers\n      .filter((uid: string) => users[uid] && users[uid].uid)\n      .map((uid: string) => users[uid]);\n\n    return (\n      <Menu className=\"active-users\">\n        {validUsers.map((user: IUser) => (\n          <div\n            className=\"active-users__item\"\n            key={user.uid}\n            onClick={() => onClick(user)}\n          >\n              <div className={`active-users__body ${isOnline(user.lastOnline) ? 'online' : ''}`}>\n                <Avatar\n                  avatar={user.avatar}\n                  nickname={user.nickname}\n                />\n                <div className=\"active-users__nickname\">\n                  {user.nickname || user.uid}\n                </div>\n              </div>\n              {user.lastOnline && (\n                <div className=\"active-users__online\">\n                  {getFullTime(user.lastOnline)}\n                </div>\n              )}\n          </div>\n        ))}\n      </Menu>\n    )\n  }\n}\n\nconst mapStateToProps = (state: IState) => {\n  const { usersActivity, uid, loading, users } = state;\n\n  return {\n    users,\n    activeUsers: Object.keys(usersActivity),\n    uid,\n    loading,\n  }\n};\n\nexport default connect(mapStateToProps)(ActiveUsersList);\n","import React, { ChangeEvent } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Input,\n  Dropdown,\n  Button,\n  message as notify,\n  Modal,\n} from 'antd';\nimport { FilterOutlined } from '@ant-design/icons';\n\nimport { IInventory, IItem, IState, IUser } from '../../reducers/interfaces';\nimport actions from '../../reducers/actions';\nimport ItemsList, { IControl } from '../ItemsTable/ItemsList';\nimport ActiveUsersList from '../../components/ActiveUsersList';\nimport ItemsTable, { IItemsTableProps, IItemsTableState } from '../ItemsTable';\nimport amountModal from '../../components/AmountModal';\nimport { getItemName } from \"../../helpers/utils\";\n\ninterface IInventoryProps extends IItemsTableProps {\n  inventory: IInventory;\n  loading: boolean;\n  user: IUser | null;\n  uid: string;\n  items: IItem[];\n  currentUser: IUser | null;\n}\n\ninterface IInventoryState extends IItemsTableState {\n  passItem: IItem | null;\n}\n\nclass Inventory extends ItemsTable<IInventoryProps, IInventoryState> {\n  state = {\n    ...this.defaultState,\n    editingItem: null,\n    passItem: null,\n  };\n\n  componentDidMount = () => {\n    const { user, uid } = this.props;\n    if (!user && uid) {\n      actions.getUser({ uid });\n    }\n  };\n\n  getPageControls = () => [\n    <Input\n      key=\"search\"\n      placeholder=\"Поиск предмета\"\n      onChange={(e: ChangeEvent<HTMLInputElement>) => this.setState({ searchString: e.currentTarget.value })}\n      allowClear\n    />,\n    <Dropdown\n      key=\"filters\"\n      overlay={this.getFilters(this.state)}\n      trigger={['click']}\n    >\n      <Button>\n        <FilterOutlined/>\n      </Button>\n    </Dropdown>,\n    this.getPassModal(),\n  ];\n\n  getInventoryItems = (items: IItem[]) => {\n    const { inventory, loading } = this.props;\n\n    if (inventory && !loading) {\n      const inventoryItems = Object.values(inventory);\n      const loadedItems: IItem[] = [];\n      const notLoadedItems: string[] = [];\n\n      inventoryItems\n        .forEach((inventoryItem) => {\n          const { id } = inventoryItem;\n          const item = items.find((item: IItem) => item.id === id);\n          if (item) {\n            loadedItems.push({\n              ...item,\n              ...inventoryItem,\n            });\n          } else {\n            notLoadedItems.push(id);\n          }\n        });\n\n      if (notLoadedItems.length > 0) {\n        actions.getItemById({ id: notLoadedItems.shift() });\n      }\n\n      return loadedItems;\n    }\n\n    return [];\n  };\n\n  passItem = (item?: IItem | null) =>\n    this.setState({ passItem: item || null });\n\n  getPassModal = () => {\n    const { passItem } = this.state;\n    return (\n      <Modal\n        key=\"pass-modal\"\n        visible={!!passItem}\n        closable={false}\n      >\n        <ActiveUsersList onClick={(user: IUser) => {\n          if (passItem !== null) {\n            actions.passItem({\n              uid: this.props.uid,\n              // @ts-ignore\n              id: passItem.id,\n              to: user,\n              item: passItem,\n            });\n            this.passItem(null);\n          }\n        }}/>\n      </Modal>\n    )\n  };\n\n  getDeleteModalContent = (item: IItem) => (\n    <div>\n      <span>Это действие невозможно отменить. Вы уверены?</span>\n      <br/> <br/> <br/>\n      <Button\n        style={{ width: '-webkit-fill-available' }}\n        onClick={() => {\n          actions.removeItem({ id: item.id, uid: this.props.uid });\n          notify.success('Удалено');\n        }}\n      >Удалить один</Button>\n    </div>\n  );\n\n  cardControls: IControl[] = [\n    {\n      label: 'Показать',\n      onClick: (item: IItem) => amountModal({\n        item: item,\n        onSubmit: (amount: number) => actions.passItem({\n          id: item.id,\n          uid: this.props.uid,\n          demonstrate: true,\n          item: {\n            ...item,\n            amount,\n          }\n        })\n      })\n    },\n    {\n      label: 'Использовать',\n      onClick: (item: IItem) => Modal.confirm({\n        title: `Использовать ${getItemName(item, false)}?`,\n        onOk: (close) => {\n          actions.passItem({\n            id: item.id,\n            uid: this.props.uid,\n            item: {\n              ...item,\n              amount: 1,\n            },\n            use: true,\n          });\n          close();\n        },\n        okText: 'Да',\n        cancelText: 'Отмена',\n      }),\n      condition: (item: IItem) => item.type === 'usable',\n    },\n    {\n      label: 'Выбросить',\n      onClick: (item: IItem) => amountModal({\n        item: item,\n        onSubmit: (amount: number) => actions.passItem({\n          id: item.id,\n          uid: this.props.uid,\n          item: {\n            ...item,\n            amount,\n          },\n        })\n      }),\n    },\n    {\n      label: 'Передать',\n      onClick: (item: IItem) => amountModal({\n        item: item,\n        onSubmit: (amount: number) => this.passItem({ ...item, amount })\n      })\n    },\n    {\n      label: 'В консоль',\n      onClick: console.log,\n      condition: () => Boolean(this.props.currentUser && this.props.currentUser.isAdmin)\n    },\n    {\n      label: 'Убрать',\n      onClick: (item: IItem) => amountModal({\n        item: item,\n        onSubmit: (amount: number) =>\n          actions.removeItem({ id: item.id, uid: this.props.uid, amount })\n      }),\n      condition: () => Boolean(this.props.currentUser && this.props.currentUser.isAdmin)\n    },\n  ];\n\n  getTitle = () => !!this.props.user && `Инвентарь игрока ${this.props.user.nickname || this.props.user.uid}`;\n\n  getContent = (items: IItem[]) => {\n    const { currentUser, uid } = this.props;\n\n    return (\n      <ItemsList\n        uid={uid}\n        currentUser={currentUser}\n        items={this.getInventoryItems(items)}\n        controls={(currentUser && (currentUser.uid === uid || currentUser.isAdmin))\n          ? this.cardControls\n          : undefined\n        }\n      />\n    )\n  };\n}\n\nconst mapStateToProps = (state: IState, props: IInventoryProps) => {\n  const { loading, users, currentUser, items, messages, usersActivity } = state;\n\n  const uid = new URLSearchParams(props.match.params).get('uid') || state.uid || '0';\n  const user = users[uid];\n  if (user && !user.uid && uid) {\n    user.uid = uid;\n  }\n\n  const inventory = user ? user.inventory : {};\n\n  return {\n    loading,\n    uid,\n    items,\n    inventory,\n    user,\n    currentUser,\n    users,\n    messages,\n    usersActivity,\n  };\n};\n\nexport default connect(mapStateToProps)(Inventory);\n","export interface IField {\n  label: string;\n  full: string;\n  field: string;\n  formula?: string;\n  getBase?: (specials: { [key: string]: number }, stats: IStats) => number;\n\n}\n\nexport interface IStats {\n  level: number;\n  hpPerLevel: number;\n  exp: number;\n  carryWeight: number;\n  wounds: string;\n\n  healthPoints: number;\n  maxHealthPoints: number;\n  armorClass: ICharacteristic;\n  healingRate: number;\n  resistance: number;\n  actionPoints: number;\n  sequence: number;\n  meleeDamage: number;\n  criticalChance: number;\n  skillPoints: number;\n  spentSkillPoints: number;\n}\n\nexport interface ICharacteristic {\n  change: number;\n  base: number;\n  total: number;\n}\n\nexport interface ICharacter {\n  special: {\n    strength: ICharacteristic;\n    perception: ICharacteristic;\n    endurance: ICharacteristic;\n    charisma: ICharacteristic;\n    intelligence: ICharacteristic;\n    agility: ICharacteristic;\n    luck: ICharacteristic;\n  };\n  skills: {\n    smallGuns: ICharacteristic;\n    bigGuns: ICharacteristic;\n    energyGuns: ICharacteristic;\n    unarmed: ICharacteristic;\n    meleeWeapons: ICharacteristic;\n    medicine: ICharacteristic;\n    sneak: ICharacteristic;\n    lockpick: ICharacteristic;\n    steal: ICharacteristic;\n    traps: ICharacteristic;\n    science: ICharacteristic;\n    repair: ICharacteristic;\n    speech: ICharacteristic;\n    barter: ICharacteristic;\n    survival: ICharacteristic;\n  };\n  stats: IStats;\n  bio: string;\n}\n\nexport const initialCharacteristic = {\n  change: 0,\n  base: 0,\n  total: 0,\n};\n\nexport const initialCharacter: ICharacter = {\n  special: {\n    strength: initialCharacteristic,\n    perception: initialCharacteristic,\n    endurance: initialCharacteristic,\n    charisma: initialCharacteristic,\n    intelligence: initialCharacteristic,\n    agility: initialCharacteristic,\n    luck: initialCharacteristic,\n  },\n  skills: {\n    smallGuns: initialCharacteristic,\n    bigGuns: initialCharacteristic,\n    energyGuns: initialCharacteristic,\n    unarmed: initialCharacteristic,\n    meleeWeapons: initialCharacteristic,\n    medicine: initialCharacteristic,\n    sneak: initialCharacteristic,\n    lockpick: initialCharacteristic,\n    steal: initialCharacteristic,\n    traps: initialCharacteristic,\n    science: initialCharacteristic,\n    repair: initialCharacteristic,\n    speech: initialCharacteristic,\n    barter: initialCharacteristic,\n    survival: initialCharacteristic,\n  },\n  stats: {\n    level: 0,\n    hpPerLevel: 0,\n    exp: 0,\n    carryWeight: 0,\n    wounds: '',\n\n    maxHealthPoints: 0,\n    healthPoints: 0,\n    armorClass: initialCharacteristic,\n    healingRate: 0,\n    resistance: 0,\n    actionPoints: 0,\n    sequence: 0,\n    meleeDamage: 0,\n    criticalChance: 0,\n    skillPoints: 0,\n    spentSkillPoints: 0,\n  },\n  bio: '',\n};\n\nexport const special: IField[] = [\n  {\n    label: 'ST',\n    full: 'Сила',\n    field: 'strength',\n  },\n  {\n    label: 'PE',\n    full: 'Восприятие',\n    field: 'perception',\n  },\n  {\n    label: 'EN',\n    full: 'Выносливость',\n    field: 'endurance',\n  },\n  {\n    label: 'CH',\n    full: 'Харизма',\n    field: 'charisma',\n  },\n  {\n    label: 'IN',\n    full: 'Интеллект',\n    field: 'intelligence',\n  },\n  {\n    label: 'AG',\n    full: 'Ловкость',\n    field: 'agility',\n  },\n  {\n    label: 'LK',\n    full: 'Удача',\n    field: 'luck',\n  },\n];\n\nexport const skills: IField[] = [\n  {\n    label: 'Small Guns',\n    full: 'Оружие',\n    formula: '5+(4*AG)',\n    field: 'smallGuns',\n    getBase: (s) => 5 + (4 * s.ag),\n  },\n  {\n    label: 'Big Guns',\n    full: 'Большое оружие',\n    formula: '(2*AG)',\n    field: 'bigGuns',\n    getBase: (s) => (2 * s.ag),\n  },\n  {\n    label: 'Energy Guns',\n    full: 'Энергетическое оружие',\n    formula: '(2*AG)',\n    field: 'energyGuns',\n    getBase: (s) => (2 * s.ag),\n  },\n  {\n    label: 'Unarmed',\n    full: 'Без оружия',\n    formula: '(30+(2*(AG+ST)))',\n    field: 'unarmed',\n    getBase: (s) => 30 + (2 * (s.ag + s.st)),\n  },\n  {\n    label: 'Melee',\n    full: 'Холодное оружие',\n    formula: '20+(2*(AG+ST))',\n    field: 'meleeWeapons',\n    getBase: (s) => 20 + (2 * (s.ag + s.st)),\n  },\n  {\n    label: 'Medicine',\n    full: 'Медицина',\n    formula: '5+(PE+EN+(3*AG))',\n    field: 'medicine',\n    getBase: (s) => 5 + (s.pe + s.en + (3 * s.ag)),\n  },\n  {\n    label: 'Sneak',\n    full: 'Скрытность',\n    formula: '5+(3*AG)',\n    field: 'sneak',\n    getBase: (s) => 5 + (3 * s.ag),\n  },\n  {\n    label: 'Lockpick',\n    full: 'Взлом',\n    formula: '10+(PE+AG)',\n    field: 'lockpick',\n    getBase: (s) => 10 + (s.pe + s.ag),\n  },\n  {\n    label: 'Steal',\n    full: 'Кража',\n    formula: '(3+AG)',\n    field: 'steal',\n    getBase: (s) => 3 + s.ag,\n  },\n  {\n    label: 'Traps',\n    full: 'Ловушки',\n    formula: '10+(PE+AG)',\n    field: 'traps',\n    getBase: (s) => 10 + (s.pe + s.ag),\n  },\n  {\n    label: 'Science',\n    full: 'Наука',\n    formula: '(4*IN)',\n    field: 'science',\n    getBase: (s) => 4 * s.in,\n  },\n  {\n    label: 'Repair',\n    full: 'Ремонт',\n    formula: '(3*IN)',\n    field: 'repair',\n    getBase: (s) => 3 * s.in,\n  },\n  {\n    label: 'Speech',\n    full: 'Красноречие',\n    formula: '(5*CH)',\n    field: 'speech',\n    getBase: (s) => 5 * s.ch,\n  },\n  {\n    label: 'Barter',\n    full: 'Бартер',\n    formula: '(4*CH)',\n    field: 'barter',\n    getBase: (s) => 4 * s.ch,\n  },\n  {\n    label: 'Survival',\n    full: 'Выживание',\n    formula: '(2*(EN+IN))',\n    field: 'survival',\n    getBase: (s) => 2 * (s.en + s.in),\n  },\n];\n\nexport const stats: IField[] = [\n  {\n    label: 'Level',\n    full: 'Уровень',\n    field: 'level',\n    getBase: (_, stats) => (Math.sqrt(((stats.exp / 500) * 4) + 1) + 1) / 2,\n  },\n  {\n    label: 'HP/Level',\n    full: 'ОЗ/Уровень',\n    field: 'hpPerLevel',\n    getBase: (s) => 3 + Math.floor(s.en / 2),\n  },\n  {\n    label: 'Experience',\n    full: 'Опыт',\n    field: 'exp',\n  },\n  {\n    label: 'Carry Weight',\n    full: 'Переносимый вес',\n    field: 'carryWeight',\n    getBase: (s) => 25 + (25 * s.st),\n  },\n  {\n    label: 'Wounds',\n    full: 'Раны',\n    field: 'wounds',\n  },\n];\n\nexport const subStats: IField[] = [\n  {\n    label: 'Max HP',\n    full: 'Макс. Очки Здоровья (ОЗ)',\n    field: 'maxHealthPoints',\n    getBase: (s, stats) => (15 + (s.st + (2 * s.en))) + (stats.hpPerLevel * stats.level),\n  },\n  {\n    label: 'Health Points',\n    full: 'Очки Здоровья (ОЗ)',\n    field: 'healthPoints',\n  },\n  {\n    label: 'КБ',\n    full: 'Класс Брони',\n    field: 'armorClass',\n    getBase: (s) => s.ag,\n  },\n  {\n    label: 'СЛ',\n    full: 'СамоЛечение',\n    field: 'healingRate',\n    getBase: (s) => Math.floor(s.en / 3),\n  },\n  {\n    label: 'СП',\n    full: 'СоПротивление',\n    field: 'resistance',\n    getBase: (s) => 5 * s.en,\n  },\n  {\n    label: 'ОД',\n    full: 'Очки Действий',\n    field: 'actionPoints',\n    getBase: (s) => 5 + Math.ceil(s.ag / 2),\n  },\n  {\n    label: 'ИЦ',\n    full: 'ИниЦиатива',\n    field: 'sequence',\n    getBase: (s) => 2 * s.pe,\n  },\n  {\n    label: 'РУ',\n    full: 'Рукопашный Урон',\n    field: 'meleeDamage',\n    getBase: (s) => Math.max(1, s.st - 5),\n  },\n  {\n    label: 'ШК',\n    full: 'Шанс Крита',\n    field: 'criticalChance',\n    getBase: (s) => s.lk,\n  },\n  {\n    label: 'ОН',\n    full: 'Очки Навыков',\n    field: 'skillPoints',\n    getBase: (s, stats) => ((stats.level - 1) * (5 + (2 * s.in)) - stats.spentSkillPoints),\n  },\n];\n\nexport interface ICharacterChanges {\n  label: string;\n  full: string;\n  before: number | string | ICharacteristic;\n  after: number | string | ICharacteristic;\n}\n\nexport const getConfigByField = (findField: string): IField | undefined  => {\n  return [...special, ...skills, ...stats, ...subStats].find(({ field }) => field === findField);\n};\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Form,\n  Card,\n  Input,\n  InputNumber,\n  Tooltip,\n  Empty,\n  Spin,\n  Button,\n  Popconfirm,\n  message as notify,\n} from 'antd';\nimport { Callbacks, Store } from 'rc-field-form/lib/interface';\nimport { RouteComponentProps } from 'react-router';\nimport { diff } from 'deep-object-diff';\n\nimport '../../styles/character.scss';\nimport { IState, IUser } from '../../reducers/interfaces';\nimport {\n  initialCharacter,\n  special as configSpecial,\n  skills as configSkills,\n  stats as configStats,\n  subStats as configSubStats,\n  ICharacteristic,\n  ICharacter,\n  IStats,\n  getConfigByField,\n  IField,\n  ICharacterChanges,\n} from './config';\nimport actions from '../../reducers/actions';\n\ninterface ICharacterProps extends RouteComponentProps {\n  loading: boolean;\n  user: IUser | null;\n  hasRight: boolean;\n  uid: string;\n  currentUser: IUser | null;\n}\n\n/**\n * This component is most complex one in whole project\n * Beware of complex methods and data types\n */\nclass Character extends Component<ICharacterProps, ICharacter> {\n  state = initialCharacter;\n\n  componentDidMount = () => {\n    const { user, uid } = this.props;\n    if (!user) {\n      actions.getUser({ uid });\n    }\n  };\n\n  getSpecial = () => {\n    const { hasRight } = this.props;\n\n    return (\n      <Card className=\"char-special\">\n        <div className=\"char-special-item\">\n          <span className=\"char-special-label\"/>\n          <div className=\"char-special-input total\">\n            Total\n          </div>\n          <div className=\"char-special-input\">\n            +/-\n          </div>\n          <div className=\"char-special-input\">\n            Base\n          </div>\n        </div>\n        {configSpecial.map(({ label, full, field }) => (\n          <div\n            key={label}\n            className=\"char-special-item\"\n          >\n            <Tooltip title={full}>\n              <span className=\"char-special-label\">{label}</span>\n            </Tooltip>\n            <Form.Item name={['special', field, 'total']}>\n              <Input\n                className=\"char-special-input total\"\n                readOnly\n                min={0}\n                max={9}\n                disabled={!hasRight}\n              />\n            </Form.Item>\n            <Form.Item name={['special', field, 'change']}>\n              <InputNumber\n                className=\"char-special-input\"\n                min={0}\n                max={9}\n                disabled={!hasRight}\n              />\n            </Form.Item>\n            <Form.Item name={['special', field, 'base']}>\n              <InputNumber\n                className=\"char-special-input\"\n                min={0}\n                max={9}\n                disabled={!hasRight}\n              />\n            </Form.Item>\n          </div>\n        ))}\n      </Card>\n    )\n  };\n\n\n  getSkills = () => {\n    const { hasRight } = this.props;\n\n    return (\n      <Card className=\"char-skills\">\n        <div className=\"char-skills-item\">\n          <span className=\"char-skills-label\"/>\n          <div className=\"char-skills-input total\">\n            Total\n          </div>\n          <div className=\"char-skills-input\">\n            +/-\n          </div>\n          <div className=\"char-skills-input\">\n            Base\n          </div>\n        </div>\n        {configSkills.map(({ label, full, formula, field }) => (\n          <div\n            key={field}\n            className=\"char-skills-item\"\n          >\n            <Tooltip title={full}>\n              <span className=\"char-skills-label\">{label}</span>\n            </Tooltip>\n            <Form.Item name={['skills', field, 'total']}>\n              <Input\n                className=\"char-skills-input\"\n                readOnly\n                disabled={!hasRight}\n              />\n            </Form.Item>\n            <Form.Item name={['skills', field, 'change']}>\n              <InputNumber\n                className=\"char-skills-input\"\n                disabled={!hasRight}\n                min={1}\n                max={95}\n              />\n            </Form.Item>\n            <Tooltip title={formula}>\n              <Form.Item name={['skills', field, 'base']}>\n                <Input\n                  className=\"char-skills-input\"\n                  readOnly\n                  disabled={!hasRight}\n                />\n              </Form.Item>\n            </Tooltip>\n          </div>\n        ))}\n      </Card>\n    )\n  };\n\n  getStats = () => {\n    const { hasRight } = this.props;\n\n    return (\n      <Card className=\"char-stats\">\n        {configStats.map(({ label, full, field, getBase }) => (\n          <div\n            key={field}\n            className=\"char-stats-item\"\n          >\n            <Tooltip title={full}>\n              <span className=\"char-stats-label\">{label}</span>\n            </Tooltip>\n            <Form.Item name={['stats', field]}>\n              {field === 'wounds'\n                ? (\n                  <Input.TextArea\n                    className=\"char-stats-input\"\n                    disabled={!hasRight}\n                  />\n                ) : (\n                  !!getBase\n                    ? (\n                      <Input\n                        className=\"char-stats-input\"\n                        readOnly\n                        disabled={!hasRight}\n                      />\n                    ) : (\n                      <InputNumber\n                        className=\"char-stats-input\"\n                        min={1}\n                        max={Number.MAX_SAFE_INTEGER}\n                        disabled={!hasRight}\n                      />\n                    )\n                )}\n            </Form.Item>\n          </div>))}\n      </Card>\n    )\n  };\n\n  getMainStats = () => {\n    const { hasRight } = this.props;\n\n    return (\n      <Card className=\"char-main-stats\">\n        <div className=\"char-main-stats-health\">\n          <div className=\"char-main-stats-hp\">\n            <span className=\"char-main-stats-hp-label\">Очки Здоровья (ОЗ)</span>\n            <div className=\"char-main-stats-hp-body\">\n              <Form.Item name={['stats', 'healthPoints']}>\n                <InputNumber\n                  max={this.state.stats.maxHealthPoints || undefined}\n                  min={-Math.floor(this.state.stats.maxHealthPoints / 2)}\n                  disabled={!hasRight}\n                />\n              </Form.Item>\n              /\n              <Form.Item name={['stats', 'maxHealthPoints']}>\n                <Input\n                  readOnly\n                  disabled={!hasRight}\n                />\n              </Form.Item>\n            </div>\n          </div>\n          <div className=\"char-main-stats-ap-wrapper\">\n            <div className=\"char-main-stats-ap\">\n              <Tooltip title=\"Класс Брони (КБ)\">\n                <div className=\"char-main-stats-ap-total\">\n                  КБ\n                </div>\n              </Tooltip>\n              <div className=\"char-main-stats-ap-change\">\n                +/-\n              </div>\n              <div className=\"char-main-stats-ap-base\">\n                Base\n              </div>\n            </div>\n            <div className=\"char-main-stats-ap\">\n              <Form.Item name={['stats', 'armorClass', 'total']}>\n                <Input\n                  className=\"char-main-stats-ap-total\"\n                  readOnly\n                  disabled={!hasRight}\n                />\n              </Form.Item>\n              <Form.Item name={['stats', 'armorClass', 'change']}>\n                <InputNumber\n                  className=\"char-main-stats-ap-change\"\n                  min={1}\n                  max={95}\n                  disabled={!hasRight}\n                />\n              </Form.Item>\n              <Form.Item name={['stats', 'armorClass', 'base']}>\n                <Input\n                  className=\"char-main-stats-ap-base\"\n                  readOnly\n                  disabled={!hasRight}\n                />\n              </Form.Item>\n            </div>\n          </div>\n        </div>\n        <div className=\"char-main-stats-info\">\n          {configSubStats.slice(3).map(({ label, full, field }) => (\n            <div\n              key={field}\n              className=\"char-main-stats-item\"\n            >\n              <Tooltip title={full}>\n                <span className=\"char-main-stats-item-label\">{label}</span>\n              </Tooltip>\n              <Form.Item name={['stats', field]}>\n                <Input\n                  className=\"char-main-stats-item-input\"\n                  readOnly\n                  disabled={!hasRight}\n                />\n              </Form.Item>\n            </div>\n          ))}\n        </div>\n      </Card>\n    )\n  };\n\n  onChange: Callbacks['onValuesChange'] = (value, char) => {\n    if (value.bio) {\n      this.setState({ bio: value.bio });\n    } else {\n      this.setState(this.processChar(value, char));\n    }\n  };\n\n  // TODO Needs refactor for sure\n  processChar = (value: Store, char: Store) => {\n    const { special, skills, stats, bio } = char;\n\n    if (!value.bio) {\n      const specialTotal: { [key: string]: number } = {};\n      configSpecial.forEach(({ field, label }) => {\n        // @ts-ignore\n        const value: ICharacteristic = special[field];\n        const total = Math.max(0, Math.min(9, value.base + value.change));\n        // @ts-ignore\n        special[field] = {\n          ...value,\n          total,\n        };\n        specialTotal[label.toLowerCase()] = total;\n      });\n\n      stats.spentSkillPoints = 0;\n      configSkills.forEach(({ field, getBase }) => {\n        // @ts-ignore\n        const value: ICharacteristic = skills[field];\n        const change = Math.max(1, value.change);\n        const base = Math.max(1, getBase ? getBase(specialTotal, stats) : 1);\n        const total = Math.max(1, Math.min(95, base + change));\n        // @ts-ignore\n        skills[field] = {\n          change,\n          base,\n          total,\n        };\n        stats.spentSkillPoints += (value.change - 1);\n      });\n\n      [...configStats, ...configSubStats].forEach(({ field, getBase }) => {\n        if (getBase) {\n          if (field === 'armorClass') {\n            const base = getBase(specialTotal, stats);\n            const change = stats[field].change;\n            stats[field] = {\n              change,\n              base,\n              total: change + base,\n            }\n          } else {\n            stats[field] = Math.floor(getBase(specialTotal, stats));\n          }\n        }\n      });\n    }\n\n    return {\n      special,\n      skills,\n      stats,\n      bio,\n    };\n  };\n\n  getChanges = (beforeChar: ICharacter, afterChar: ICharacter) => {\n    const before = diff(afterChar, beforeChar);\n    const after = diff(beforeChar, afterChar);\n\n    const changes: ICharacterChanges[] = [];\n\n    Object.entries(before).forEach(([name, characteristic]: [string, string | ICharacteristic | IStats]) => {\n      if (name === 'bio' && typeof characteristic === 'string') {\n        // @ts-ignore\n        changes.push({\n          label: 'Bio',\n          full: 'Биография',\n          before: characteristic,\n          // @ts-ignore\n          after: after[name],\n        });\n        return;\n      }\n\n      Object.entries(characteristic).forEach(([field, value]: [string, ICharacteristic]) => {\n        // @ts-ignore\n        const afterValue = after[name][field];\n        const config: IField | undefined = getConfigByField(field);\n        if (config) {\n          changes.push({\n            label: config.label,\n            full: config.full,\n            before: value,\n            after: afterValue,\n          });\n        }\n      })\n    });\n\n    return changes;\n  };\n\n  onSave = () => {\n    const { uid, user } = this.props;\n    const character = this.state;\n\n    if (!user) {\n      notify.error('Пользователь не загружен!');\n      return;\n    }\n\n    if (character.stats.skillPoints < 0) {\n      notify.error('Очки Нвыков (ОН) не могут быть отрицательными!');\n      return;\n    }\n\n    const changes = this.getChanges(user.character || initialCharacter, character);\n    if (changes.length === 0) {\n      notify.error('В персонаже ничего не изменилось');\n      return;\n    }\n\n    notify.success('Персонаж сохранён');\n    actions.setUser({\n      uid,\n      user: {\n        ...user,\n        character,\n      }\n    });\n    actions.sendMessage({\n      uid,\n      message: `Характеристики персонажа изменены`,\n      data: { characterChanges: changes }\n    });\n  };\n\n\n  render = () => {\n    const { user, hasRight } = this.props;\n\n    if (!user) {\n      return (\n        <Spin spinning>\n          <Empty description=\"Пользователь не загружен\"/>\n        </Spin>\n      );\n    }\n\n    return (\n      <Form\n        initialValues={user.character || initialCharacter}\n        onValuesChange={this.onChange}\n      >\n        <Card\n          className=\"char\"\n          title={`Персонаж игрока ${user.nickname || user.uid}`}\n          extra={\n            <Popconfirm\n              title=\"Применить изменения?\"\n              okText=\"Да\"\n              cancelText=\"Отмена\"\n              onConfirm={this.onSave}\n            >\n              <Button>Готово</Button>\n            </Popconfirm>\n          }\n        >\n          <div className=\"char-bio\">\n            <Form.Item name={['bio']}>\n              <Input.TextArea\n                disabled={!hasRight}\n                minLength={3}\n              />\n            </Form.Item>\n          </div>\n          <div>\n            {this.getMainStats()}\n          </div>\n          <div>\n            <div>\n              {this.getSpecial()}\n              {this.getStats()}\n            </div>\n            <div>\n              {this.getSkills()}\n            </div>\n          </div>\n        </Card>\n      </Form>\n    )\n  }\n}\n\nconst mapStateToProps = (state: IState, props: ICharacterProps) => {\n  const { loading, users, currentUser } = state;\n\n  const uid = new URLSearchParams(props.match.params).get('uid') || state.uid || '0';\n  const user = users[uid];\n  if (user && !user.uid && uid) {\n    user.uid = uid;\n  }\n\n  return {\n    loading,\n    user,\n    uid,\n    hasRight: (!!user && !!currentUser) && (currentUser.uid === user.uid || !!currentUser.isAdmin),\n    currentUser,\n  };\n};\n\nexport default connect(mapStateToProps)(Character);\n","import { ConnectedComponent } from 'react-redux';\n\nimport Chat from '../containers/Chat/index';\nimport Settings from '../containers/Settings';\nimport Logout from '../components/Logout';\nimport Items from '../containers/Items';\nimport Help from '../components/Help';\nimport Inventory from '../containers/Inventory';\nimport Character from '../containers/Character';\n\nexport interface IRoute {\n  path: string;\n  component: ConnectedComponent<any, any> | (() => JSX.Element);\n  exact?: boolean;\n}\n\nconst routes: IRoute[] = [\n  {\n    path: '/text-roleplay/chat',\n    component: Chat,\n  },\n  {\n    path: '/text-roleplay/:uid/settings',\n    component: Settings,\n    exact: true,\n  },\n  {\n    path: '/text-roleplay/:uid/inventory',\n    component: Inventory,\n    exact: true,\n  },\n  {\n    path: '/text-roleplay/inventory',\n    component: Inventory,\n    exact: true,\n  },\n  {\n    path: '/text-roleplay/:uid/character',\n    component: Character,\n    exact: true,\n  },\n  {\n    path: '/text-roleplay/character',\n    component: Character,\n    exact: true,\n  },\n  {\n    path: '/text-roleplay/settings',\n    component: Settings,\n    exact: true,\n  },\n  {\n    path: '/text-roleplay/items',\n    component: Items,\n  },\n  {\n    path: '/text-roleplay/help',\n    component: Help,\n  },\n  {\n    path: '/text-roleplay/logout',\n    component: Logout,\n  },\n];\n\nexport default routes;\n","import React from 'react';\nimport { Card } from 'antd';\n\nexport default () => (\n  <Card className=\"help\">\n    Чат для текстовой ролевой игры. Инвентарь, управление чатом, настройки персонажа, профиля.\n    <br/><br/>\n    <h1>Возможности</h1>\n    <pre>\n      - Отправлять в чат картинки из буфера обмена (ctrl + v) либо перетаскивая в поле ввода<br/>\n      - Увеличение картинки<br/>\n      - Вставка ссылок<br/>\n      - Вставка YouTube видео (полная ссылка, не youtu.be)<br/>\n      - Броски дайсов<br/>\n      - В одном сообщении может быть не больше 10-ти дайсов\n      - Кол-во дайсов в первой цифре. Не больше 10<br/>\n      - Буква \"д\" или \"d\" вторым символом<br/>\n      - Размер дайса во второй цифре. Только размера 4 6 8 10 12 и 20<br/>\n      - Примеры: 1д10, 2д20, 9d4<br/>\n      - При неправильном дайсе сообщение не будет отправлено<br/>\n      - Дайс можно писать в любом месте сообщения и сколько угодно раз<br/>\n      - При наведении на брошенный дайс можно увидеть полный результат<br/>\n      - Крит попадания и промахи слегка подсвечиваются зеленым и красным соответственно<br/>\n      - РП сообщение, если первым символом написать \"*\"<br/>\n      - Игроки онлайн имеют синюю обводку вокруг аватара<br/>\n      - При наведении на игрока показывается последний онлайн<br/>\n      - При клике на игрока открывается страница настроек<br/>\n      - Админы могут редактировать настройки других игроков<br/>\n      - Настройки имени и аватара<br/>\n      - Настройки применяются сразу после изменения (даже в процессе редактирования)<br/>\n      - Все пользователи видят изменения<br/>\n      - При наведении на время сообщения показывается его дата<br/>\n      - Сообщения от одного автора сгруппированы<br/>\n      - Предметы (создание, удаление, редактирование)<br/>\n      - Только админ может создавать предметы<br/>\n      - Удалять и редактировать можно только предметы созданные тобой же, либо если админ<br/>\n      - Фильтр по типу предмета<br/>\n      - Поиск одновременно по названию, описанию и эффекту предметов<br/>\n      - Вес и стоимость не показываются, если нулевая<br/>\n      - Количество не показывается, если предмет один<br/>\n      - Загрузка больше предметов по нажатию на кнопку (не сортированных)<br/>\n      - Выбор кол-во загружаемых предметов<br/>\n      - В верхнем левом углу дата последнего билда проекта. Появляется только при наведении курсора<br/>\n      - Инвентарь<br/>\n      - Админ может взять в инвентарь предметы из списка<br/>\n      - Предмет из инвентаря может быть показан другим в чате<br/>\n      - Предмет может быть использован, чем будет израсходован (1шт)<br/>\n      - Предмет можно выбросить в чат и любой игрок может его подобрать<br/>\n      - Передача предмета другим игрокам<br/>\n      - Можно зайти в чужой инвентарь без редактирования<br/>\n      - Лист персонажа<br/>\n      - Не активные характеристики персонажа расчитываются сами<br/>\n      - После подтверждения изменений персонажа, чат оповещается об изменениях<br/>\n      - Нельзя сохранить персонажа при отрицательных Очках Навыков<br/>\n      - Если получить сообщение, когда вкладка не активна - в названии появится \"(!)\"<br/>\n      - <br/>\n    </pre>\n\n    <h1>Баги/ошибки/исправления</h1>\n    <pre>\n      - Ссылки на гугл дают SameSite cookies предупреждение<br/>\n      - Решить, как попасть на чужую страницу инвентаря<br/>\n      - Сделать регистрацию с подтверждением аккаунта от админа<br/>\n      - Сделать lazy loading для подгрузки проекта только после регистрации<br/>\n      - Lazy loading для каждой основной страницы<br/>\n      - Нужна кнопка быстрого скролла в низ чата<br/>\n      - Загрузка аватара через буфер обмена<br/>\n      - Добавить подтверждение к отправке картинки<br/>\n      - Порезать контейнеры на файлы поменьше<br/>\n      - У подтвержденного предмета нельзя убрать статус подтвержденного<br/>\n      - Отрефакторить ItemCreator на форму<br/>\n      - <br/>\n    </pre>\n\n    <h1>Todo</h1>\n    <pre>\n      - Character page<br/>\n      - Effect cards?<br/>\n      - Local Notes<br/>\n      - Global notes<br/>\n      - Drawing<br/>\n      - <br/>\n    </pre>\n  </Card>\n)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Form,\n  Input,\n  Button,\n  Card,\n  Alert,\n} from 'antd';\n\nimport actions from '../reducers/actions';\nimport { IState } from '../reducers/interfaces';\n\ninterface ILoginProps {\n  loading: boolean;\n  error: Error | false;\n}\n\nconst Login = (props: ILoginProps) => {\n  const { error, loading } = props;\n\n  return (\n    <Card loading={loading}>\n      <Form\n        onFinish={(values) => actions.login(values)}\n      >\n        <Form.Item\n          label=\"Email\"\n          name=\"email\"\n          rules={[{ required: true, message: 'Введите e-mail!' }]}\n        >\n          <Input/>\n        </Form.Item>\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[{ required: true, message: 'Введите пароль!' }]}\n        >\n          <Input.Password/>\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n          >\n            Войти\n          </Button>\n        </Form.Item>\n      </Form>\n      {error && (\n        <Alert\n          type=\"error\"\n          message={error.message}\n        />\n      )}\n    </Card>\n  );\n};\n\nconst mapStateToProps = (state: IState) => {\n  const { loading, error } = state;\n\n  return { loading, error };\n};\n\nexport default connect(mapStateToProps)(Login);\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport routes, { IRoute } from '../configs/routes';\nimport Login from './Login';\nimport { IState } from '../reducers/interfaces';\n\ninterface IRouterProps {\n  isLoggedIn: boolean;\n}\n\nfunction Router(props: IRouterProps) {\n  if (!props.isLoggedIn) {\n    return (\n      <Switch>\n        <Route\n          path=\"*\"\n          component={Login}\n        />\n      </Switch>\n    )\n  }\n\n  return (\n    <Switch>\n      {\n        routes.map((value: IRoute) =>\n          <Route\n            key={value.path}\n            path={value.path}\n            component={value.component}\n            exact={value.exact || false}\n          />\n        )\n      }\n      <Redirect to=\"/text-roleplay/chat\"/>\n    </Switch>\n  );\n}\n\nexport default connect((state: IState) => ({ isLoggedIn: state.isLoggedIn }))(Router);\n","import { isOnline } from \"./utils\";\nimport actions from \"../reducers/actions\";\n\nconst listenForOnline = () => {\n  const callback = () => {\n    if (!isOnline(parseInt(localStorage.getItem('lastActivity') || '0') - 60000))\n      actions.updateLastOnline({});\n  };\n\n  [\n    'mousedown',\n    'mousemove',\n    'keydown',\n    'scroll',\n    'touchstart'\n  ].forEach((eventName) => {\n    document.addEventListener(eventName, callback, true);\n  });\n  callback();\n};\n\nlet blinking = false;\nexport const blinkTitle = () => {\n  if (blinking) return;\n  blinking = true;\n\n  const interval = setInterval(() => {\n    const title = document.head.querySelector('title');\n    if (title) {\n      title.innerText = title.innerText === 'TRP' ? '(!) TRP' : 'TRP';\n\n      if (!blinking || !document.hidden) {\n        title.innerText = 'TRP';\n        clearInterval(interval);\n        blinking = false;\n      }\n    }\n  }, 500);\n};\n\nexport const listenForActivity = () => {\n  listenForOnline();\n};\n","import React, { Component } from 'react';\nimport { BrowserRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { message } from 'antd';\nimport 'antd/dist/antd.css';\n\nimport Menu from './components/Menu';\nimport Router from './components/Router';\n\nimport './App.css';\nimport './styles/antd-dark.scss';\nimport './styles/components.scss';\nimport { listenForActivity } from './helpers/activity';\nimport { IState } from './reducers/interfaces';\nimport actions from \"./reducers/actions\";\n\n// @ts-ignore\nconst buildDate = (<div className=\"build-date\">build date {window.buildDate.replace('_', ' ')}</div>);\n\nclass App extends Component<{ redirect?: string; notify?: string }> {\n  componentDidMount = listenForActivity;\n\n  componentDidUpdate = () => {\n    const { notify, redirect } = this.props;\n\n    if (notify) {\n      message.info(notify);\n      actions.notifySuccess({});\n    }\n    if (redirect) {\n      actions.redirectSuccess({});\n    }\n  };\n\n  getRedirect = () => {\n    const { redirect } = this.props;\n    return redirect && <Redirect to={redirect}/>;\n  };\n\n  render = () => {\n    return (\n      <>\n        {buildDate}\n        <BrowserRouter>\n          {this.getRedirect()}\n          <Menu/>\n          <div className=\"app\">\n            <Router/>\n          </div>\n        </BrowserRouter>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: IState) => ({ redirect: state.redirect, notify: state.notify });\nexport default connect(mapStateToProps)(App);\n","import _firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nimport firebaseConfig from '../configs/firebase.json';\nimport actions from '../reducers/actions';\n\nconst firebase = _firebase.initializeApp(firebaseConfig);\nconst auth = firebase.auth();\nconst database = firebase.database();\n\nauth.onAuthStateChanged((user) => {\n  if (user) {\n    actions.loginSuccess({ user });\n    actions.getUser({ uid: user.uid, currentUser: true });\n  } else {\n    actions.logout({});\n  }\n});\n\nexport {\n  auth,\n  database,\n  firebase,\n}\n","import { AnyAction } from 'redux';\nimport { all, takeLatest } from 'redux-saga/effects';\n\nimport { auth } from '../helpers/firebase';\nimport actions from '../reducers/actions';\n\nfunction* login(action: AnyAction) {\n  const { email, password } = action;\n\n  try {\n    const user = yield auth.signInWithEmailAndPassword(email, password);\n    actions.loginSuccess({ user });\n    localStorage.setItem('user', JSON.stringify(user.user));\n    localStorage.setItem('uid', user.user.uid);\n  } catch (error) {\n    console.error(error);\n    if (error.code === 'auth/user-not-found') {\n      const user = yield auth.createUserWithEmailAndPassword(email, password);\n      actions.loginSuccess({ user });\n      localStorage.setItem('user', JSON.stringify(user.user));\n      localStorage.setItem('uid', user.uid);\n    } else {\n      actions.loginFail({ error });\n    }\n  }\n}\n\nfunction* logout() {\n  localStorage.removeItem('user');\n  localStorage.removeItem('uid');\n  localStorage.removeItem('loggedIn');\n  yield auth.signOut();\n}\n\nexport default function* watchForActions() {\n  yield all([\n    takeLatest('LOGIN', login),\n    takeLatest('LOGOUT', logout),\n  ])\n}\n","import { all, takeLatest } from 'redux-saga/effects';\n\nimport { database } from '../helpers/firebase';\nimport actions, { IPayload } from '../reducers/actions';\n\nfunction* setUser(payload: IPayload) {\n  const { uid, user } = payload;\n\n  yield database\n    .ref('users')\n    .child(uid)\n    .set({\n      ...user,\n      lastOnline: new Date().getTime(),\n      uid,\n    });\n\n  actions.setUserSuccess({});\n  actions.getUser({ uid });\n}\n\nconst requestedUsers: { [key: string]: true } = {};\n\nfunction getUser(payload: IPayload) {\n  const { uid, currentUser } = payload;\n\n  if (requestedUsers[uid] && !currentUser) return;\n  requestedUsers[uid] = true;\n  database\n    .ref('users')\n    .child(uid)\n    .on('value', (rawUser) => {\n      const user = rawUser.val() || {};\n      actions.getUserSuccess({ user, uid, currentUser });\n    });\n}\n\nfunction* updateLastOnline() {\n  const uid = localStorage.getItem('uid');\n  if (!uid || uid === 'undefined') return;\n  const time = new Date().getTime();\n\n  localStorage.setItem('lastActivity', `${time}`);\n  yield database\n    .ref('users')\n    .child(`${uid}`)\n    .child('lastOnline')\n    .set(time);\n\n  yield database\n    .ref('usersActivity')\n    .child(`${uid}`)\n    .set(time);\n}\n\nfunction* getUsersActivity() {\n  const rawActivity = yield database\n    .ref('usersActivity')\n    .once('value');\n\n  const usersActivity = (rawActivity.val() || {});\n  actions.getUsersActivitySuccess({ usersActivity });\n}\n\nexport default function* watchForActions() {\n  yield all([\n    takeLatest('GET_USER', getUser),\n    takeLatest('SET_USER', setUser),\n    takeLatest('UPDATE_LAST_ONLINE', updateLastOnline),\n    takeLatest('GET_USERS_ACTIVITY', getUsersActivity),\n  ]);\n}\n","import { all, takeLatest } from 'redux-saga/effects';\n\nimport { IPayload } from '../reducers/actions';\nimport actions from '../reducers/actions';\nimport { database } from '../helpers/firebase';\nimport { formatMessage } from '../helpers/utils';\nimport { blinkTitle } from '../helpers/activity';\n\nfunction* sendMessage(payload: IPayload) {\n  const { uid, message, data = {} } = payload;\n  const time = new Date().getTime();\n\n  const newMessage = formatMessage({\n    time,\n    author: uid,\n    body: `${message} `,\n    data,\n  });\n\n  try {\n    yield database\n      .ref('messages')\n      .child(`${time}`)\n      .set(newMessage);\n    localStorage.setItem('message', '');\n    actions.sendMessageSuccess({ message: newMessage });\n  } catch (e) {\n    actions.sendMessageFail({});\n    console.error(e);\n    actions.notify({ message: 'Сообщение не было отправлено. Для деталей ctrl + shift + i, вкладка Console' });\n  }\n}\n\nfunction subscribe() {\n  database\n    .ref('messages')\n    .orderByKey()\n    .limitToLast(1)\n    .on('value', (rawMessages) => {\n      const messages = Object.values(rawMessages.val() || {});\n      actions.getMessagesSuccess({\n        messages,\n        concat: true\n      });\n\n      blinkTitle();\n    });\n}\n\nfunction unsubscribe() {\n  database.ref('messages').off();\n}\n\nfunction* getMessages() {\n  const rawMessages = yield database\n    .ref('messages')\n    .orderByKey()\n    .limitToLast(100)\n    .once('value');\n\n  const messages = Object.values(rawMessages.val() || {});\n  actions.getMessagesSuccess({ messages });\n}\n\nfunction* getMoreMessages(payload: IPayload) {\n  const { firstMessage } = payload;\n\n  const rawMessages = yield database\n    .ref('messages')\n    .orderByKey()\n    .endAt(`${firstMessage.time}`)\n    .limitToLast(30)\n    .once('value');\n\n  const messages = Object.values(rawMessages.val() || {});\n  actions.getMessagesSuccess({ messages, concat: true });\n}\n\nfunction uploadFile(payload: IPayload) {\n  const { file, uid } = payload;\n\n  const request = new XMLHttpRequest();\n  const formData = new FormData();\n\n  formData.append('image', file);\n\n  request.open('POST', 'https://api.imgur.com/3/image/');\n  request.setRequestHeader('Authorization', `Client-ID ea2c833b74d4583`);\n  request.onreadystatechange = () => {\n    if (request.status === 200 && request.readyState === 4) {\n      let res = JSON.parse(request.responseText);\n\n      actions.sendMessage({\n        uid,\n        message: res.data.link,\n      });\n      actions.notify({ message: 'Файл успешно загружен!' });\n    }\n  };\n\n  request.send(formData);\n}\n\nexport function* changeMessage(payload: IPayload) {\n  const { message } = payload;\n\n  const newMessage = formatMessage({\n    time: message.time,\n    author: message.author,\n    body: message.body,\n    data: message.data,\n  });\n\n  yield database\n    .ref('messages')\n    .child(`${message.time}`)\n    .set(newMessage);\n\n  actions.changeMessageSuccess({ message: newMessage });\n  return newMessage;\n}\n\nexport default function* watchForActions() {\n  yield all([\n    takeLatest('SEND_MESSAGE', sendMessage),\n    takeLatest('GET_MESSAGES', getMessages),\n    takeLatest('GET_MORE_MESSAGES', getMoreMessages),\n    takeLatest('SUBSCRIBE', subscribe),\n    takeLatest('UNSUBSCRIBE', unsubscribe),\n    takeLatest('UPLOAD_FILE', uploadFile),\n    takeLatest('CHANGE_MESSAGE', changeMessage),\n  ]);\n}\n","import { all, takeLatest, takeEvery } from 'redux-saga/effects';\n\nimport { IPayload } from '../reducers/actions';\nimport actions from '../reducers/actions';\nimport { database } from '../helpers/firebase';\nimport { generateID, getFailedItem } from '../helpers/utils';\nimport { IInventoryItem, IMessage, IUser } from \"../reducers/interfaces\";\nimport { getRandomInt } from '../helpers/dice';\n\nfunction* setItem(payload: IPayload) {\n  const { item } = payload;\n  const time = new Date().getTime();\n  const id = item.id || generateID();\n  const author = localStorage.getItem('uid');\n\n  const itemData = {\n    ...item,\n    id,\n    time,\n    author,\n  };\n\n  yield database\n    .ref('items')\n    .child(`${id}`)\n    .set(itemData);\n\n  actions.setItemSuccess({ itemData });\n  actions.getItemById({ id });\n}\n\nfunction* getItems() {\n  const rawItems = yield database\n    .ref('items')\n    .orderByKey()\n    .limitToFirst(30)\n    .once('value');\n\n  const items = Object.values(rawItems.val() || {});\n  actions.getItemsSuccess({ items });\n}\n\nfunction* getItemById(payload: IPayload) {\n  const { id } = payload;\n\n  const rawItem = yield database\n    .ref('items')\n    .child(id)\n    .once('value');\n\n  const item = rawItem.val() || getFailedItem(id);\n  actions.getItemsSuccess({ items: [item] });\n  return true;\n}\n\nfunction* getMoreItems(payload: IPayload) {\n  const { amount = 1, lastItem } = payload;\n\n  const rawItems = yield database\n    .ref('items')\n    .orderByKey()\n    .startAt(`${lastItem.id}`)\n    .limitToFirst(amount + 1)\n    .once('value');\n\n  const a = rawItems.val();\n  const items = Object.values(a || {}).splice(1);\n  actions.getItemsSuccess({ items });\n}\n\nfunction* deleteItem(payload: IPayload) {\n  const { id } = payload;\n\n  // Delete items from items list\n  yield database.ref(`items/${id}`).set({});\n  actions.deleteItemProgress({ field: 'deleted', value: true });\n  let waitCounter = 0;\n  const getWait = () => {\n    waitCounter += getRandomInt(10, 500);\n    return waitCounter;\n  };\n\n  // Delete item from all messages\n  const messages: IMessage[] = Object.values((yield database.ref(`messages`).once('value')).val() || {});\n  let clearedMessages = 0;\n\n  async function checkMessages(index: number) {\n    const message: IMessage = messages[index];\n    if (!message) return;\n    const randomWait = getWait();\n\n    setTimeout(() => actions.deleteItemProgress({\n      field: 'messagesChecked',\n      value: index + 1\n    }), randomWait);\n    if (message.data && message.data.itemId && message.data.itemId === id) {\n      await database.ref(`messages/${message.time}/data`).set({});\n      setTimeout(() => actions.deleteItemProgress({\n        field: 'messagesCleared',\n        value: ++clearedMessages\n      }), randomWait);\n    }\n    await checkMessages(index + 1);\n  }\n\n  yield checkMessages(0);\n\n  // Delete item from all users\n  const users: IUser[] = Object.values((yield database.ref(`users`).once('value')).val() || {});\n  let clearedUsers = 0;\n\n  async function checkUsers(index: number) {\n    const user: IUser = users[index];\n    if (!user) return;\n    const randomWait = getWait();\n\n    setTimeout(() => actions.deleteItemProgress({\n      field: 'usersChecked',\n      value: index + 1\n    }), randomWait);\n    if (user.inventory) {\n      const item = Object.values(user.inventory).find((item: IInventoryItem) => item.id === id);\n      if (item) {\n        await database.ref(`users/${user.uid}/inventory/${id}|${item.time}`).set({});\n        setTimeout(() => actions.deleteItemProgress({\n          field: 'usersCleared',\n          value: ++clearedUsers\n        }), randomWait);\n      }\n    }\n    await checkUsers(index + 1);\n  }\n\n  yield checkUsers(0);\n\n  setTimeout(\n    () => actions.deleteItemProgress({ field: 'done', value: true }),\n    getWait()\n  );\n  actions.deleteItemSuccess({ id });\n}\n\nexport default function* watchForActions() {\n  yield all([\n    takeLatest('DELETE_ITEM', deleteItem),\n    takeLatest('SET_ITEM', setItem),\n    takeLatest('GET_ITEMS', getItems),\n    takeLatest('GET_MORE_ITEMS', getMoreItems),\n    takeEvery('GET_ITEM_BY_ID', getItemById),\n  ]);\n}\n","import { all, takeLatest } from 'redux-saga/effects';\n\nimport { IInventoryItem, IItem } from '../reducers/interfaces';\nimport { database } from '../helpers/firebase';\nimport { IPayload } from '../reducers/actions';\nimport actions from '../reducers/actions';\nimport { changeMessage } from './messages';\nimport { getItemName } from \"../helpers/utils\";\n\nfunction* passItem(payload: IPayload) {\n  const { id, uid, demonstrate, use, item, to } = payload;\n\n  if (id && uid && item) {\n    const name = getItemName(item);\n    if (demonstrate) {\n      actions.sendMessage({\n        uid,\n        message: `*показывает ${name}`,\n        data: { itemId: id, amount: item.amount },\n      });\n      actions.passItemSuccess({});\n      actions.notify({ message: `Вы показали ${name}`});\n      actions.redirect({ to: '/text-roleplay/chat' });\n      return true;\n    }\n\n    const removed = yield removeItem({ id, uid, amount: item.amount });\n    if (!removed) {\n      console.error(`passItem error:`, payload);\n      actions.passItemFail({ id, uid });\n      return false;\n    }\n\n    if (use) {\n      const name = getItemName(item, false);\n      actions.sendMessage({\n        uid,\n        message: `*использовал ${name}`,\n        data: { itemId: id },\n      });\n      actions.notify({ message: `Вы использовали ${name}` });\n      actions.redirect({ to: '/text-roleplay/chat' });\n      actions.passItemSuccess({});\n      return true;\n    }\n\n    if (to) {\n      actions.giveItem({ uid: to.uid, id, itemType: item.type, amount: item.amount });\n      actions.notify({ message: `Вы передали ${item.name} игроку '${to.nickname}'` });\n      actions.passItemSuccess({});\n      return;\n    }\n\n    actions.sendMessage({\n      uid,\n      message: `*выбросил ${name}`,\n      data: { itemId: id, amount: item.amount, type: item.type },\n    });\n    actions.notify({ message: `Вы выбросили ${name}` });\n    actions.redirect({ to: '/text-roleplay/chat' });\n    actions.passItemSuccess({});\n    return true;\n  }\n\n  actions.passItemFail({ id, uid });\n  console.error(`passItem error: id, uid, or item are not defined`, payload);\n  return false;\n}\n\nfunction* removeItem(payload: IPayload) {\n  const { id, uid, amount = 1 } = payload;\n  const ref = database\n    .ref(`users`)\n    .child(uid)\n    .child('inventory');\n\n  const sameItem = yield getInventoryItem({ id, uid });\n  if (sameItem) {\n    if (sameItem.amount - amount >= 1) {\n      const item = {\n        ...sameItem,\n        amount: sameItem.amount - amount,\n      };\n\n      yield ref.child(`${id}|${sameItem.time}`).set(item);\n      actions.removeItemSuccess({ id, uid });\n      return true;\n    }\n\n    yield ref.child(`${id}|${sameItem.time}`).set({});\n    actions.removeItemSuccess({ id, uid });\n    return true;\n  }\n\n  console.error(`removeItem error: User '${uid}' doesn't have item '${id}'`);\n  actions.notify({ message: `Предмета нет в инвентаре` });\n  actions.removeItemFail({ id, uid, error: 'has-no-item' });\n  return false;\n}\n\nfunction* getInventoryItem(payload: IPayload) {\n  const { id, uid } = payload;\n\n  const rawItems = yield database\n    .ref('users')\n    .child(uid)\n    .child('inventory')\n    .once('value');\n  const items: IInventoryItem[] = Object.values(rawItems.val() || {});\n  if (items.length) {\n    // @ts-ignore\n    const item: IItem = items.find(item => item.id === id);\n    if (item)\n      return item;\n  }\n  return;\n}\n\nfunction* giveItem(payload: IPayload) {\n  const { id, uid, itemType, amount = 1 } = payload;\n  if (!id || !uid || !itemType) {\n    console.error('giveItem error. One of the properties are not defined', id, uid, itemType);\n    actions.giveItemFail({});\n    return;\n  }\n\n  const time = new Date().getTime();\n  let item: IInventoryItem = { id, time, type: itemType, amount: amount };\n\n  if (itemType !== 'weapon' && itemType !== 'wearable') {\n    const sameItem = yield getInventoryItem({ id, uid });\n    if (sameItem) {\n      item.amount = (sameItem.amount || 1) + amount;\n      item.time = sameItem.time;\n    }\n  }\n\n  const fullId = `${item.id}|${item.time}`;\n  yield database\n    .ref('users')\n    .child(uid)\n    .child('inventory')\n    .child(fullId)\n    .set(item);\n\n  actions.giveItemSuccess({ id, uid });\n  return true;\n}\n\nfunction* takeItem(payload: IPayload) {\n  const { uid, message } = payload;\n  const { itemId, amount, type } = message.data;\n\n  message.data.taken = true;\n\n  const took = yield changeMessage({ uid, message });\n  if (took && type) {\n    const item = yield giveItem({\n      id: itemId,\n      uid,\n      amount: amount || 1,\n      itemType: type,\n    });\n    if (item) {\n      actions.sendMessage({\n        uid,\n        message: `*подобрал предмет`,\n      });\n      actions.takeItemSuccess({});\n      return true;\n    }\n  }\n\n  console.error('takeItem error. Cant take or no item', payload);\n  actions.takeItemFail({});\n  return false;\n}\n\nexport default function* watchForActions() {\n  yield all([\n    takeLatest('GIVE_ITEM', giveItem),\n    takeLatest('REMOVE_ITEM', removeItem),\n    takeLatest('PASS_ITEM', passItem),\n    takeLatest('TAKE_ITEM', takeItem),\n  ]);\n}\n","import { all } from 'redux-saga/effects';\n\nimport auth from './auth';\nimport users from './users';\nimport messages from './messages';\nimport items from './items';\nimport inventory from './inventory';\n\nexport default function* watchAll() {\n  yield all([\n    auth(),\n    users(),\n    messages(),\n    items(),\n    inventory(),\n  ])\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport saga from './sagas/index';\nimport store, { sagaMiddleware } from './helpers/store';\nimport * as serviceWorker from './serviceWorker';\n\nsagaMiddleware.run(saga);\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}