{"version":3,"sources":["components/Menu/index.tsx","helpers/dice.tsx","helpers/utils.tsx","reducers/index.ts","helpers/store.tsx","actions/index.tsx","components/Avatar.tsx","components/Image.tsx","components/Chat/MessageBody.tsx","components/Chat/Message.tsx","components/Chat/index.tsx","components/Loader.tsx","components/Settings/index.tsx","components/Logout/index.tsx","components/Inventory/index.tsx","configs/routes.tsx","components/Login/index.tsx","components/Router/index.tsx","App.tsx","helpers/firebase.tsx","sagas/index.tsx","serviceWorker.ts","index.tsx"],"names":["connect","state","isLoggedIn","withRouter","props","Fragment","mode","window","innerWidth","selectedKeys","location","pathname","split","pop","menu","map","value","Item","key","path","disabled","link","href","target","rel","to","label","diceRegex","diceRegexG","rollDice","amount","size","Array","fill","min","max","Math","floor","random","colorFromString","str","hash","i","length","charCodeAt","color","toString","substr","isOnline","time","parseInt","localStorage","getItem","Date","getTime","doubleDigit","date","getHours","getMinutes","getSeconds","join","getDate","getMonth","getFullYear","getFullTime","isURL","test","processMessages","messages","filter","item","pos","self","findIndex","_i","sort","a","b","m","index","author","grouped","formatMessage","message","body","rolls","match","roll","_amount","_size","results","maxResult","minResult","sum","reduce","exportRolls","isRP","mentioned","validateMessage","notify","error","some","indexOf","user","JSON","parse","setItem","uid","initialState","userData","settings","loading","users","currentUser","defaultUser","lastOnline","nickname","avatar","reducer","action","type","concat","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","composeWithDevTools","applyMiddleware","dispatch","createAction","payload","createAsyncAction","typeName","toLowerCase","replace","toUpperCase","actions","updateLastOnline","logout","Avatar","style","rest","_avatar","src","backgroundColor","Image","visible","toggleModal","setState","this","onClick","alt","className","title","CloseOutlined","closable","footer","onCancel","width","maxWidth","Component","MessageBody","videoId","URL","searchParams","get","id","height","frameBorder","_body","_rolls","word","rollIndex","splice","summing","importRolls","Message","undefined","placement","extra","Chat","sending","componentDidMount","getMessages","subscribe","componentWillUnmount","unsubscribe","componentDidUpdate","prevProps","forEach","getUser","onChangeMessage","event","onKeyDown","shiftKey","preventDefault","onSendMessage","find","currentTarget","selectionStart","sendMessage","getMoreMessages","firstMessage","onScroll","scrollTop","uploadFile","file","onPaste","e","clipboardData","files","onDrop","dataTransfer","items","getAsFile","render","spinning","TextArea","placeholder","autoSize","minRows","maxRows","onChange","SendOutlined","LoadIcon","viewBox","focusable","data-icon","aria-hidden","d","CheckIcon","Loader","Settings","field","newSettings","setSettings","setUser","clearAvatar","getField","hasRight","display","readOnly","onConfirm","okText","cancelText","icon","ClearOutlined","danger","margin","defaultValue","labels","bordered","Object","keys","React","URLSearchParams","params","isAdmin","Inventory","routes","component","exact","Logout","onFinish","values","login","name","rules","required","Password","htmlType","Login","App","callback","eventName","document","addEventListener","listenForActivity","auth","initializeApp","firebaseConfig","fbAuth","database","fbDatabase","onAuthStateChanged","loginSuccess","watchForActions","email","password","signInWithEmailAndPassword","stringify","console","code","createUserWithEmailAndPassword","loginFail","removeItem","signOut","ref","child","set","setUserSuccess","sendMessageSuccess","sendMessageFail","orderByKey","limitToLast","on","rawMessages","val","getMessagesSuccess","off","once","endAt","requestedUsers","rawUser","getUserSuccess","request","XMLHttpRequest","formData","FormData","append","open","setRequestHeader","onreadystatechange","status","readyState","res","responseText","data","send","takeLatest","Boolean","hostname","run","saga","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.8a415611.chunk.js","sourcesContent":["import React from 'react';\nimport { Menu as AntdMenu } from 'antd';\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport '../../styles/menu.scss';\nimport menu from '../../configs/menu.json';\nimport { IState } from '../../reducers';\n\ninterface IMenuProps extends RouteComponentProps {\n  isLoggedIn: boolean;\n}\n\nfunction Menu(props: IMenuProps) {\n  if (!props.isLoggedIn) {\n    return <React.Fragment/>;\n  }\n\n  const mode = window.innerWidth < 767\n    ? 'horizontal'\n    : 'inline';\n\n  return (\n    <AntdMenu\n      mode={mode}\n      selectedKeys={[props.location.pathname.split('/').pop() || '']}\n    >\n      {menu.map((value) => (\n        <AntdMenu.Item\n          key={value.path.split('/').pop()}\n          disabled={value.path === props.location.pathname}\n        >\n          {\n            value.link\n              ? (\n\n                <a\n                  href={value.path}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Помощь\n                </a>\n              ) : (\n                <Link to={value.path}>\n                  {value.label}\n                </Link>\n              )\n          }\n        </AntdMenu.Item>\n      ))}\n    </AntdMenu>\n  );\n}\n\nexport default connect((state: IState) => ({ isLoggedIn: state.isLoggedIn }))(withRouter(Menu));\n","import React from 'react';\nimport { Tooltip } from 'antd';\n\nexport interface IRoll {\n  roll: string;\n  results: number[];\n  amount: number;\n  size: number;\n  maxResult: number;\n  minResult: number;\n  sum: number;\n}\n\nexport const diceRegex = /([1-9]|10)[dд]((10|12|20)|[468])/miu;\nexport const diceRegexG = /([1-9]|10)[dд]((10|12|20)|[468])/miug;\n\nexport const getRandomInt = (min: number, max: number) =>\n  Math.floor(Math.random() * ((max + 1) - min) + min);\n\nexport const hasDice = (str: string) =>\n  /\\d+[dд]\\d+/imu.test(str);\n\nexport const rollDice = (amount: number, size: number) => {\n  return new Array(amount).fill(amount + size).map(() => getRandomInt(1, size));\n};\n\nexport const exportRolls = (str: string) => {\n  const rolls = str.match(diceRegexG);\n  if (rolls) {\n    return rolls.map((roll: string): IRoll => {\n      const [_amount,_size] = roll.split(/[dд]/);\n      const amount = parseInt(_amount);\n      const size = parseInt(_size);\n      const results = rollDice(amount, size);\n\n      return ({\n        maxResult: size * amount,\n        minResult: amount,\n        sum: results.reduce((a, b) => a + b, 0),\n        roll,\n        results,\n        amount,\n        size,\n      })\n    });\n  }\n  return [];\n};\n\nexport const importRolls = (body: string, _rolls: IRoll[]) => {\n  const rolls = [..._rolls]; // Avoid mutations\n  return body.split(' ').map((word: string, index: number) => {\n    const rollIndex = rolls.findIndex(({ roll }) => roll === word);\n    if (rollIndex > -1) {\n      const {\n        results,\n        maxResult,\n        minResult,\n        sum\n      } = rolls.splice(rollIndex, 1)[0];\n\n      const summing = `${sum} = ${results.join(' + ')}`;\n      const className = (sum === maxResult && 'critHit') || (sum === minResult && 'critMiss') || '';\n      return (\n        <React.Fragment key={word + index}>\n          {' '}\n          <Tooltip title={summing}>\n            <b className={className}>\n              {word}({sum})\n            </b>\n          </Tooltip>\n        </React.Fragment>\n      )\n    }\n    return ` ${word}`;\n  });\n};\n","import { message as notify } from 'antd';\n\nimport actions from '../actions';\nimport { IMessage } from '../reducers';\nimport { diceRegex, exportRolls, hasDice } from './dice';\n\nexport const camelize = (str: string) => {\n  return str\n    .toLowerCase()\n    .replace(/_./g, (m) => m.toUpperCase())\n    .replace(/_/g, '')\n};\n\nexport const colorFromString = (str: string) => {\n  if (!str) return '#000';\n\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n  for (let i = 0; i < 3; i++) {\n    let value = (hash >> (i * 8)) & 0xFF;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n\n  return color;\n};\n\nexport const isOnline = (time?: number) => {\n  if (!time) return false;\n  const lastActivity = time || parseInt(localStorage.getItem('lastActivity') || '0');\n  return (lastActivity + 180000) > new Date().getTime();\n};\n\nexport const doubleDigit = (str: number) => `${str}`.length === 1\n  ? `0${str}`\n  : str;\n\nexport const getTime = (time: number) => {\n  const date = new Date(time);\n  return [date.getHours(), date.getMinutes(), date.getSeconds()].map(doubleDigit).join(':');\n};\n\nexport const getDate = (time: number) => {\n  const date = new Date(time);\n  return [date.getDate(), date.getMonth() + 1, date.getFullYear()].map(doubleDigit).join('.');\n};\n\nexport const getFullTime = (time: number) => {\n  const date = new Date(time);\n  const messageTime = [date.getHours(), date.getMinutes(), date.getSeconds()].map(doubleDigit).join(':');\n  const messageDate = [date.getDate(), date.getMonth() + 1, date.getFullYear()].map(doubleDigit).join('.');\n\n  return [messageTime, messageDate].join(' ');\n};\n\nexport const listenForActivity = () => {\n  const callback = () => {\n    if (!isOnline(parseInt(localStorage.getItem('lastActivity') || '0') - 60000))\n      actions.updateLastOnline({});\n  };\n\n  [\n    'mousedown',\n    'mousemove',\n    'keydown',\n    'scroll',\n    'touchstart'\n  ].forEach((eventName) => {\n    document.addEventListener(eventName, callback, true);\n  });\n  callback();\n};\n\nexport const isURL = (str: string) =>\n  /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/igm.test(str);\n\nexport const processMessages = (messages: IMessage[]) => {\n  return messages\n    .filter((item: IMessage, pos: number, self: IMessage[]) =>\n      self.findIndex((_i: IMessage) => _i.time === item.time) === pos\n    )\n    .sort((a: IMessage, b: IMessage) => b.time - a.time)\n    .map((m: IMessage, index: number, messages: IMessage[]) => {\n      if (index < messages.length - 2) {\n        if (m.author === messages[index + 1].author) {\n          return {\n            ...m,\n            grouped: true,\n          }\n        }\n      }\n      return m;\n    })\n};\n\nexport const formatMessage = (message: IMessage) => {\n  const { body } = message;\n\n  if (diceRegex.test(body)) {\n    message.rolls = exportRolls(body);\n  }\n\n  if (/\\*/.test(body)) {\n    message.isRP = true;\n  }\n\n  if (/(@[a-zа-яё]*)/mui.test(body)) {\n    message.mentioned = true;\n  }\n\n  return message;\n};\n\nexport const validateMessage = (message: string) => {\n\n  if (!message) {\n    notify.error('Сообщение пустое');\n    return false;\n  }\n\n  if (hasDice(message)) {\n    const rolls: string[] | null = message.match(/(( |^)[a-zа-я]+\\d+[dд]\\d+)|(\\d+[dд]\\d+[a-zа-я]+( |$))|(\\d+[dд]\\d+)/miug);\n    if (rolls) {\n      const wasError = rolls.some((roll: string) => {\n        if (/(([a-zа-яё])\\d+[dд]\\d+)|(\\d+[dд]\\d+([a-zа-яё]))/miug.test(roll)) {\n          notify.error(`Ошибка в дайсе ${roll}. Рядом не должно быть символов`);\n          return true;\n        }\n\n        const [amount, size] = roll.split(/[dд]/u);\n\n        if (parseInt(amount) > 10) {\n          notify.error(`Ошибка в дайсе ${roll}. Нельзя бросать больше 10-ти дайсов`);\n          return true;\n        }\n\n        if ([2,4,6,8,10,12,20].indexOf(parseInt(size)) === -1) {\n          notify.error(`Ошибка в дайсе ${roll}. Можно бросать только дайсы размеров 4 6 8 10 12 20`);\n          return true;\n        }\n\n        return false;\n      });\n      if (wasError) return false;\n    }\n  }\n  return true;\n};\n","import { processMessages } from '../helpers/utils';\nimport { IRoll } from \"../helpers/dice\";\n\nexport interface IAction {\n  type: string;\n\n  [key: string]: any; // Payload could be any type or size\n}\n\nexport interface IMessage {\n  author: string;\n  time: number;\n  body: string;\n  // Remove header and top margin of message, because author is the same\n  grouped?: boolean;\n  isCommand?: boolean;\n  isRP?: boolean;\n  commandResult?: string;\n  mentioned?: boolean;\n  rolls?: IRoll[];\n}\n\nexport interface IUsers {\n  [key: string]: IUser;\n}\n\nexport interface IState {\n  userData: IUser | null;\n  isLoggedIn: boolean;\n  settings: IUser | false;\n  loading: boolean;\n  messages: IMessage[];\n  users: IUsers;\n  uid: string;\n  currentUser: IUser | null;\n}\n\nconst user = JSON.parse(localStorage.getItem('user') || 'null');\nif (user) localStorage.setItem('uid', user.uid);\nexport const initialState: IState = {\n  userData: user,\n  isLoggedIn: user !== null,\n  settings: false,\n  loading: false,\n  messages: [],\n  users: {},\n  uid: user ? user.uid : '',\n  currentUser: null,\n};\n\nexport interface IUser {\n  nickname: string;\n  avatar: string;\n  uid: string,\n  lastOnline: number;\n  isAdmin?: boolean;\n}\n\nexport const defaultUser = {\n  lastOnline: 0,\n\n  nickname: '',\n  avatar: '',\n\n  uid: '',\n};\n\nconst reducer = (state = initialState, action: IAction) => {\n  switch (action.type) {\n    case 'LOGIN':\n    case 'GET_MESSAGES':\n    case 'GET_MORE_MESSAGES':\n    case 'SEND_MESSAGE':\n    case 'SET_USER':\n    case 'UPLOAD_FILE': {\n      return {\n        ...state,\n        loading: true,\n      }\n    }\n    case 'LOGIN_FAIL':\n    case 'SET_USER_SUCCESS':\n    case 'SET_USER_FAIL':\n    case 'GET_MESSAGES_FAIL':\n    case 'GET_MORE_MESSAGES_SUCCESS':\n    case 'GET_MORE_MESSAGES_FAIL':\n    case 'SEND_MESSAGE_FAIL': {\n      return {\n        ...state,\n        loading: false,\n      }\n    }\n    case 'LOGIN_SUCCESS': {\n      return {\n        ...state,\n        uid: action.user.uid,\n        userData: action.user,\n        isLoggedIn: action.user !== null,\n      }\n    }\n    case 'LOGOUT': {\n      return {\n        ...state,\n        userData: null,\n        isLoggedIn: false,\n      }\n    }\n    case 'GET_MESSAGES_SUCCESS': {\n      const messages = action.concat\n        ? [...state.messages, ...action.messages]\n        : action.messages;\n\n      return {\n        ...state,\n        messages: processMessages(messages),\n        loading: false,\n      }\n    }\n    case 'GET_USER_SUCCESS': {\n      return {\n        ...state,\n        currentUser: action.currentUser\n          ? action.user\n          : state.currentUser,\n        users: {\n          ...state.users,\n          [action.uid]: action.user,\n        },\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { initialState } from '../reducers';\nimport reducers from '../reducers'\n\nexport const sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  reducers,\n  initialState,\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\n);\n\nexport default store;\n","import store from '../helpers/store';\nimport { camelize } from '../helpers/utils';\n\nconst dispatch = store.dispatch;\n\nexport interface IPayload {\n  [key: string]: any;\n}\n\ninterface IActions {\n  [key: string]: (payload: IPayload) => void;\n}\n\nconst createAction =\n  (type: string) =>\n    (payload?: IPayload) =>\n      dispatch({ type, ...payload });\n\nconst createAsyncAction = (type: string) => {\n  const typeName = camelize(type);\n  return {\n    [typeName]: createAction(type),\n    [`${typeName}Success`]: createAction(`${type}_SUCCESS`),\n    [`${typeName}Fail`]: createAction(`${type}_FAIL`),\n  }\n};\n\nconst actions: IActions = {\n  ...createAsyncAction('LOGIN'),\n  ...createAsyncAction('GET_USER'),\n  ...createAsyncAction('GET_MESSAGES'),\n  ...createAsyncAction('GET_MORE_MESSAGES'),\n  ...createAsyncAction('SET_USER'),\n  ...createAsyncAction('SEND_MESSAGE'),\n  ...createAsyncAction('SUBSCRIBE'),\n  ...createAsyncAction('UNSUBSCRIBE'),\n  ...createAsyncAction('UPLOAD_FILE'),\n  updateLastOnline: createAction('UPDATE_LAST_ONLINE'),\n  logout: createAction('LOGOUT'),\n};\n\nexport default actions;\n","import React from 'react';\nimport { Avatar as AntdAvatar } from 'antd';\nimport { AvatarProps } from 'antd/es/avatar';\nimport { colorFromString, isURL } from \"../helpers/utils\";\n\ninterface IAvatarProps extends AvatarProps {\n  avatar: string;\n  nickname: string;\n}\n\nconst Avatar = (props: IAvatarProps) => {\n  const { avatar, nickname, style, ...rest } = props;\n\n  const _avatar = isURL(avatar) ? avatar : '';\n  return (\n    <AntdAvatar\n      src={_avatar}\n      style={{ ...style, backgroundColor: _avatar ? 'transparent' : colorFromString(nickname) }}\n      {...rest}\n    >\n      {nickname}\n    </AntdAvatar>\n  )\n};\n\nexport default Avatar;\n","import React, { Component } from 'react';\nimport { Modal } from 'antd';\nimport { CloseOutlined } from '@ant-design/icons';\n\nclass Image extends Component<{ src: string }, { visible: boolean }> {\n  state = { visible: false };\n\n  toggleModal = () => {\n    this.setState({\n      visible: !this.state.visible,\n    });\n  };\n\n  render() {\n    const { src } = this.props;\n\n    return (\n      <React.Fragment>\n        <img\n          onClick={this.toggleModal}\n          src={src}\n          alt=\"\"\n          className=\"chat-image\"\n        />\n        <Modal\n          title={\n            <div>\n              <a\n                href={src}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {src}\n              </a>\n              <CloseOutlined onClick={this.toggleModal}/>\n            </div>\n          }\n          className=\"image-modal\"\n          closable={false}\n          footer={null}\n          visible={this.state.visible}\n          onCancel={this.toggleModal}\n          width=\"fit-content\"\n        >\n          <img\n            style={{\n              maxWidth: '90vw',\n            }}\n            src={src}\n            alt=\"\"\n          />\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Image;\n","import React from 'react';\nimport { isURL } from '../../helpers/utils';\nimport { IMessage } from '../../reducers';\nimport { importRolls } from '../../helpers/dice';\nimport Image from \"../Image\";\n\ninterface IMessageBodyProps {\n  message: IMessage;\n}\n\nconst MessageBody = (props: IMessageBodyProps) => {\n  const {\n    body,\n    isRP,\n    rolls,\n  } = props.message;\n\n  if (isURL(body)) {\n    if (/\\.(gif|jpe?g|tiff|png|webp|bmp)/ig.test(body)) {\n      return (\n        <Image src={body}/>\n      )\n    }\n\n    if (/youtu/.test(body)) {\n      const videoId = new URL(body).searchParams.get('v') || '';\n\n      return (\n        <iframe\n          title={videoId}\n          id=\"ytplayer\"\n          width=\"100%\"\n          height=\"360\"\n          src={`http://www.youtube.com/embed/${videoId}`}\n          frameBorder=\"0\"\n        />\n      )\n    }\n\n    return (\n      <a\n        href={body}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {body}\n      </a>\n    )\n  }\n\n  const _body = rolls\n    ? importRolls(body, rolls)\n    : body;\n\n  if (isRP) {\n    return (\n      <i className=\"rp-message\">\n        {_body}\n      </i>\n    )\n  }\n\n  return <span>{_body}</span>;\n};\n\nexport default MessageBody;\n","import React from 'react';\nimport { Card, Tooltip } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { IMessage, IUser } from '../../reducers';\nimport Avatar from '../Avatar';\nimport MessageBody from './MessageBody';\nimport {\n  getDate,\n  getFullTime,\n  getTime,\n  isOnline\n} from '../../helpers/utils';\n\ninterface IMessageProps {\n  message: IMessage,\n  user: IUser,\n}\n\nconst Message = (props: IMessageProps) => {\n  const {\n    message: {\n      time,\n      grouped,\n      body,\n      mentioned,\n    },\n    user,\n  } = props;\n\n  const title = user && (\n    <Link to={`./${user.uid}/settings`}>\n      <Tooltip\n        title={user.lastOnline ? `Последняя активность: ${getFullTime(user.lastOnline)}` : undefined}\n        placement=\"left\"\n      >\n        <div className={`chat-message__title ${isOnline(user.lastOnline) ? 'online' : ''}`}>\n          <Avatar\n            avatar={user.avatar}\n            nickname={user.nickname}\n          />\n          <div className=\"chat-message__nickname\">\n            {user.nickname || user.uid}\n          </div>\n        </div>\n      </Tooltip>\n    </Link>\n  );\n\n  return (\n    <Card\n      className={`chat-message ${grouped ? 'grouped' : ''} ${mentioned && user && (body.indexOf(`@${user.nickname} `) > -1) ? 'mentioned' : ''}`}\n      title={title}\n      key={time}\n      extra={(\n        <Tooltip title={getDate(time)}>\n          <div className=\"chat-time\">{getTime(time)}</div>\n        </Tooltip>\n      )}\n    >\n      <MessageBody message={props.message}/>\n    </Card>\n  );\n};\n\nexport default Message;\n","import React, {\n  ChangeEvent,\n  Component,\n  KeyboardEvent,\n  ClipboardEvent,\n  DragEvent,\n} from 'react';\nimport { connect } from 'react-redux';\nimport { SendOutlined } from '@ant-design/icons';\nimport {\n  Input,\n  message as notify,\n  Spin,\n} from 'antd';\n\nimport '../../styles/chat.scss';\nimport actions from '../../actions';\nimport { IMessage, IState, IUser, IUsers } from '../../reducers';\nimport Message from './Message';\nimport { validateMessage } from \"../../helpers/utils\";\n\ninterface IChatProps {\n  messages: IMessage[],\n  uid: string,\n  loading: boolean,\n  users: IUsers;\n  user: IUser;\n}\n\ninterface IChatState {\n  message: string;\n  sending: boolean;\n}\n\nclass Chat extends Component<IChatProps, IChatState> {\n  state = {\n    message: '',\n    sending: false,\n  };\n\n  componentDidMount = () => {\n    actions.getMessages({});\n    actions.subscribe({});\n    this.setState({ message: localStorage.getItem('message') || '' });\n  };\n\n  componentWillUnmount = () => {\n    actions.unsubscribe({});\n  };\n\n  componentDidUpdate = (prevProps: IChatProps) => {\n    const { messages, users } = this.props;\n\n    if (this.state.sending && prevProps.messages !== messages) {\n      localStorage.setItem('message', '');\n      this.setState({\n        message: '',\n        sending: false,\n      });\n    }\n\n    messages.forEach((m: IMessage) => {\n      if (!users[m.author]) {\n        actions.getUser({ uid: m.author });\n      }\n    });\n  };\n\n  onChangeMessage = (event: ChangeEvent<HTMLTextAreaElement>) => {\n    const message = event.target.value;\n    localStorage.setItem('message', message);\n    this.setState({ message });\n  };\n\n  onKeyDown = (event: KeyboardEvent<HTMLTextAreaElement>) => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n\n      this.onSendMessage();\n    }\n\n    const { uid } = this.props;\n    if (event.key === 'Up' || event.key === 'ArrowUp') {\n      const message = this.props.messages.find((m: IMessage) => m.author === uid);\n      if (message) {\n        const { currentTarget: { value, selectionStart } } = event;\n        if (value.substr(0, selectionStart).split('\\n').length === 1) {\n          const { body } = message;\n          localStorage.setItem('message', body);\n          this.setState({ message: body });\n        }\n      }\n    }\n  };\n\n  onSendMessage = () => {\n    const { message } = this.state;\n    const { user, loading, uid } = this.props;\n\n    if (loading) {\n      return;\n    }\n\n    if (!user) {\n      notify.error('Данные о пользователе отсутствуют');\n      return;\n    }\n\n    if (!user.nickname) {\n      notify.error('Никнейм не установлен. Пройдите в настройки и назовите себя');\n      return;\n    }\n\n    if (!validateMessage(message)) {\n      return;\n    }\n\n    this.setState({ sending: true });\n    actions.sendMessage({\n      uid,\n      message,\n    });\n  };\n\n  getMoreMessages = () => {\n    actions.getMoreMessages({ firstMessage: this.props.messages[this.props.messages.length - 1] })\n  };\n\n  onScroll = (event: React.UIEvent<HTMLDivElement, UIEvent>) => {\n    if (event.currentTarget.scrollTop <= 50) {\n      event.preventDefault();\n      this.getMoreMessages();\n    }\n  };\n\n  uploadFile = (file: File, event: ClipboardEvent<HTMLTextAreaElement> | DragEvent<HTMLTextAreaElement>) => {\n    const { uid } = this.props;\n    if (file) {\n      if (file.type.indexOf('image') > -1) {\n        actions.uploadFile({ uid: uid, file });\n      } else {\n        notify.error('Только картинки могут быть загружены');\n      }\n      event.preventDefault();\n    }\n  };\n\n  onPaste = (e: ClipboardEvent<HTMLTextAreaElement>) => {\n    this.uploadFile(e.clipboardData.files[0], e)\n  };\n\n  onDrop = (e: DragEvent<HTMLTextAreaElement>) => {\n    const file = e.dataTransfer.items[0].getAsFile();\n    if (file)\n      this.uploadFile(file, e)\n  };\n\n  render = () => {\n    const { messages, loading, users } = this.props;\n\n    return (\n      <Spin spinning={loading}>\n        <div className={`chat-wrapper`}>\n          <div\n            className=\"chat-body\"\n            onScroll={this.onScroll}\n          >\n            {messages.map((m: IMessage) => (\n              <Message\n                key={m.time}\n                message={m}\n                user={users[m.author]}\n              />\n            ))}\n          </div>\n          <div className=\"chat-controls\">\n            <Input.TextArea\n              placeholder=\"Введите сообщение\"\n              autoSize={{ minRows: 1, maxRows: 10 }}\n              onChange={this.onChangeMessage}\n              onKeyDown={this.onKeyDown}\n              value={this.state.message}\n              onPaste={this.onPaste}\n              onDrop={this.onDrop}\n            />\n            <SendOutlined\n              onClick={this.onSendMessage}\n            />\n          </div>\n        </div>\n      </Spin>\n    )\n  }\n}\n\nconst mapStateToProps = (state: IState) => {\n  const { messages, uid, loading, users } = state;\n\n  return {\n    messages,\n    uid,\n    loading,\n    users,\n    user: users[uid]\n  };\n};\n\nexport default connect(mapStateToProps)(Chat);\n","import React from 'react';\n\nconst LoadIcon = () => (\n  <svg viewBox=\"64 64 896 896\" focusable=\"false\" className=\"anticon-spin\" data-icon=\"sync\" width=\"1em\" height=\"1em\"\n       fill=\"#ff4d4f\" aria-hidden=\"true\">\n    <path d=\"M168 504.2c1-43.7 10-86.1 26.9-126 17.3-41 42.1-77.7 73.7-109.4S337 212.3 378 195c42.4-17.9 87.4-27 133.9-27s91.5 9.1 133.8 27A341.5 341.5 0 01755 268.8c9.9 9.9 19.2 20.4 27.8 31.4l-60.2 47a8 8 0 003 14.1l175.7 43c5 1.2 9.9-2.6 9.9-7.7l.8-180.9c0-6.7-7.7-10.5-12.9-6.3l-56.4 44.1C765.8 155.1 646.2 92 511.8 92 282.7 92 96.3 275.6 92 503.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8zm756 7.8h-60c-4.4 0-7.9 3.5-8 7.8-1 43.7-10 86.1-26.9 126-17.3 41-42.1 77.8-73.7 109.4A342.45 342.45 0 01512.1 856a342.24 342.24 0 01-243.2-100.8c-9.9-9.9-19.2-20.4-27.8-31.4l60.2-47a8 8 0 00-3-14.1l-175.7-43c-5-1.2-9.9 2.6-9.9 7.7l-.7 181c0 6.7 7.7 10.5 12.9 6.3l56.4-44.1C258.2 868.9 377.8 932 512.2 932c229.2 0 415.5-183.7 419.8-411.8a8 8 0 00-8-8.2z\"/>\n  </svg>\n);\n\nconst CheckIcon = () => (\n  <svg viewBox=\"64 64 896 896\" focusable=\"false\" className=\"\" data-icon=\"check-circle\" width=\"1em\" height=\"1em\"\n       fill=\"currentColor\" aria-hidden=\"true\">\n    <path\n      d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\"\n      fill=\"#52c41a\"/>\n    <path\n      d=\"M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm193.4 225.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.3 0 19.9 5 25.9 13.3l71.2 98.8 157.2-218c6-8.4 15.7-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.4 12.7z\"\n      fill=\"transparent\"/>\n    <path\n      d=\"M699 353h-46.9c-10.2 0-19.9 4.9-25.9 13.3L469 584.3l-71.2-98.8c-6-8.3-15.6-13.3-25.9-13.3H325c-6.5 0-10.3 7.4-6.5 12.7l124.6 172.8a31.8 31.8 0 0051.7 0l210.6-292c3.9-5.3.1-12.7-6.4-12.7z\"\n      fill=\"#52c41a\"/>\n  </svg>\n);\n\nconst Loader = (props: { loading: boolean }) => {\n  const { loading } = props;\n\n  return (\n    <div className=\"loader\">\n      {loading\n        ? (\n          <LoadIcon/>\n        ) : (\n          <CheckIcon/>\n        )\n      }\n    </div>\n  )\n};\n\nexport default Loader;\n","import React, { ChangeEvent } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Card,\n  Input,\n  Button,\n  Popconfirm,\n} from 'antd';\nimport { RouteComponentProps } from 'react-router';\n\nimport { ClearOutlined } from '@ant-design/icons';\n\nimport actions from '../../actions';\nimport { IState, IUser, defaultUser } from '../../reducers';\nimport Avatar from '../Avatar';\nimport Loader from '../Loader';\nimport { getFullTime } from \"../../helpers/utils\";\n\ninterface ISettingsProps extends RouteComponentProps {\n  loading: boolean;\n  user: IUser | null;\n  hasRight: boolean;\n  uid: string;\n}\n\nexport class Settings extends React.Component<ISettingsProps> {\n  componentDidMount = () => {\n    const { user, uid } = this.props;\n    if (!user) {\n      actions.getUser({ uid });\n    }\n  };\n\n  onChange = (field: string) => (event: ChangeEvent<HTMLInputElement>) => {\n    const { user } = this.props;\n    if (!user) return;\n\n    const newSettings = {\n      ...user,\n      [field]: event.target.value,\n    };\n\n    this.setSettings(newSettings);\n  };\n\n  setSettings = (newSettings: {}) => {\n    const { user } = this.props;\n    if (user) {\n      actions.setUser({\n        uid: user.uid,\n        user: newSettings,\n      });\n    }\n  };\n\n  clearAvatar = () => this.setSettings({\n    ...this.props.user,\n    avatar: '',\n  });\n\n  getField = (key: string, value: string, user: IUser) => {\n    const { nickname = '' } = user;\n    const { hasRight } = this.props;\n    const disabled = !hasRight;\n\n    switch (key) {\n      case 'avatar':\n        return (\n          <div>\n            <div style={{ display: 'flex' }}>\n              <Input\n                value={value}\n                onChange={this.onChange(key)}\n                readOnly={disabled}\n              />\n              <Popconfirm\n                title=\"Очистить аватар?\"\n                onConfirm={this.clearAvatar}\n                okText=\"Да\"\n                cancelText=\"Нет\"\n                icon={<ClearOutlined style={{ color: '#ff4d4f'}}/>}\n                disabled={!value}\n              >\n                <Button\n                  disabled={disabled || !value}\n                  danger\n                >\n                  <ClearOutlined/>\n                </Button>\n              </Popconfirm>\n            </div>\n            <Avatar\n              avatar={value}\n              nickname={nickname}\n              size={128}\n              style={{ margin: '8px auto', display: 'block' }}\n            />\n          </div>\n        );\n\n      case 'uid':\n        return (\n          <Input\n            value={value}\n            readOnly\n          />\n        );\n\n      case 'lastOnline':\n        return (\n          <Input\n            value={getFullTime(parseInt(value))}\n            readOnly\n          />\n        );\n\n      default:\n        return (\n          <Input\n            defaultValue={value}\n            onChange={this.onChange(key)}\n            readOnly={disabled}\n          />\n        )\n    }\n  };\n\n  labels: {[key: string]: string} = {\n    'avatar': 'Аватар',\n    'nickname': 'Никнейм',\n    'lastOnline': 'Последняя активность',\n    'uid': 'UID',\n  };\n\n  render = () => {\n    const { user, loading } = this.props;\n\n    return (\n      <Card\n        className=\"settings\"\n        bordered={false}\n        loading={user === undefined}\n      >\n        <Loader loading={loading}/>\n        {user && Object\n          .keys(defaultUser)\n          .map((key: string) => {\n            // @ts-ignore\n            const field = this.getField(key, `${user[key] || ''}`, user);\n            return field && (\n              <Card\n                className={key}\n                key={key}\n                title={this.labels[key]}\n              >\n                {field}\n              </Card>\n            )\n          })\n\n        }\n      </Card>\n    )\n  }\n}\n\nconst mapStateToProps = (state: IState, props: ISettingsProps) => {\n  const { loading, users, currentUser } = state;\n\n  const uid = new URLSearchParams(props.match.params).get('uid') || state.uid || '0';\n  const user = users[uid];\n  if (user && !user.uid && uid) {\n    user.uid = uid;\n  }\n\n  return {\n    loading,\n    user,\n    uid,\n    hasRight: (!!user && !!currentUser) && (currentUser.uid === user.uid || !!currentUser.isAdmin),\n  };\n};\n\nexport default connect(mapStateToProps)(Settings);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Avatar, Card } from 'antd';\n\nimport actions from '../../actions';\n\nconst byeLink = 'https://cdn.lowgif.com/full/fc3d7d9abd06a92e-hi-bear-gifs-get-the-best-gif-on-giphy.gif';\n\nconst Logout = () => {\n  return (\n    <Card>\n      <Avatar\n        src={byeLink}\n        size={256}\n        style={{ margin: '0 auto', display: 'block' }}\n      />\n      <br/>\n      <br/>\n      <Button\n        type=\"primary\"\n        size=\"large\"\n        onClick={() => actions.logout({ })}\n        style={{ width: '100%' }}\n      >\n        Выйти\n      </Button>\n    </Card>\n  )\n};\n\nexport default connect()(Logout);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Card,\n} from 'antd';\nimport { RouteComponentProps } from 'react-router';\n\nimport '../../styles/inventory.scss';\nimport actions from '../../actions';\nimport { IState, IUser, defaultUser } from '../../reducers';\nimport Loader from \"../Loader\";\n\ninterface IInventoryProps extends RouteComponentProps {\n  loading: boolean;\n  user: IUser | null;\n  uid: string;\n}\n\nexport class Inventory extends React.Component<IInventoryProps> {\n  componentDidMount = () => {\n    const { user } = this.props;\n    if (user) {\n      actions.getUser({ uid: user.uid });\n    }\n  };\n\n  render = () => {\n    const { loading } = this.props;\n\n    return (\n      <Card className=\"inventory\">\n        <Loader loading={loading}/>\n        <div className=\"inventory-body\">\n\n        </div>\n      </Card>\n    )\n  }\n}\n\nconst mapStateToProps = (state: IState, props: IInventoryProps) => {\n  const { loading, users } = state;\n  const uid = new URLSearchParams(props.match.params).get('uid') || state.uid || '0';\n\n  return {\n    loading,\n    user: users[uid] || {\n      ...defaultUser,\n      uid,\n    }\n  };\n};\n\nexport default connect(mapStateToProps)(Inventory);\n","import { ConnectedComponent } from 'react-redux';\n\nimport Chat from '../components/Chat/index';\nimport Settings from '../components/Settings';\nimport Logout from '../components/Logout';\nimport Inventory from \"../components/Inventory\";\n\nexport interface IRoute {\n  path: string;\n  component: ConnectedComponent<any, any>;\n  exact?: boolean;\n}\n\nconst routes: IRoute[] = [\n  {\n    path: '/text-roleplay/chat',\n    component: Chat,\n  },\n  {\n    path: '/text-roleplay/:uid/settings',\n    component: Settings,\n    exact: true,\n  },\n  {\n    path: '/text-roleplay/settings',\n    component: Settings,\n    exact: true,\n  },\n  {\n    path: '/text-roleplay/:uid/inventory',\n    component: Inventory,\n    exact: true,\n  },\n  {\n    path: '/text-roleplay/inventory',\n    component: Inventory,\n    exact: true,\n  },\n  {\n    path: '/text-roleplay/logout',\n    component: Logout,\n  },\n];\n\nexport default routes;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nimport actions from '../../actions';\n\nconst Login = () => {\n  return (\n    <Form\n      onFinish={(values) => actions.login(values)}\n    >\n      <Form.Item\n        label=\"Email\"\n        name=\"email\"\n        rules={[{ required: true, message: 'Введите e-mail!' }]}\n      >\n        <Input/>\n      </Form.Item>\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[{ required: true, message: 'Введите пароль!' }]}\n      >\n        <Input.Password/>\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Войти\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default connect()(Login);\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport routes, { IRoute } from '../../configs/routes';\nimport Login from '../Login';\nimport { IState } from \"../../reducers\";\n\ninterface IRouterProps {\n  isLoggedIn: boolean;\n}\n\nfunction Router(props: IRouterProps) {\n  if (!props.isLoggedIn) {\n    return (\n      <Switch>\n        <Route\n          path=\"*\"\n          component={Login}\n        />\n      </Switch>\n    )\n  }\n\n  return (\n    <Switch>\n      {\n        routes.map((value: IRoute) =>\n          <Route\n            key={value.path}\n            path={value.path}\n            component={value.component}\n            exact={value.exact || false}\n          />\n        )\n      }\n      <Redirect to=\"/text-roleplay/chat\"/>\n    </Switch>\n  );\n}\n\nexport default connect((state: IState) => ({ isLoggedIn: state.isLoggedIn }))(Router);\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'antd/dist/antd.css';\n\nimport Menu from './components/Menu';\nimport Router from './components/Router';\n\nimport './App.css';\nimport './styles/antd-dark.scss';\nimport './styles/components.scss';\nimport { listenForActivity } from './helpers/utils';\n\nfunction App() {\n  listenForActivity();\n\n  return (\n    <BrowserRouter>\n      <Menu/>\n      <div className=\"app\">\n        <Router/>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import {\n  initializeApp,\n  auth as fbAuth,\n  database as fbDatabase\n} from 'firebase';\n\nimport firebaseConfig from '../configs/firebase.json';\nimport actions from '../actions';\n\nconst firebase = initializeApp(firebaseConfig);\nconst auth = fbAuth();\nconst database = fbDatabase();\n\nauth.onAuthStateChanged((user) => {\n  if (user) {\n    actions.loginSuccess({ user });\n    actions.getUser({ uid: user.uid, currentUser: true });\n  } else {\n    actions.logout({});\n  }\n});\n\nexport {\n  auth,\n  database,\n  firebase,\n}\n","import { takeLatest } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\n\nimport { auth, database } from '../helpers/firebase';\nimport actions, { IPayload } from '../actions/index';\nimport { formatMessage } from \"../helpers/utils\";\n\nfunction* login(action: AnyAction) {\n  const { email, password } = action;\n\n  try {\n    const user = yield auth.signInWithEmailAndPassword(email, password);\n    actions.loginSuccess({ user });\n    localStorage.setItem('user', JSON.stringify(user.user));\n    localStorage.setItem('uid', user.user.uid);\n  } catch (error) {\n    console.error(error);\n    if (error.code === 'auth/user-not-found') {\n      const user = yield auth.createUserWithEmailAndPassword(email, password);\n      actions.loginSuccess({ user });\n      localStorage.setItem('user', JSON.stringify(user.user));\n      localStorage.setItem('uid', user.uid);\n    } else {\n      actions.loginFail({ error });\n    }\n  }\n}\n\nfunction* logout() {\n  localStorage.removeItem('user');\n  localStorage.removeItem('uid');\n  localStorage.removeItem('loggedIn');\n  yield auth.signOut();\n}\n\nfunction* setUser(payload: IPayload) {\n  const { uid, user } = payload;\n\n  try {\n    yield database\n      .ref('users')\n      .child(uid)\n      .set({\n        ...user,\n        lastOnline: new Date().getTime(),\n        uid,\n      });\n\n    actions.setUserSuccess({});\n    actions.getUser({ uid });\n  } catch (error) {\n    console.error(error);\n    actions.setUserSuccess({ error });\n  }\n}\n\nfunction* sendMessage(payload: IPayload) {\n  const { uid, message } = payload;\n  const time = new Date().getTime();\n\n  try {\n    yield database\n      .ref('messages')\n      .child(`${time}`)\n      .set(formatMessage({\n        time,\n        author: uid,\n        body: `${message} `,\n      }));\n    localStorage.setItem('message', '');\n    actions.sendMessageSuccess({});\n  } catch (error) {\n    console.error(error);\n    actions.sendMessageFail({ error });\n  }\n}\n\nfunction subscribe() {\n  database\n    .ref('messages')\n    .orderByKey()\n    .limitToLast(1)\n    .on('value', (rawMessages) => {\n      const messages = Object.values(rawMessages.val() || {});\n      actions.getMessagesSuccess({\n        messages,\n        concat: true\n      });\n    });\n}\n\nfunction unsubscribe() {\n  database.ref('messages').off();\n}\n\nfunction* getMessages() {\n  const rawMessages = yield database\n    .ref('messages')\n    .orderByKey()\n    .limitToLast(30)\n    .once('value');\n\n  const messages = Object.values(rawMessages.val() || {});\n  actions.getMessagesSuccess({ messages });\n}\n\nfunction* getMoreMessages(payload: IPayload) {\n  const { firstMessage } = payload;\n\n  const rawMessages = yield database\n    .ref('messages')\n    .orderByKey()\n    .endAt(`${firstMessage.time}`)\n    .limitToLast(30)\n    .once('value');\n\n  const messages = Object.values(rawMessages.val() || {});\n  actions.getMessagesSuccess({ messages, concat: true });\n}\n\nconst requestedUsers: { [key: string]: true } = {};\n\nfunction getUser(payload: IPayload) {\n  const { uid, currentUser } = payload;\n\n  if (requestedUsers[uid]) return;\n  requestedUsers[uid] = true;\n  database\n    .ref('users')\n    .child(uid)\n    .on('value', (rawUser) => {\n      const user = rawUser.val() || {};\n      actions.getUserSuccess({ user, uid, currentUser });\n    });\n}\n\nfunction* updateLastOnline() {\n  const uid = localStorage.getItem('uid');\n  if (!uid || uid === 'undefined') return;\n  const time = new Date().getTime();\n\n  localStorage.setItem('lastActivity', `${time}`);\n  yield database\n    .ref('users')\n    .child(`${uid}`)\n    .child('lastOnline')\n    .set(time);\n}\n\nfunction uploadFile(payload: IPayload) {\n  const { file, uid } = payload;\n\n  const request = new XMLHttpRequest();\n  const formData = new FormData();\n\n  formData.append('image', file);\n\n  request.open('POST', 'https://api.imgur.com/3/image/');\n  request.setRequestHeader('Authorization', `Client-ID ea2c833b74d4583`);\n  request.onreadystatechange = () => {\n    if (request.status === 200 && request.readyState === 4) {\n      let res = JSON.parse(request.responseText);\n\n      actions.sendMessage({\n        uid,\n        message: res.data.link,\n      });\n    }\n  };\n\n  request.send(formData);\n}\n\nexport default function* watchForActions() {\n  yield takeLatest('LOGIN', login);\n  yield takeLatest('LOGOUT', logout);\n  yield takeLatest('GET_USER', getUser);\n  yield takeLatest('SET_USER', setUser);\n  yield takeLatest('SEND_MESSAGE', sendMessage);\n  yield takeLatest('GET_MESSAGES', getMessages);\n  yield takeLatest('GET_MORE_MESSAGES', getMoreMessages);\n  yield takeLatest('SUBSCRIBE', subscribe);\n  yield takeLatest('UPDATE_LAST_ONLINE', updateLastOnline);\n  yield takeLatest('UNSUBSCRIBE', unsubscribe);\n  yield takeLatest('UPLOAD_FILE', uploadFile);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport saga from './sagas';\nimport store, { sagaMiddleware } from './helpers/store';\nimport * as serviceWorker from './serviceWorker';\n\nsagaMiddleware.run(saga);\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}