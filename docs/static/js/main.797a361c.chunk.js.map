{"version":3,"sources":["components/Menu.tsx","helpers/dice.tsx","helpers/utils.tsx","reducers/index.ts","helpers/store.tsx","actions/index.tsx","components/Avatar.tsx","components/Image.tsx","components/Item.tsx","components/ItemById.tsx","containers/Chat/MessageBody.tsx","containers/Chat/Message.tsx","containers/Chat/index.tsx","components/Loader/LoadIcon.tsx","components/Loader/CheckIcon.tsx","components/Loader/index.tsx","containers/Settings/index.tsx","components/Logout.tsx","reducers/interfaces.ts","containers/Items/ItemCreator.tsx","containers/Items/ItemsList.tsx","containers/Items/index.tsx","containers/Inventory/index.tsx","configs/routes.tsx","components/Help.tsx","components/Login.tsx","components/Router.tsx","App.tsx","helpers/firebase.tsx","sagas/auth.ts","sagas/users.ts","sagas/messages.ts","sagas/items.ts","sagas/index.ts","serviceWorker.ts","index.tsx"],"names":["connect","state","isLoggedIn","withRouter","props","Fragment","mode","window","innerWidth","selectedKeys","location","pathname","split","pop","menu","map","value","Item","key","path","disabled","link","href","target","rel","to","label","diceRegex","diceRegexG","rollDice","amount","size","Array","fill","min","max","Math","floor","random","colorFromString","str","hash","i","length","charCodeAt","color","toString","substr","isOnline","time","parseInt","localStorage","getItem","Date","getTime","doubleDigit","date","getHours","getMinutes","getSeconds","join","getDate","getMonth","getFullYear","getFullTime","isURL","test","processMessages","messages","filter","item","pos","self","findIndex","_i","sort","a","b","m","index","author","grouped","formatMessage","message","body","rolls","match","roll","_amount","_size","results","maxResult","minResult","sum","reduce","splice","exportRolls","indexOf","isRP","mentioned","validateMessage","notify","error","some","user","JSON","parse","setItem","uid","initialState","userData","settings","loading","users","currentUser","items","defaultUser","lastOnline","nickname","avatar","reducer","action","type","concat","forEach","id","Object","values","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","composeWithDevTools","applyMiddleware","dispatch","createAction","payload","createAsyncAction","typeName","toLowerCase","replace","toUpperCase","actions","updateLastOnline","logout","Avatar","style","rest","_avatar","src","backgroundColor","Image","visible","toggleModal","setState","this","onClick","alt","className","title","CloseOutlined","closable","footer","onCancel","width","maxWidth","Component","getStats","armor","capacity","labels","wearable","weapon","render","name","price","description","image","effect","weight","approved","stats","shape","find","getItemById","MessageBody","data","itemId","trim","searchParams","URL","params","videoId","get","regExMatch","lastMatch","getVideoId","listId","height","frameBorder","allow","allowFullScreen","_body","_rolls","word","rollIndex","summing","importRolls","Message","undefined","placement","extra","Chat","sending","componentDidMount","getMessages","subscribe","componentWillUnmount","unsubscribe","componentDidUpdate","prevProps","getUser","onChangeMessage","event","onKeyDown","shiftKey","preventDefault","onSendMessage","currentTarget","selectionStart","sendMessage","getMoreMessages","firstMessage","onScroll","scrollTop","uploadFile","file","onPaste","e","clipboardData","files","onDrop","dataTransfer","getAsFile","spinning","TextArea","placeholder","autoSize","minRows","maxRows","onChange","SendOutlined","viewBox","focusable","data-icon","aria-hidden","d","Loader","LoadIcon","CheckIcon","Settings","field","newSettings","setSettings","setUser","clearAvatar","getField","hasRight","display","readOnly","onConfirm","okText","cancelText","icon","ClearOutlined","danger","margin","defaultValue","bordered","keys","React","URLSearchParams","isAdmin","Logout","defaultItem","ItemCreator","types","clearImage","fields","Option","precision","step","checked","onSubmit","newItem","content","onClose","centered","ItemsList","getFooter","controls","controlButtons","condition","overlay","trigger","InsertRowBelowOutlined","Items","creatingItem","editingItem","searchString","itemsToLoad","showApproved","showNotApproved","filters","getItems","toggleCreatingItem","toggleEditingItem","onCreateItem","getCreators","onFilterChange","getFilters","getButton","tabIndex","Group","flexDirection","getControls","allowClear","FilterOutlined","deleteModal","Modal","confirm","maskClosable","onOk","close","deleteItem","cardControls","giveItem","itemType","Boolean","getItemsList","getMoreItems","lastItem","_searchString","noop","Inventory","getInventoryItems","inventory","inventoryItems","loadedItems","notLoadedItems","inventoryItem","push","shift","passItem","demonstrate","use","autoFocusButton","removeItem","success","all","routes","component","exact","onFinish","login","rules","required","Password","htmlType","Login","buildDate","App","callback","eventName","document","addEventListener","listenForActivity","firebase","_firebase","initializeApp","firebaseConfig","auth","database","onAuthStateChanged","loginSuccess","watchForActions","email","password","signInWithEmailAndPassword","stringify","console","code","createUserWithEmailAndPassword","loginFail","signOut","takeLatest","ref","child","set","setUserSuccess","requestedUsers","on","rawUser","val","getUserSuccess","sendMessageSuccess","orderByKey","limitToLast","rawMessages","getMessagesSuccess","off","once","endAt","request","XMLHttpRequest","formData","FormData","append","open","setRequestHeader","onreadystatechange","status","readyState","res","responseText","send","getInventoryItem","takeItem","itemData","setItemSuccess","limitToFirst","rawItems","getItemsSuccess","rawItem","startAt","log","remove","deleteItemSuccess","passItemSuccess","removed","passItemFail","sameItem","removeItemSuccess","removeItemFail","giveItemFail","fullId","giveItemSuccess","ownerId","takeEvery","watchAll","hostname","run","saga","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.797a361c.chunk.js","sourcesContent":["import React from 'react';\nimport { Menu as AntdMenu } from 'antd';\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport '../styles/menu.scss';\nimport menu from '../configs/menu.json';\nimport { IState } from '../reducers/interfaces';\n\ninterface IMenuProps extends RouteComponentProps {\n  isLoggedIn: boolean;\n}\n\ninterface IMenuConfig {\n  label: string;\n  path: string;\n  link?: boolean;\n}\n\nfunction Menu(props: IMenuProps) {\n  if (!props.isLoggedIn) {\n    return <React.Fragment/>;\n  }\n\n  const mode = window.innerWidth < 767\n    ? 'horizontal'\n    : 'inline';\n\n  return (\n    <AntdMenu\n      mode={mode}\n      selectedKeys={[props.location.pathname.split('/').pop() || '']}\n    >\n      {menu.map((value: IMenuConfig) => (\n        <AntdMenu.Item\n          key={value.path.split('/').pop()}\n          disabled={value.path === props.location.pathname}\n        >\n          {\n            value.link\n              ? (\n\n                <a\n                  href={value.path}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Помощь\n                </a>\n              ) : (\n                <Link to={value.path}>\n                  {value.label}\n                </Link>\n              )\n          }\n        </AntdMenu.Item>\n      ))}\n    </AntdMenu>\n  );\n}\n\nexport default connect((state: IState) => ({ isLoggedIn: state.isLoggedIn }))(withRouter(Menu));\n","import React from 'react';\nimport { Tooltip } from 'antd';\n\nexport interface IRoll {\n  roll: string;\n  results: number[];\n  amount: number;\n  size: number;\n  maxResult: number;\n  minResult: number;\n  sum: number;\n}\n\nexport const diceRegex = /([1-9]|10)[dд]((10|12|20)|[468])/miu;\nexport const diceRegexG = /([1-9]|10)[dд]((10|12|20)|[468])/miug;\n\nexport const getRandomInt = (min: number, max: number) =>\n  Math.floor(Math.random() * ((max + 1) - min) + min);\n\nexport const hasDice = (str: string) =>\n  /\\d+[dд]\\d+/imu.test(str);\n\nexport const rollDice = (amount: number, size: number) => {\n  return new Array(amount).fill(amount + size).map(() => getRandomInt(1, size));\n};\n\nexport const exportRolls = (str: string) => {\n  const rolls = str.match(diceRegexG);\n  if (rolls) {\n    return rolls.map((roll: string): IRoll => {\n      const [_amount, _size] = roll.split(/[dд]/);\n      const amount = parseInt(_amount);\n      const size = parseInt(_size);\n      const results = rollDice(amount, size);\n\n      return ({\n        maxResult: size * amount,\n        minResult: amount,\n        sum: results.reduce((a, b) => a + b, 0),\n        roll,\n        results,\n        amount,\n        size,\n      })\n    }).splice(0, 10);\n  }\n  return [];\n};\n\nexport const importRolls = (body: string, _rolls: IRoll[]) => {\n  const rolls = [..._rolls]; // Avoid mutations\n  return body.split(' ').map((word: string, index: number) => {\n    const rollIndex = rolls.findIndex(({ roll }) => roll === word);\n    if (rollIndex > -1) {\n      const {\n        results,\n        maxResult,\n        minResult,\n        sum\n      } = rolls.splice(rollIndex, 1)[0];\n\n      const summing = results.length > 1\n        ? `${sum} = ${results.join(' + ')}`\n        : `${results.join(' + ')}`;\n\n      const className = (sum === maxResult && 'critHit') || (sum === minResult && 'critMiss') || '';\n\n      return (\n        <React.Fragment key={word + index}>\n          {' '}\n          <Tooltip title={summing}>\n            <b className={className}>\n              {word}({sum})\n            </b>\n          </Tooltip>\n        </React.Fragment>\n      )\n    }\n    return ` ${word}`;\n  });\n};\n","import { message as notify } from 'antd';\n\nimport actions from '../actions';\nimport { IMessage } from '../reducers/interfaces';\nimport { diceRegex, exportRolls, hasDice } from './dice';\n\nexport const camelize = (str: string) => {\n  return str\n    .toLowerCase()\n    .replace(/_./g, (m) => m.toUpperCase())\n    .replace(/_/g, '')\n};\n\nexport const colorFromString = (str: string) => {\n  if (!str) return '#000';\n\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n  for (let i = 0; i < 3; i++) {\n    let value = (hash >> (i * 8)) & 0xFF;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n\n  return color;\n};\n\nexport const isOnline = (time?: number) => {\n  if (!time) return false;\n  const lastActivity = time || parseInt(localStorage.getItem('lastActivity') || '0');\n  return (lastActivity + 180000) > new Date().getTime();\n};\n\nexport const doubleDigit = (str: number) => `${str}`.length === 1\n  ? `0${str}`\n  : str;\n\nexport const getTime = (time: number) => {\n  const date = new Date(time);\n  return [date.getHours(), date.getMinutes(), date.getSeconds()].map(doubleDigit).join(':');\n};\n\nexport const getDate = (time: number) => {\n  const date = new Date(time);\n  return [date.getDate(), date.getMonth() + 1, date.getFullYear()].map(doubleDigit).join('.');\n};\n\nexport const getFullTime = (time: number) => {\n  const date = new Date(time);\n  const messageTime = [date.getHours(), date.getMinutes(), date.getSeconds()].map(doubleDigit).join(':');\n  const messageDate = [date.getDate(), date.getMonth() + 1, date.getFullYear()].map(doubleDigit).join('.');\n\n  return [messageTime, messageDate].join(' ');\n};\n\nexport const listenForActivity = () => {\n  const callback = () => {\n    if (!isOnline(parseInt(localStorage.getItem('lastActivity') || '0') - 60000))\n      actions.updateLastOnline({});\n  };\n\n  [\n    'mousedown',\n    'mousemove',\n    'keydown',\n    'scroll',\n    'touchstart'\n  ].forEach((eventName) => {\n    document.addEventListener(eventName, callback, true);\n  });\n  callback();\n};\n\nexport const isURL = (str: string) =>\n  /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/igm.test(str);\n\nexport const processMessages = (messages: IMessage[]) => {\n  return messages\n    .filter((item: IMessage, pos: number, self: IMessage[]) =>\n      self.findIndex((_i: IMessage) => _i.time === item.time) === pos\n    )\n    .sort((a: IMessage, b: IMessage) => b.time - a.time)\n    .map((m: IMessage, index: number, messages: IMessage[]) => {\n      if (index < messages.length - 2) {\n        if (m.author === messages[index + 1].author) {\n          return {\n            ...m,\n            grouped: true,\n          }\n        }\n      }\n      return m;\n    })\n};\n\nexport const formatMessage = (message: IMessage) => {\n  const { body } = message;\n\n  if (diceRegex.test(body)) {\n    message.rolls = exportRolls(body);\n  }\n\n  if (body.indexOf('*') > -1) {\n    message.isRP = true;\n  }\n\n  if (/(@[a-zа-яё]*)/mui.test(body)) {\n    message.mentioned = true;\n  }\n\n  return message;\n};\n\nexport const validateMessage = (message: string) => {\n\n  if (!message) {\n    notify.error('Сообщение пустое');\n    return false;\n  }\n\n  if (hasDice(message)) {\n    const rolls: string[] | null = message.match(/(( |^)[a-zа-я]+\\d+[dд]\\d+)|(\\d+[dд]\\d+[a-zа-я]+( |$))|(\\d+[dд]\\d+)/miug);\n    if (rolls) {\n      const wasError = rolls.some((roll: string) => {\n        if (/(([a-zа-яё])\\d+[dд]\\d+)|(\\d+[dд]\\d+([a-zа-яё]))/miug.test(roll)) {\n          notify.error(`Ошибка в дайсе ${roll}. Рядом не должно быть символов`);\n          return true;\n        }\n\n        const [amount, size] = roll.split(/[dд]/u);\n\n        if (parseInt(amount) > 10) {\n          notify.error(`Ошибка в дайсе ${roll}. Нельзя бросать больше 10-ти дайсов`);\n          return true;\n        }\n\n        if ([2,4,6,8,10,12,20].indexOf(parseInt(size)) === -1) {\n          notify.error(`Ошибка в дайсе ${roll}. Можно бросать только дайсы размеров 4 6 8 10 12 20`);\n          return true;\n        }\n\n        return false;\n      });\n      if (wasError) return false;\n    }\n  }\n  return true;\n};\n\nexport const generateID = () =>\n  '_' + Math.random().toString(36).substr(2, 9);\n","import { processMessages } from '../helpers/utils';\nimport { IAction, IItem, IState } from \"./interfaces\";\n\nconst user = JSON.parse(localStorage.getItem('user') || 'null');\nif (user) localStorage.setItem('uid', user.uid);\nexport const initialState: IState = {\n  userData: user,\n  isLoggedIn: user !== null,\n  settings: false,\n  loading: false,\n  messages: [],\n  users: {},\n  uid: user ? user.uid : '',\n  currentUser: null,\n  items: [],\n  error: false,\n};\n\nexport const defaultUser = {\n  lastOnline: 0,\n\n  nickname: '',\n  avatar: '',\n\n  uid: '',\n};\n\nconst reducer = (state = initialState, action: IAction) => {\n  switch (action.type) {\n    case 'LOGIN':\n    case 'GET_MESSAGES':\n    case 'GET_MORE_MESSAGES':\n    case 'SEND_MESSAGE':\n    case 'SET_USER':\n    case 'GET_ITEMS':\n    case 'GET_MORE_ITEMS':\n    case 'GET_ITEMS_BY_ID':\n    case 'CREATE_ITEM':\n    case 'DELETE_ITEM':\n    case 'GIVE_ITEM':\n    case 'REMOVE_ITEM':\n    case 'PASS_ITEM':\n    case 'UPLOAD_FILE': {\n      return {\n        ...state,\n        loading: true,\n      }\n    }\n    case 'SET_USER_SUCCESS':\n    case 'SET_USER_FAIL':\n    case 'GET_MESSAGES_FAIL':\n    case 'GET_MORE_MESSAGES_SUCCESS':\n    case 'GET_MORE_MESSAGES_FAIL':\n    case 'GIVE_ITEM_SUCCESS':\n    case 'REMOVE_ITEM_SUCCESS':\n    case 'REMOVE_ITEM_FAIL':\n    case 'PASS_ITEM_SUCCESS':\n    case 'PASS_ITEM_FAIL':\n    case 'SEND_MESSAGE_FAIL': {\n      return {\n        ...state,\n        loading: false,\n      }\n    }\n    case 'LOGIN_SUCCESS': {\n      return {\n        ...state,\n        uid: action.user.uid,\n        userData: action.user,\n        isLoggedIn: action.user !== null,\n      }\n    }\n    case 'LOGIN_FAIL': {\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      }\n    }\n    case 'LOGOUT': {\n      return {\n        ...state,\n        userData: null,\n        isLoggedIn: false,\n      }\n    }\n    case 'GET_MESSAGES_SUCCESS': {\n      const messages = action.concat\n        ? [...state.messages, ...action.messages]\n        : action.messages;\n\n      return {\n        ...state,\n        messages: processMessages(messages),\n        loading: false,\n      }\n    }\n    case 'GET_USER_SUCCESS': {\n      return {\n        ...state,\n        currentUser: action.currentUser\n          ? action.user\n          : state.currentUser,\n        users: {\n          ...state.users,\n          [action.uid]: action.user,\n        },\n      }\n    }\n    case 'GET_ITEMS_SUCCESS': {\n      const items: {[key: string]: IItem} = {};\n      [...state.items, ...action.items]\n        .forEach((item: IItem) => items[item.id] = item);\n\n      return {\n        ...state,\n        loading: false,\n        items: Object.values(items),\n      }\n    }\n    case 'DELETE_ITEM_SUCCESS': {\n      return {\n        ...state,\n        loading: false,\n        items: state.items.filter((item: IItem) => item.id !== action.id),\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { initialState } from '../reducers';\nimport reducers from '../reducers'\n\nexport const sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  reducers,\n  initialState,\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\n);\n\nexport default store;\n","import store from '../helpers/store';\nimport { camelize } from '../helpers/utils';\n\nconst dispatch = store.dispatch;\n\nexport interface IPayload {\n  [key: string]: any;\n}\n\ninterface IActions {\n  [key: string]: (payload: IPayload) => void;\n}\n\nconst createAction =\n  (type: string) =>\n    (payload?: IPayload) =>\n      dispatch({ type, ...payload });\n\nconst createAsyncAction = (type: string) => {\n  const typeName = camelize(type);\n  return {\n    [typeName]: createAction(type),\n    [`${typeName}Success`]: createAction(`${type}_SUCCESS`),\n    [`${typeName}Fail`]: createAction(`${type}_FAIL`),\n  }\n};\n\nconst actions: IActions = {\n  ...createAsyncAction('LOGIN'),\n  ...createAsyncAction('GET_USER'),\n  ...createAsyncAction('GET_MESSAGES'),\n  ...createAsyncAction('GET_MORE_MESSAGES'),\n  ...createAsyncAction('SET_USER'),\n  ...createAsyncAction('SEND_MESSAGE'),\n  ...createAsyncAction('SUBSCRIBE'),\n  ...createAsyncAction('UNSUBSCRIBE'),\n  ...createAsyncAction('UPLOAD_FILE'),\n  ...createAsyncAction('SET_ITEM'),\n  ...createAsyncAction('DELETE_ITEM'),\n  ...createAsyncAction('GET_ITEMS'),\n  ...createAsyncAction('GET_ITEM_BY_ID'),\n  ...createAsyncAction('GET_MORE_ITEMS'),\n  ...createAsyncAction('GIVE_ITEM'),\n  ...createAsyncAction('REMOVE_ITEM'),\n  ...createAsyncAction('PASS_ITEM'),\n  ...createAsyncAction('TAKE_ITEM'),\n  updateLastOnline: createAction('UPDATE_LAST_ONLINE'),\n  logout: createAction('LOGOUT'),\n};\n\nexport default actions;\n","import React from 'react';\nimport { Avatar as AntdAvatar } from 'antd';\nimport { AvatarProps } from 'antd/es/avatar';\nimport { colorFromString, isURL } from \"../helpers/utils\";\n\ninterface IAvatarProps extends AvatarProps {\n  avatar: string;\n  nickname: string;\n}\n\nconst Avatar = (props: IAvatarProps) => {\n  const { avatar, nickname, style, ...rest } = props;\n\n  const _avatar = isURL(avatar) ? avatar : '';\n  return (\n    <AntdAvatar\n      src={_avatar}\n      style={{ ...style, backgroundColor: _avatar ? 'transparent' : colorFromString(nickname) }}\n      {...rest}\n    >\n      {nickname}\n    </AntdAvatar>\n  )\n};\n\nexport default Avatar;\n","import React, { Component } from 'react';\nimport { Modal } from 'antd';\nimport { CloseOutlined } from '@ant-design/icons';\n\nclass Image extends Component<{ src: string }, { visible: boolean }> {\n  state = { visible: false };\n\n  toggleModal = () => {\n    this.setState({\n      visible: !this.state.visible,\n    });\n  };\n\n  render() {\n    const { src } = this.props;\n\n    return (\n      <React.Fragment>\n        <img\n          onClick={this.toggleModal}\n          src={src}\n          alt=\"\"\n          className=\"chat-image\"\n        />\n        <Modal\n          title={\n            <div>\n              <a\n                href={src}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {src}\n              </a>\n              <CloseOutlined onClick={this.toggleModal}/>\n            </div>\n          }\n          className=\"image-modal\"\n          closable={false}\n          footer={null}\n          visible={this.state.visible}\n          onCancel={this.toggleModal}\n          width=\"fit-content\"\n        >\n          <img\n            style={{\n              maxWidth: '90vw',\n            }}\n            src={src}\n            alt=\"\"\n          />\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Image;\n","import React, { Component } from 'react';\nimport { Card } from 'antd';\n\nimport '../styles/item.scss';\nimport { IItem } from '../reducers/interfaces';\nimport Avatar from \"./Avatar\";\n\ninterface IItemProps {\n  item: IItem,\n  showTechInfo?: boolean,\n  footer?: JSX.Element,\n}\n\nclass Item extends Component<IItemProps> {\n  getStats = () => {\n    const { type, armor, amount, capacity } = this.props.item;\n\n    switch (type) {\n      case 'wearable':\n        return armor;\n\n      case 'weapon':\n        return capacity;\n\n      default:\n        return `${amount}шт`;\n    }\n  };\n\n  labels = {\n    wearable: 'Защита',\n    weapon: 'Магазин',\n  };\n\n  render = () => {\n    const {\n      name = this.props.item.id,\n      price = 0,\n      description,\n      image,\n      effect,\n      weight = 0,\n      type,\n      approved,\n    } = this.props.item;\n    const { footer } = this.props;\n\n    const stats = this.getStats();\n    return (\n      <Card className={`item ${approved ? '' : 'not-approved'}`}>\n        <div className=\"item-info\">\n          <div className=\"item-name\">{name}</div>\n          <div className=\"item-subinfo\">\n            <div className=\"item-price\">\n              Цена: {price}\n            </div>\n            <div className=\"item-weight\">\n              Вес: {weight}lb\n            </div>\n          </div>\n        </div>\n        {(image || description) && (\n          <div className=\"item-body\">\n            {image && <div className=\"item-image\">\n              <Avatar avatar={image} nickname={name} shape=\"square\"/>\n            </div>}\n            {description}\n          </div>\n        )}\n\n        {(stats || effect) && (\n          <div className=\"item-prefooter\">\n            <div className=\"item-ammo\">\n              {\n                // @ts-ignore\n                stats ? `${this.labels[type] || 'Кол-во'}: ${stats}` : ''\n              }\n            </div>\n            <div className=\"item-effect\">{effect}</div>\n          </div>\n        )}\n        {footer && (\n          <div className=\"item-footer\">\n          {footer}\n          </div>\n        )}\n      </Card>\n    )\n  }\n}\n\nexport default Item;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Item from './Item';\nimport { IItem, IState } from \"../reducers/interfaces\";\nimport actions from \"../actions\";\n\ninterface IItemByIdProps {\n  id: string;\n  loading: boolean;\n  items: IItem[];\n}\n\nconst ItemById = (props: IItemByIdProps) => {\n  const { id, loading, items } = props;\n\n  const item = items.find((item: IItem) => item.id === id);\n  if (!item && !loading) {\n    actions.getItemById({ id });\n  }\n\n  return item ? (\n    <Item item={item}/>\n  ) : (\n    <React.Fragment/>\n  );\n};\n\nconst mapStateToProps = (state: IState) => {\n  const { loading, items } = state;\n\n  return { loading, items }\n};\n\nexport default connect(mapStateToProps)(ItemById);\n","import React from 'react';\nimport { Button} from 'antd';\n\nimport { isURL } from '../../helpers/utils';\nimport { IMessage } from '../../reducers/interfaces';\nimport { importRolls } from '../../helpers/dice';\nimport Image from '../../components/Image';\nimport ItemById from '../../components/ItemById';\nimport actions from \"../../actions\";\n\ninterface IMessageBodyProps {\n  message: IMessage;\n}\n\nconst MessageBody = (props: IMessageBodyProps) => {\n    const {\n      body,\n      isRP,\n      rolls,\n      data,\n    } = props.message;\n\n    if (data) {\n      const { itemId, item } = data;\n\n      if (itemId) {\n        return (\n          <>\n            <i className=\"rp-message\">\n              {body}\n              <ItemById id={itemId.trim()}/>\n              {item && (\n                <Button className=\"take-button\">\n                  Забрать предмет\n                </Button>\n              )}\n            </i>\n          </>\n        )\n      }\n    }\n\n    if (isURL(body)) {\n      if (/\\.(gif|jpe?g|tiff|png|webp|bmp)/ig.test(body)) {\n        return (\n          <Image src={body}/>\n        )\n      }\n\n      const link = (\n        <a\n          href={body}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {body}\n        </a>\n      );\n\n      // https://youtu.be/afeWQn4DFKQ\n      if (body.indexOf('youtu') > -1) {\n        const getVideoId = (body: string) => {\n          if (body.indexOf('youtu.be') > -1) {\n            const regExMatch = body.match(/youtu\\.be\\/.* /i);\n            if (regExMatch) {\n              const lastMatch = regExMatch.pop();\n              if (lastMatch) {\n                return lastMatch.split('/').pop() || '';\n              }\n            }\n          } else {\n            return new URL(body).searchParams.get('v') || '';\n          }\n          return ''\n        };\n\n        const searchParams = new URL(body).searchParams;\n        let params = 'listType=playlist';\n        const videoId = getVideoId(body);\n\n        if (videoId) {\n          const listId = searchParams.get('list');\n          if (listId)\n            params += '&list=' + listId;\n\n          const time = searchParams.get('t');\n          if (time)\n            params += '&start=' + time;\n\n          return (\n            <>\n              {link}\n              <iframe\n                title={videoId}\n                id=\"ytplayer\"\n                width=\"100%\"\n                height=\"360\"\n                src={`http://www.youtube.com/embed/${videoId}?${params}`}\n                frameBorder=\"0\"\n                allow=\"accelerometer; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n              />\n            </>\n          )\n        }\n      }\n\n      return link;\n    }\n\n    const _body = rolls\n      ? importRolls(body, rolls)\n      : body;\n\n    if (isRP) {\n      return (\n        <i className=\"rp-message\">\n          {_body}\n        </i>\n      )\n    }\n\n    return <span>{_body}</span>;\n  }\n;\n\nexport default MessageBody;\n","import React from 'react';\nimport { Card, Tooltip } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { IMessage, IUser } from '../../reducers/interfaces';\nimport Avatar from '../../components/Avatar';\nimport MessageBody from './MessageBody';\nimport {\n  getDate,\n  getFullTime,\n  getTime,\n  isOnline\n} from '../../helpers/utils';\n\ninterface IMessageProps {\n  message: IMessage,\n  user: IUser,\n}\n\nconst Message = (props: IMessageProps) => {\n  const {\n    message: {\n      time,\n      grouped,\n      body,\n      mentioned,\n    },\n    user,\n  } = props;\n\n  const title = user && (\n    <Link to={`./${user.uid}/settings`}>\n      <Tooltip\n        title={user.lastOnline ? `Последняя активность: ${getFullTime(user.lastOnline)}` : undefined}\n        placement=\"left\"\n      >\n        <div className={`chat-message__title ${isOnline(user.lastOnline) ? 'online' : ''}`}>\n          <Avatar\n            avatar={user.avatar}\n            nickname={user.nickname}\n          />\n          <div className=\"chat-message__nickname\">\n            {user.nickname || user.uid}\n          </div>\n        </div>\n      </Tooltip>\n    </Link>\n  );\n\n  return (\n    <Card\n      className={`chat-message ${grouped ? 'grouped' : ''} ${mentioned && user && (body.indexOf(`@${user.nickname} `) > -1) ? 'mentioned' : ''}`}\n      title={title}\n      key={time}\n      extra={(\n        <Tooltip title={getDate(time)}>\n          <div className=\"chat-time\">{getTime(time)}</div>\n        </Tooltip>\n      )}\n    >\n      <MessageBody message={props.message}/>\n    </Card>\n  );\n};\n\nexport default Message;\n","import React, {\n  ChangeEvent,\n  Component,\n  KeyboardEvent,\n  ClipboardEvent,\n  DragEvent,\n} from 'react';\nimport { connect } from 'react-redux';\nimport { SendOutlined } from '@ant-design/icons';\nimport {\n  Input,\n  message as notify,\n  Spin,\n} from 'antd';\n\nimport '../../styles/chat.scss';\nimport actions from '../../actions';\nimport { IMessage, IState, IUser, IUsers } from '../../reducers/interfaces';\nimport Message from './Message';\nimport { validateMessage } from \"../../helpers/utils\";\n\ninterface IChatProps {\n  messages: IMessage[],\n  uid: string,\n  loading: boolean,\n  users: IUsers;\n  user: IUser;\n}\n\ninterface IChatState {\n  message: string;\n  sending: boolean;\n}\n\nclass Chat extends Component<IChatProps, IChatState> {\n  state = {\n    message: '',\n    sending: false,\n  };\n\n  componentDidMount = () => {\n    actions.getMessages({});\n    actions.subscribe({});\n    this.setState({ message: localStorage.getItem('message') || '' });\n  };\n\n  componentWillUnmount = () => {\n    actions.unsubscribe({});\n  };\n\n  componentDidUpdate = (prevProps: IChatProps) => {\n    const { messages, users } = this.props;\n\n    if (this.state.sending && prevProps.messages !== messages) {\n      localStorage.setItem('message', '');\n      this.setState({\n        message: '',\n        sending: false,\n      });\n    }\n\n    messages.forEach((m: IMessage) => {\n      if (!users[m.author]) {\n        actions.getUser({ uid: m.author });\n      }\n    });\n  };\n\n  onChangeMessage = (event: ChangeEvent<HTMLTextAreaElement>) => {\n    const message = event.target.value;\n    localStorage.setItem('message', message);\n    this.setState({ message });\n  };\n\n  onKeyDown = (event: KeyboardEvent<HTMLTextAreaElement>) => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n\n      this.onSendMessage();\n    }\n\n    const { uid } = this.props;\n    if (event.key === 'Up' || event.key === 'ArrowUp') {\n      const message = this.props.messages.find((m: IMessage) => m.author === uid);\n      if (message) {\n        const { currentTarget: { value, selectionStart } } = event;\n        if (value.substr(0, selectionStart).split('\\n').length === 1) {\n          const { body } = message;\n          localStorage.setItem('message', body);\n          this.setState({ message: body });\n        }\n      }\n    }\n  };\n\n  onSendMessage = () => {\n    const { message } = this.state;\n    const { user, loading, uid } = this.props;\n\n    if (loading) {\n      return;\n    }\n\n    if (!user) {\n      notify.error('Данные о пользователе отсутствуют');\n      return;\n    }\n\n    if (!user.nickname) {\n      notify.error('Никнейм не установлен. Пройдите в настройки и назовите себя');\n      return;\n    }\n\n    if (!validateMessage(message)) {\n      return;\n    }\n\n    this.setState({ sending: true });\n    actions.sendMessage({\n      uid,\n      message,\n    });\n  };\n\n  getMoreMessages = () => {\n    actions.getMoreMessages({ firstMessage: this.props.messages[this.props.messages.length - 1] })\n  };\n\n  onScroll = (event: React.UIEvent<HTMLDivElement, UIEvent>) => {\n    if (event.currentTarget.scrollTop <= 50) {\n      event.preventDefault();\n      this.getMoreMessages();\n    }\n  };\n\n  uploadFile = (file: File, event: ClipboardEvent<HTMLTextAreaElement> | DragEvent<HTMLTextAreaElement>) => {\n    const { uid } = this.props;\n    if (file) {\n      if (file.type.indexOf('image') > -1) {\n        actions.uploadFile({ uid: uid, file });\n      } else {\n        notify.error('Только картинки могут быть загружены');\n      }\n      event.preventDefault();\n    }\n  };\n\n  onPaste = (e: ClipboardEvent<HTMLTextAreaElement>) => {\n    this.uploadFile(e.clipboardData.files[0], e)\n  };\n\n  onDrop = (e: DragEvent<HTMLTextAreaElement>) => {\n    const file = e.dataTransfer.items[0].getAsFile();\n    if (file)\n      this.uploadFile(file, e)\n  };\n\n  render = () => {\n    const { messages, loading, users } = this.props;\n\n    return (\n      <Spin spinning={loading}>\n        <div className={`chat-wrapper`}>\n          <div\n            className=\"chat-body\"\n            onScroll={this.onScroll}\n          >\n            {messages.map((m: IMessage) => (\n              <Message\n                key={m.time}\n                message={m}\n                user={users[m.author]}\n              />\n            ))}\n          </div>\n          <div className=\"chat-controls\">\n            <Input.TextArea\n              placeholder=\"Введите сообщение\"\n              autoSize={{ minRows: 1, maxRows: 10 }}\n              onChange={this.onChangeMessage}\n              onKeyDown={this.onKeyDown}\n              value={this.state.message}\n              onPaste={this.onPaste}\n              onDrop={this.onDrop}\n            />\n            <SendOutlined\n              onClick={this.onSendMessage}\n            />\n          </div>\n        </div>\n      </Spin>\n    )\n  }\n}\n\nconst mapStateToProps = (state: IState) => {\n  const { messages, uid, loading, users } = state;\n\n  return {\n    messages,\n    uid,\n    loading,\n    users,\n    user: users[uid]\n  };\n};\n\nexport default connect(mapStateToProps)(Chat);\n","import React from 'react';\n\nexport default () => (\n  <svg viewBox=\"64 64 896 896\" focusable=\"false\" className=\"anticon-spin\" data-icon=\"sync\" width=\"1em\" height=\"1em\"\n       fill=\"#ff4d4f\" aria-hidden=\"true\">\n    <path d=\"M168 504.2c1-43.7 10-86.1 26.9-126 17.3-41 42.1-77.7 73.7-109.4S337 212.3 378 195c42.4-17.9 87.4-27 133.9-27s91.5 9.1 133.8 27A341.5 341.5 0 01755 268.8c9.9 9.9 19.2 20.4 27.8 31.4l-60.2 47a8 8 0 003 14.1l175.7 43c5 1.2 9.9-2.6 9.9-7.7l.8-180.9c0-6.7-7.7-10.5-12.9-6.3l-56.4 44.1C765.8 155.1 646.2 92 511.8 92 282.7 92 96.3 275.6 92 503.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8zm756 7.8h-60c-4.4 0-7.9 3.5-8 7.8-1 43.7-10 86.1-26.9 126-17.3 41-42.1 77.8-73.7 109.4A342.45 342.45 0 01512.1 856a342.24 342.24 0 01-243.2-100.8c-9.9-9.9-19.2-20.4-27.8-31.4l60.2-47a8 8 0 00-3-14.1l-175.7-43c-5-1.2-9.9 2.6-9.9 7.7l-.7 181c0 6.7 7.7 10.5 12.9 6.3l56.4-44.1C258.2 868.9 377.8 932 512.2 932c229.2 0 415.5-183.7 419.8-411.8a8 8 0 00-8-8.2z\"/>\n  </svg>\n);\n","import React from 'react';\n\nexport default () => (\n  <svg viewBox=\"64 64 896 896\" focusable=\"false\" className=\"\" data-icon=\"check-circle\" width=\"1em\" height=\"1em\"\n       fill=\"currentColor\" aria-hidden=\"true\">\n    <path\n      d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\"\n      fill=\"#52c41a\"/>\n    <path\n      d=\"M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm193.4 225.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.3 0 19.9 5 25.9 13.3l71.2 98.8 157.2-218c6-8.4 15.7-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.4 12.7z\"\n      fill=\"transparent\"/>\n    <path\n      d=\"M699 353h-46.9c-10.2 0-19.9 4.9-25.9 13.3L469 584.3l-71.2-98.8c-6-8.3-15.6-13.3-25.9-13.3H325c-6.5 0-10.3 7.4-6.5 12.7l124.6 172.8a31.8 31.8 0 0051.7 0l210.6-292c3.9-5.3.1-12.7-6.4-12.7z\"\n      fill=\"#52c41a\"/>\n  </svg>\n);\n","import React from 'react';\n\nimport LoadIcon from './LoadIcon';\nimport CheckIcon from './CheckIcon';\n\nconst Loader = (props: { loading: boolean }) => {\n  const { loading } = props;\n\n  return (\n    <div className=\"loader\">\n      {loading\n        ? (\n          <LoadIcon/>\n        ) : (\n          <CheckIcon/>\n        )\n      }\n    </div>\n  )\n};\n\nexport default Loader;\n","import React, { ChangeEvent } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Card,\n  Input,\n  Button,\n  Popconfirm,\n} from 'antd';\nimport { RouteComponentProps } from 'react-router';\n\nimport { ClearOutlined } from '@ant-design/icons';\n\nimport actions from '../../actions/index';\nimport { defaultUser } from '../../reducers/index';\nimport { IState, IUser } from '../../reducers/interfaces';\nimport Avatar from '../../components/Avatar';\nimport Loader from '../../components/Loader/index';\nimport { getFullTime } from \"../../helpers/utils\";\n\ninterface ISettingsProps extends RouteComponentProps {\n  loading: boolean;\n  user: IUser | null;\n  hasRight: boolean;\n  uid: string;\n}\n\nexport class Settings extends React.Component<ISettingsProps> {\n  componentDidMount = () => {\n    const { user, uid } = this.props;\n    if (!user) {\n      actions.getUser({ uid });\n    }\n  };\n\n  onChange = (field: string) => (event: ChangeEvent<HTMLInputElement>) => {\n    const { user } = this.props;\n    if (!user) return;\n\n    const newSettings = {\n      ...user,\n      [field]: event.target.value,\n    };\n\n    this.setSettings(newSettings);\n  };\n\n  setSettings = (newSettings: {}) => {\n    const { user } = this.props;\n    if (user) {\n      actions.setUser({\n        uid: user.uid,\n        user: newSettings,\n      });\n    }\n  };\n\n  clearAvatar = () => this.setSettings({\n    ...this.props.user,\n    avatar: '',\n  });\n\n  getField = (key: string, value: string, user: IUser) => {\n    const { nickname = '' } = user;\n    const { hasRight } = this.props;\n    const disabled = !hasRight;\n\n    switch (key) {\n      case 'avatar':\n        return (\n          <div>\n            <div style={{ display: 'flex' }}>\n              <Input\n                value={value}\n                onChange={this.onChange(key)}\n                readOnly={disabled}\n              />\n              <Popconfirm\n                title=\"Очистить аватар?\"\n                onConfirm={this.clearAvatar}\n                okText=\"Да\"\n                cancelText=\"Нет\"\n                icon={<ClearOutlined style={{ color: '#ff4d4f' }}/>}\n                disabled={!value}\n              >\n                <Button\n                  disabled={disabled || !value}\n                  danger\n                >\n                  <ClearOutlined/>\n                </Button>\n              </Popconfirm>\n            </div>\n            <Avatar\n              avatar={value}\n              nickname={nickname}\n              size={128}\n              style={{ margin: '8px auto', display: 'block' }}\n            />\n          </div>\n        );\n\n      case 'uid':\n        return (\n          <Input\n            value={value}\n            readOnly\n          />\n        );\n\n      case 'lastOnline':\n        return value\n          ? (\n            <Input\n              value={getFullTime(parseInt(value))}\n              readOnly\n            />\n          ) : (\n            'Пользователь ещё не был активен'\n          );\n\n      default:\n        return (\n          <Input\n            defaultValue={value}\n            onChange={this.onChange(key)}\n            readOnly={disabled}\n          />\n        )\n    }\n  };\n\n  labels: { [key: string]: string } = {\n    'avatar': 'Аватар',\n    'nickname': 'Никнейм',\n    'lastOnline': 'Последняя активность',\n    'uid': 'UID',\n  };\n\n  render = () => {\n    const { user, loading } = this.props;\n\n    return (\n      <Card\n        className=\"settings\"\n        bordered={false}\n        loading={user === undefined}\n      >\n        <Loader loading={loading}/>\n        {user && Object\n          .keys(defaultUser)\n          .map((key: string) => (\n            <Card\n              className={key}\n              key={key}\n              title={this.labels[key]}\n            >\n              {\n                // @ts-ignore\n                this.getField(key, `${user[key] || ''}`, user)\n              }\n            </Card>\n          ))\n        }\n      </Card>\n    )\n  }\n}\n\nconst mapStateToProps = (state: IState, props: ISettingsProps) => {\n  const { loading, users, currentUser } = state;\n\n  const uid = new URLSearchParams(props.match.params).get('uid') || state.uid || '0';\n  const user = users[uid];\n  if (user && !user.uid && uid) {\n    user.uid = uid;\n  }\n\n  return {\n    loading,\n    user,\n    uid,\n    hasRight: (!!user && !!currentUser) && (currentUser.uid === user.uid || !!currentUser.isAdmin),\n  };\n};\n\nexport default connect(mapStateToProps)(Settings);\n","import React from 'react';\nimport { Button, Avatar, Card } from 'antd';\n\nimport actions from '../actions/index';\n\nconst byeLink = 'https://cdn.lowgif.com/full/fc3d7d9abd06a92e-hi-bear-gifs-get-the-best-gif-on-giphy.gif';\n\nconst Logout = () => {\n  return (\n    <Card>\n      <Avatar\n        src={byeLink}\n        size={256}\n        style={{ margin: '0 auto', display: 'block' }}\n      />\n      <br/>\n      <br/>\n      <Button\n        type=\"primary\"\n        size=\"large\"\n        onClick={() => actions.logout({ })}\n        style={{ width: '100%' }}\n      >\n        Выйти\n      </Button>\n    </Card>\n  )\n};\n\nexport default Logout;\n","import { IRoll } from \"../helpers/dice\";\n\nexport interface IAction {\n  type: string;\n\n  [key: string]: any; // Payload could be any type or size\n}\n\nexport interface IMessage {\n  author: string;\n  time: number;\n  body: string;\n  grouped?: boolean; // Remove header and top margin of message, because author is the same\n  isRP?: boolean;\n  mentioned?: boolean;\n  rolls?: IRoll[];\n  data?: { [key: string]: any }; // Extra data for special purposes\n}\n\nexport interface IState {\n  userData: IUser | null;\n  isLoggedIn: boolean;\n  settings: IUser | false;\n  loading: boolean;\n  messages: IMessage[];\n  users: IUsers;\n  uid: string;\n  currentUser: IUser | null;\n  items: IItem[];\n  error: Error | false;\n}\n\nexport interface IInventoryItem {\n  id: string;\n  time: number;\n  type: ItemType;\n  amount: number;\n}\n\nexport interface IInventory {\n  [key: string]: IInventoryItem;\n}\n\nexport interface IUser {\n  nickname: string;\n  avatar: string;\n  uid: string,\n  lastOnline: number;\n  isAdmin?: boolean;\n  inventory: IInventory,\n}\n\nexport interface IUsers {\n  [key: string]: IUser;\n}\n\nexport type ItemType = 'weapon' | 'consumable' | 'wearable' | 'junk' | 'ammo' | 'note' | 'key' | 'misc';\n\nexport interface IItem {\n  id: string;\n  name: string;\n  weight: number;\n  time: number;\n  effect: string;\n  image: string;\n  description: string;\n  price: number;\n  capacity: number;\n  armor: number;\n  amount?: number;\n  approved: boolean;\n  author?: string;\n  type: ItemType;\n}\n\nexport const defaultItem: IItem = {\n  id: '',\n  type: 'junk',\n  name: '',\n  effect: '',\n  image: '',\n  weight: 0,\n  price: 0,\n  description: '',\n  capacity: 0,\n  approved: false,\n  armor: 0,\n  time: 0,\n  amount: 0,\n};\n","import React, { ChangeEvent, Component } from 'react';\nimport {\n  Card,\n  Input,\n  InputNumber,\n  Button,\n  Popconfirm,\n  message as notify,\n  Modal,\n  Select,\n  Switch,\n} from 'antd';\nimport { ClearOutlined, CloseOutlined } from '@ant-design/icons';\n\nimport { defaultItem, IItem } from '../../reducers/interfaces';\nimport Avatar from '../../components/Avatar';\n\ninterface IItemCreatorProps {\n  onSubmit: (item: IItem) => void;\n  onClose: () => void;\n  visible: boolean;\n  item?: IItem;\n  isAdmin?: boolean;\n}\n\nclass ItemCreator extends Component<IItemCreatorProps, IItem> {\n  state = defaultItem;\n\n  labels = {\n    id: 'ID',\n    type: 'Тип*',\n    name: 'Название*',\n    weight: 'Вес',\n    effect: 'Эффект',\n    image: 'Картинка',\n    description: 'Описание',\n    price: 'Цена',\n    capacity: 'Размер магазина',\n    armor: 'Защита',\n    approved: 'Подтверждён',\n  };\n\n  types = [\n    {\n      key: 'weapon',\n      value: 'Оружие',\n    },\n    {\n      key: 'wearable',\n      value: 'Одежда/Броня',\n    },\n    {\n      key: 'consumable',\n      value: 'Употребляемое',\n    },\n    {\n      key: 'ammo',\n      value: 'Патроны',\n    },\n    {\n      key: 'misc',\n      value: 'Прочее',\n    },\n    {\n      key: 'note',\n      value: 'Записка',\n    },\n    {\n      key: 'key',\n      value: 'Ключ',\n    },\n    {\n      key: 'junk',\n      value: 'Мусор',\n    },\n  ];\n\n  onChange = (key: string, value: string | boolean | number) =>\n    // @ts-ignore\n    this.setState({ [key]: value });\n\n  clearImage = () =>\n    this.setState({ image: '' });\n\n  fields = {\n    id: () => false,\n    type: (value: string, key: string) => (\n      <Select\n        value={value}\n        onChange={(value: string) => this.onChange(key, value)}\n      >\n        {this.types.map(({ key, value }) => (\n          <Select.Option value={key} key={key}>\n            {value}\n          </Select.Option>\n        ))}\n      </Select>\n    ),\n    name: (value: string, key: string) => (\n      <Input\n        value={value}\n        onChange={(e: ChangeEvent<HTMLInputElement>) => this.onChange(key, e.currentTarget.value)}\n      />\n    ),\n    weight: (value: number, key: string) => (\n      <InputNumber\n        value={value}\n        min={0}\n        precision={1}\n        onChange={(value?: number) => this.onChange(key, value || 0)}\n        step={0.1}\n      />\n    ),\n    effect: (value: string, key: string) => (\n      <Input\n        value={value}\n        onChange={(e: ChangeEvent<HTMLInputElement>) => this.onChange(key, e.currentTarget.value)}\n      />\n    ),\n    image: (value: string, key: string) => (\n      <div>\n        <div style={{ display: 'flex' }}>\n          <Input\n            value={value}\n            onChange={(e: ChangeEvent<HTMLInputElement>) => this.onChange(key, e.currentTarget.value)}\n          />\n          <Popconfirm\n            title=\"Очистить картинку?\"\n            onConfirm={this.clearImage}\n            okText=\"Да\"\n            cancelText=\"Нет\"\n            icon={<ClearOutlined style={{ color: '#ff4d4f' }}/>}\n          >\n            <Button\n              disabled={!value}\n              danger\n            >\n              <ClearOutlined/>\n            </Button>\n          </Popconfirm>\n        </div>\n        <Avatar\n          shape=\"square\"\n          avatar={value}\n          nickname={value}\n          size={128}\n          style={{ margin: '8px auto', display: 'block' }}\n        />\n      </div>\n    ),\n    description: (value: string, key: string) => (\n      <Input.TextArea\n        value={value}\n        onChange={(e: ChangeEvent<HTMLTextAreaElement>) => this.onChange(key, e.currentTarget.value)}\n      />\n    ),\n    price: (value: number, key: string) => (\n      <InputNumber\n        value={value}\n        min={0}\n        step={1}\n        onChange={(value?: number) => this.onChange(key, value || 0)}\n      />\n    ),\n    capacity: (value: number, key: string, item: IItem) => (\n      item.type === 'weapon' && <InputNumber\n        value={value}\n        min={1}\n        step={1}\n        onChange={(value?: number) => this.onChange(key, value || 1)}\n      />\n    ),\n    armor: (value: number, key: string, item: IItem) => (\n      item.type === 'wearable' && <InputNumber\n        value={value}\n        min={0}\n        step={1}\n        onChange={(value?: number) => this.onChange(key, value || 0)}\n      />\n    ),\n    approved: (value: boolean, key: string) => (\n      this.props.isAdmin && <Switch\n        checked={value}\n        disabled={!this.props.isAdmin}\n        onChange={(checked: boolean) => this.onChange(key, checked)}\n      />\n    ),\n  };\n\n  getField = (key: string, value: string | number | boolean, item: IItem) => {\n    // @ts-ignore\n    const field = this.fields[key];\n    return field && field(value, key, item);\n  };\n\n  onSubmit = () => {\n    const { state } = this;\n    const { onSubmit, item = {} } = this.props;\n\n    const newItem: IItem = { ...state };\n    Object.keys(state).forEach((key: string) =>\n      // @ts-ignore\n      // eslint-disable-next-line\n      newItem[key] = newItem[key] === defaultItem[key] && item[key] || (newItem[key])\n    );\n\n    if (!newItem.name) {\n      notify.error('Имя не может быть пустым');\n      return;\n    }\n\n    if (this.props.isAdmin && !this.props.item) {\n      newItem.approved = true;\n    }\n    onSubmit(newItem);\n    this.setState(defaultItem);\n  };\n\n  content = () => {\n    const { state } = this;\n    const { item = {} } = this.props;\n\n    return (\n      <div className=\"item-creator\">\n        <div className=\"item-creator__body\">\n          {Object\n            .keys(defaultItem)\n            .map((key: string) => {\n                // @ts-ignore\n                // eslint-disable-next-line\n                const value = state[key] === defaultItem[key] && item[key] || (state[key]);\n                const field = this.getField(key, value, state);\n                return field && (\n                  <Card\n                    className={key}\n                    key={key}\n                    // @ts-ignore\n                    title={this.labels[key]}\n                  >\n                    {field}\n                  </Card>\n                )\n              }\n            )\n          }\n        </div>\n        <div className=\"item-creator__controls\">\n          <Popconfirm\n            title=\"Все данные будут обнулены\"\n            onConfirm={() => this.setState(defaultItem)}\n            okText=\"Очистить\"\n            cancelText=\"Отмена\"\n            icon={<ClearOutlined style={{ color: '#ff4d4f' }}/>}\n          >\n            <Button>\n              Очистить\n            </Button>\n          </Popconfirm>\n          <Popconfirm\n            title=\"Подтвердить изменения?\"\n            onConfirm={this.onSubmit}\n            okText=\"Готово\"\n            cancelText=\"Отмена\"\n            icon={<ClearOutlined style={{ color: '#15395b' }}/>}\n          >\n            <Button>\n              Готово\n            </Button>\n          </Popconfirm>\n        </div>\n      </div>\n    )\n  };\n\n  render = () => {\n    const { onClose, visible } = this.props;\n\n    return (\n      <Modal\n        className=\"item-creator-modal\"\n        centered\n        closable={false}\n        onCancel={onClose}\n        footer={null}\n        visible={visible}\n        title={\n          <CloseOutlined onClick={onClose}/>\n        }\n      >\n        {this.content()}\n      </Modal>\n    )\n  }\n}\n\nexport default ItemCreator;\n","import React, { Component } from 'react';\nimport {\n  Dropdown,\n  Menu,\n  Button,\n  Empty,\n} from 'antd';\nimport { InsertRowBelowOutlined } from '@ant-design/icons';\n\nimport { IItem, IUser } from '../../reducers/interfaces';\nimport Item from '../../components/Item';\n\nexport interface IControl {\n  label: string,\n  onClick: (item: IItem) => void;\n  condition?: (item: IItem) => boolean;\n  isAdmin?: boolean;\n}\n\ninterface IItemsListProps {\n  items: IItem[];\n  uid: string;\n  currentUser: IUser | null;\n  toggleEditingItem: (item: IItem) => void;\n  controls?: IControl[];\n}\n\nclass ItemsList extends Component<IItemsListProps> {\n  getFooter = (item: IItem) => {\n    const { controls } = this.props;\n    if (!controls) return;\n\n    const controlButtons = controls\n      .map(({ label, onClick, isAdmin, condition }: IControl) => (\n        (!condition || condition(item)) &&\n        <Menu.Item key={label}>\n          <Button onClick={() => onClick(item)}>\n            {label}\n          </Button>\n        </Menu.Item>\n      )).filter(i => !!i);\n    if (controlButtons.length === 0) return;\n\n    return (\n      <Dropdown\n        overlay={<Menu>{controlButtons}</Menu>}\n        trigger={['click']}\n      >\n        <Button>\n          <InsertRowBelowOutlined/>\n        </Button>\n      </Dropdown>\n    )\n  };\n\n  render = () => {\n    const { items } = this.props;\n\n    if (!items || items.length === 0) {\n      return (\n        <Empty description=\"Нет предметов\"/>\n      )\n    }\n\n    return (\n      <div className=\"items-body\">\n        {items.map((item: IItem) => (\n          <Item\n            key={item.id + item.time}\n            item={item}\n            footer={this.getFooter(item)}\n          />\n        ))}\n      </div>\n    )\n  }\n}\n\nexport default ItemsList;\n","import React, { ChangeEvent } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Button,\n  Card,\n  Input,\n  Radio,\n  Dropdown,\n  InputNumber,\n  Tooltip,\n  Switch, Modal,\n} from 'antd';\nimport { RadioChangeEvent } from 'antd/lib/radio';\nimport { RouteComponentProps } from 'react-router';\nimport { FilterOutlined } from '@ant-design/icons';\n\nimport '../../styles/items.scss';\nimport actions from '../../actions';\nimport { IItem, IState, ItemType, IUser } from '../../reducers/interfaces';\nimport Loader from '../../components/Loader';\nimport ItemCreator from './ItemCreator';\nimport ItemsList, { IControl } from './ItemsList';\n\nexport interface IItemsProps extends RouteComponentProps {\n  loading: boolean;\n  user: IUser | null;\n  uid: string;\n  items: IItem[];\n  currentUser: IUser | null;\n}\n\nexport interface IItemsState {\n  creatingItem: boolean;\n  editingItem: IItem | null;\n  searchString: string;\n  filters: { [key: string]: boolean };\n  itemsToLoad: number;\n  showApproved: boolean;\n  showNotApproved: boolean;\n}\n\nexport class Items<T extends IItemsProps> extends React.Component<T, IItemsState> {\n  state = {\n    creatingItem: false,\n    editingItem: null,\n    searchString: '',\n    itemsToLoad: 99,\n    showApproved: true,\n    showNotApproved: false,\n    filters: {\n      'weapon': true,\n      'consumable': true,\n      'wearable': true,\n      'junk': true,\n      'ammo': true,\n      'note': true,\n      'key': true,\n      'misc': true,\n    },\n  };\n\n  get items() {\n    const { searchString, filters, showApproved, showNotApproved } = this.state;\n\n    const _searchString = searchString.toLowerCase();\n    return this\n      .props\n      .items\n      .filter((item: IItem) => {\n        const { name, description, effect, type, approved } = item;\n        return (\n          (name && name.toLowerCase().indexOf(_searchString) > -1)\n          || (description && description.toLowerCase().indexOf(_searchString) > -1)\n          || (effect && effect.toLowerCase().indexOf(_searchString) > -1)\n        ) && (\n          // @ts-ignore\n          filters[type]\n        ) && (\n          (showApproved && approved === true)\n          || (showNotApproved && approved === false)\n        )\n      })\n  }\n\n  componentDidMount = () => {\n    actions.getItems({});\n  };\n\n  toggleCreatingItem = (creatingItem: boolean = !this.state.creatingItem) =>\n    this.setState({ creatingItem });\n\n  toggleEditingItem = (item?: IItem | null) =>\n    this.setState({ editingItem: item || null });\n\n  onCreateItem = (item: IItem) => {\n    actions.setItem({ item });\n    this.toggleCreatingItem(false);\n    this.toggleEditingItem(null);\n  };\n\n  getCreators = () => {\n    const { creatingItem, editingItem } = this.state;\n    const { currentUser } = this.props;\n    const isAdmin = !!(currentUser && currentUser.isAdmin);\n\n    return (\n      <>\n        <ItemCreator\n          visible={creatingItem}\n          onClose={() => this.toggleCreatingItem(false)}\n          onSubmit={this.onCreateItem}\n          isAdmin={isAdmin}\n        />\n        <ItemCreator\n          visible={!!editingItem}\n          onClose={() => this.toggleEditingItem(null)}\n          onSubmit={this.onCreateItem}\n          item={editingItem || undefined}\n          isAdmin={isAdmin}\n        />\n      </>\n    )\n  };\n\n  onFilterChange = (e: RadioChangeEvent) =>\n    this.setState({ filters: this.state.filters });\n\n  getFilters = () => {\n    const { showNotApproved, showApproved, filters } = this.state;\n\n    const getButton = (name: ItemType, label: string) => (\n      <div\n        tabIndex={0}\n        className=\"items-approved-button\"\n        // @ts-ignore\n        onClick={() => this.setState({ filters: { ...filters, [name]: !filters[name] } })}\n      >\n        <Switch\n          checked={\n            // @ts-ignore\n            filters[name]\n          }/>\n        {label}\n      </div>\n    );\n\n    return (\n      <Radio.Group\n        onChange={this.onFilterChange}\n        defaultValue={undefined}\n        style={{ display: 'flex', flexDirection: 'column' }}\n      >\n        {getButton('weapon', 'Оружие')}\n        {getButton('consumable', 'Употребляемое')}\n        {getButton('wearable', 'Одежда/Броня')}\n        {getButton('ammo', 'Патроны')}\n        {getButton('junk', 'Мусор')}\n        {getButton('note', 'Записки')}\n        {getButton('key', 'Ключи')}\n        {getButton('misc', 'Прочее')}\n        <div tabIndex={0} className=\"items-approved-button\"\n             onClick={() => this.setState({ showApproved: !showApproved })}>\n          <Switch checked={showApproved}/>Подтвержденные\n        </div>\n        <div tabIndex={0} className=\"items-approved-button\"\n             onClick={() => this.setState({ showNotApproved: !showNotApproved })}>\n          <Switch checked={showNotApproved}/>Не Подтвержденные\n        </div>\n      </Radio.Group>\n    )\n  };\n\n  getControls = () => {\n    return (\n      <div className=\"items-controls\">\n        <Button onClick={() => this.toggleCreatingItem(true)}>\n          Создать предмет\n        </Button>\n        <Input\n          placeholder=\"Поиск предмета\"\n          onChange={(e: ChangeEvent<HTMLInputElement>) => this.setState({ searchString: e.currentTarget.value })}\n          allowClear\n        />\n        <Dropdown\n          overlay={this.getFilters()}\n          trigger={['click']}\n        >\n          <Button>\n            <FilterOutlined/>\n          </Button>\n        </Dropdown>\n        <Tooltip title=\"Кол-во загружаемых предметов за раз\">\n          <InputNumber\n            value={this.state.itemsToLoad}\n            min={1}\n            max={99}\n            onChange={(itemsToLoad?: number) => this.setState({ itemsToLoad: itemsToLoad || 1 })}\n          />\n        </Tooltip>\n      </div>\n    )\n  };\n\n  deleteModal = (item: IItem) => Modal.confirm({\n    title: 'Удалить',\n    content: 'Это действие невозможно отменить. Вы уверены?',\n    maskClosable: true,\n    okText: 'Удалить',\n    cancelText: 'Отмена',\n    onOk: (close) => {\n      actions.deleteItem({ id: item.id });\n      close();\n    }\n  });\n\n  cardControls: IControl[] = [\n    {\n      label: 'Взять',\n      onClick: (item: IItem) => actions.giveItem({ id: item.id, uid: this.props.uid, itemType: item.type }),\n      condition: () => Boolean(this.props.currentUser && this.props.currentUser.isAdmin)\n    },\n    {\n      label: 'Редактировать',\n      onClick: (item: IItem) => this.toggleEditingItem(item),\n      condition: (item: IItem) => Boolean((this.props.uid === item.author && !item.approved) || (this.props.currentUser && this.props.currentUser.isAdmin))\n    },\n    {\n      label: 'Удалить',\n      onClick: (item: IItem) => this.deleteModal(item),\n      condition: (item: IItem) => Boolean((this.props.uid === item.author && !item.approved) || (this.props.currentUser && this.props.currentUser.isAdmin))\n    },\n  ];\n\n  getItemsList = (items: IItem[]) => {\n    const { currentUser, uid } = this.props;\n    return (\n      <ItemsList\n        items={items}\n        uid={uid}\n        currentUser={currentUser}\n        toggleEditingItem={this.toggleEditingItem}\n        controls={this.cardControls}\n      />\n    )\n  };\n\n  getFooter = (items: IItem[]): JSX.Element | void => {\n    const { itemsToLoad } = this.state;\n    const { loading } = this.props;\n    return loading\n      ? (\n        <React.Fragment/>\n      ) : (\n        <Button\n          className=\"items-load-button\"\n          onClick={() => actions.getMoreItems({ amount: itemsToLoad, lastItem: items[items.length - 1] })}\n        >\n          Загрузить {itemsToLoad}шт\n        </Button>\n      )\n  };\n\n  render = () => {\n    const { loading } = this.props;\n    const items = this.items;\n\n    return (\n      <Card className=\"items\">\n        <Loader loading={loading}/>\n        {this.getCreators()}\n        {this.getControls()}\n        {this.getItemsList(items)}\n        {this.getFooter(items)}\n      </Card>\n    )\n  }\n}\n\nconst mapStateToProps = (state: IState) => {\n  const { loading, currentUser, uid, items } = state;\n\n  return {\n    loading,\n    currentUser,\n    uid,\n    items,\n  };\n};\n\nexport default connect(mapStateToProps)(Items);\n","import React, { ChangeEvent } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Input,\n  Dropdown,\n  Button,\n  Modal,\n  message as notify,\n} from 'antd';\nimport { FilterOutlined } from '@ant-design/icons';\n\nimport { IItemsProps, Items } from '../Items';\nimport { IInventory, IItem, IState } from '../../reducers/interfaces';\nimport ItemCreator from '../Items/ItemCreator';\nimport actions from \"../../actions\";\nimport ItemsList, { IControl } from \"../Items/ItemsList\";\n\ninterface IInventoryProps extends IItemsProps {\n  inventory: IInventory;\n}\n\nconst noop = () => {\n};\n\nclass Inventory extends Items<IInventoryProps> {\n  componentDidMount = noop;\n  getFooter = noop;\n\n  getCreators = () => {\n    const { editingItem } = this.state;\n    const { currentUser } = this.props;\n    const isAdmin = !!(currentUser && currentUser.isAdmin);\n\n    return (\n      <ItemCreator\n        visible={!!editingItem}\n        onClose={() => this.toggleEditingItem(null)}\n        onSubmit={this.onCreateItem}\n        item={editingItem || undefined}\n        isAdmin={isAdmin}\n      />\n    )\n  };\n\n  getControls = () => {\n    return (\n      <div className=\"items-controls\">\n        <Input\n          placeholder=\"Поиск предмета\"\n          onChange={(e: ChangeEvent<HTMLInputElement>) => this.setState({ searchString: e.currentTarget.value })}\n          allowClear\n        />\n        <Dropdown\n          overlay={this.getFilters()}\n          trigger={['click']}\n        >\n          <Button>\n            <FilterOutlined/>\n          </Button>\n        </Dropdown>\n      </div>\n    )\n  };\n\n  getInventoryItems = (items: IItem[]) => {\n    const { inventory, loading } = this.props;\n\n    if (inventory && !loading) {\n      const inventoryItems = Object.values(inventory);\n      const loadedItems: IItem[] = [];\n      const notLoadedItems: string[] = [];\n\n      inventoryItems\n        .forEach((inventoryItem) => {\n          const { id } = inventoryItem;\n          const item = items.find((item: IItem) => item.id === id);\n          if (item) {\n            loadedItems.push({\n              ...item,\n              ...inventoryItem,\n            });\n          } else {\n            notLoadedItems.push(id);\n          }\n        });\n\n      if (notLoadedItems.length > 0) {\n        actions.getItemById({ id: notLoadedItems.shift() });\n      }\n\n      return loadedItems;\n    }\n\n    return [];\n  };\n\n  cardControls: IControl[] = [\n    {\n      label: 'Показать',\n      onClick: (item: IItem) => actions.passItem({\n        id: item.id,\n        uid: this.props.uid,\n        demonstrate: true,\n      }),\n    },\n    {\n      label: 'Использовать',\n      onClick: (item: IItem) => actions.passItem({\n        id: item.id,\n        uid: this.props.uid,\n        use: true,\n      }),\n    },\n    {\n      label: 'Выбросить',\n      onClick: (item: IItem) => actions.passItem({\n        id: item.id,\n        uid: this.props.uid,\n        item,\n      }),\n    },\n    {\n      label: 'Передать',\n      onClick: (item: IItem) => {\n      },\n    },\n    {\n      label: 'Удалить',\n      onClick: (item: IItem) => Modal.confirm({\n        title: 'Удалить',\n        maskClosable: true,\n        okText: 'Удалить все',\n        cancelText: 'Отмена',\n        autoFocusButton: 'cancel',\n        content: (\n          <div>\n            <span>Это действие невозможно отменить. Вы уверены?</span>\n            <br/> <br/> <br/>\n            <Button\n              style={{ width: '-webkit-fill-available' }}\n              onClick={() => {\n                actions.removeItem({ id: item.id, uid: this.props.uid });\n                notify.success('Удалено');\n              }}\n            >Удалить один</Button>\n          </div>\n        ),\n        onOk: (close) => {\n          actions.removeItem({ id: item.id, uid: this.props.uid, all: true });\n          close();\n        },\n      }),\n      condition: () => Boolean(this.props.currentUser && this.props.currentUser.isAdmin)\n    },\n  ];\n\n  getItemsList = (items: IItem[]) => {\n    const { currentUser, uid } = this.props;\n\n    return (\n      <ItemsList\n        uid={uid}\n        currentUser={currentUser}\n        toggleEditingItem={this.toggleEditingItem}\n        items={this.getInventoryItems(items)}\n        controls={this.cardControls}\n      />\n    )\n  };\n}\n\nconst mapStateToProps = (state: IState) => {\n  const { loading, users, uid, currentUser, items } = state;\n\n  const user = users[uid];\n  const inventory = user ? user.inventory : {};\n\n  return {\n    loading,\n    uid,\n    items,\n    inventory,\n    currentUser,\n  };\n};\n\nexport default connect(mapStateToProps)(Inventory);\n","import { ConnectedComponent } from 'react-redux';\n\nimport Chat from '../containers/Chat/index';\nimport Settings from '../containers/Settings';\nimport Logout from '../components/Logout';\nimport Items from '../containers/Items';\nimport Help from '../components/Help';\nimport Inventory from '../containers/Inventory';\n\nexport interface IRoute {\n  path: string;\n  component: ConnectedComponent<any, any> | (() => JSX.Element);\n  exact?: boolean;\n}\n\nconst routes: IRoute[] = [\n  {\n    path: '/text-roleplay/chat',\n    component: Chat,\n  },\n  {\n    path: '/text-roleplay/:uid/settings',\n    component: Settings,\n    exact: true,\n  },\n  {\n    path: '/text-roleplay/:uid/inventory',\n    component: Inventory,\n    exact: true,\n  },\n  {\n    path: '/text-roleplay/inventory',\n    component: Inventory,\n    exact: true,\n  },\n  {\n    path: '/text-roleplay/settings',\n    component: Settings,\n    exact: true,\n  },\n  {\n    path: '/text-roleplay/items',\n    component: Items,\n  },\n  {\n    path: '/text-roleplay/help',\n    component: Help,\n  },\n  {\n    path: '/text-roleplay/logout',\n    component: Logout,\n  },\n];\n\nexport default routes;\n","import React from 'react';\nimport { Card } from 'antd';\n\nexport default () => (\n  <Card className=\"help\">\n    Чат для текстовой ролевой игры. Инвентарь, управление чатом, настройки персонажа, профиля.\n    <br/><br/>\n    <h1>Возможности</h1>\n    <pre>\n      - Отправлять в чат картинки из буфера обмена (ctrl + v) либо перетаскивая в поле ввода<br/>\n      - Увеличение картинки<br/>\n      - Вставка ссылок<br/>\n      - Вставка YouTube видео (полная ссылка, не youtu.be)<br/>\n      - Броски дайсов<br/>\n      - В одном сообщении может быть не больше 10-ти дайсов\n      - Кол-во дайсов в первой цифре. Не больше 10<br/>\n      - Буква \"д\" или \"d\" вторым символом<br/>\n      - Размер дайса во второй цифре. Только размера 4 6 8 10 12 и 20<br/>\n      - Примеры: 1д10, 2д20, 9d4<br/>\n      - При неправильном дайсе сообщение не будет отправлено<br/>\n      - Дайс можно писать в любом месте сообщения и сколько угодно раз<br/>\n      - При наведении на брошенный дайс можно увидеть полный результат<br/>\n      - Крит попадания и промахи слегка подсвечиваются зеленым и красным соответственно<br/>\n      - РП сообщение, если первым символом написать \"*\"<br/>\n      - Игроки онлайн имеют синюю обводку вокруг аватара<br/>\n      - При наведении на игрока показывается последний онлайн<br/>\n      - При клике на игрока открывается страница настроек<br/>\n      - Админы могут редактировать настройки других игроков<br/>\n      - Настройки имени и аватара<br/>\n      - Настройки применяются сразу после изменения (даже в процессе редактирования)<br/>\n      - Все пользователи видят изменения<br/>\n      - При наведении на время сообщения показывается его дата<br/>\n      - Сообщения от одного автора сгруппированы<br/>\n      - Предметы (создание, удаление, редактирование)<br/>\n      - Только админ может создавать предметы<br/>\n      - Удалять и редактировать можно только предметы созданные тобой же, либо если админ<br/>\n      - Фильтр по типу предмета<br/>\n      - Поиск одновременно по названию, описанию и эффекту предметов<br/>\n      - Загрузка больше предметов по нажатию на кнопку (не сортированных)<br/>\n      - Выбор кол-во загружаемых предметов<br/>\n      - В верхнем левом углу дата последнего билда проекта. Появляется только при наведении курсора<br/>\n      - Инвентарь<br/>\n      - Админ может взять в инвентарь предметы из списка<br/>\n      - Предмет из инвентаря может быть показан другим в чате<br/>\n      - <br/>\n    </pre>\n\n    <h1>Баги/ошибки/исправления</h1>\n    <pre>\n      - Ссылки на гугл дают SameSite cookies предупреждение<br/>\n      - Решить, как попасть на чужую страницу инвентаря<br/>\n      - Сделать регистрацию с подтверждением аккаунта от админа<br/>\n      - Сделать lazy loading для подгрузки проекта только после регистрации<br/>\n      - Lazy loading для каждой основной страницы<br/>\n      - Нужна кнопка быстрого скролла в низ чата<br/>\n      - Загрузка аватара через буфер обмена<br/>\n      - Добавить подтверждение к отправке картинки<br/>\n      - Порезать контейнеры на файлы поменьше<br/>\n      - У подтвержденного предмета нельзя убрать статус подтвержденного<br/>\n      - После переноса предмета из инвентаря в чат редиректиться в этот самый чат<br/>\n      - <br/>\n    </pre>\n\n    <h1>Todo</h1>\n    <pre>\n      - Character page<br/>\n      - Local Notes<br/>\n      - Global notes<br/>\n      - Drawing<br/>\n      - <br/>\n    </pre>\n  </Card>\n)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Form,\n  Input,\n  Button,\n  Card,\n  Alert,\n} from 'antd';\n\nimport actions from '../actions/index';\nimport { IState } from \"../reducers/interfaces\";\n\ninterface ILoginProps {\n  loading: boolean;\n  error: Error | false;\n}\n\nconst Login = (props: ILoginProps) => {\n  const { error, loading } = props;\n\n  return (\n    <Card loading={loading}>\n      <Form\n        onFinish={(values) => actions.login(values)}\n      >\n        <Form.Item\n          label=\"Email\"\n          name=\"email\"\n          rules={[{ required: true, message: 'Введите e-mail!' }]}\n        >\n          <Input/>\n        </Form.Item>\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[{ required: true, message: 'Введите пароль!' }]}\n        >\n          <Input.Password/>\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n          >\n            Войти\n          </Button>\n        </Form.Item>\n      </Form>\n      {error && (\n        <Alert\n          type=\"error\"\n          message={error.message}\n        />\n      )}\n    </Card>\n  );\n};\n\nconst mapStateToProps = (state: IState) => {\n  const { loading, error } = state;\n\n  return { loading, error };\n};\n\nexport default connect(mapStateToProps)(Login);\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport routes, { IRoute } from '../configs/routes';\nimport Login from './Login';\nimport { IState } from '../reducers/interfaces';\n\ninterface IRouterProps {\n  isLoggedIn: boolean;\n}\n\nfunction Router(props: IRouterProps) {\n  if (!props.isLoggedIn) {\n    return (\n      <Switch>\n        <Route\n          path=\"*\"\n          component={Login}\n        />\n      </Switch>\n    )\n  }\n\n  return (\n    <Switch>\n      {\n        routes.map((value: IRoute) =>\n          <Route\n            key={value.path}\n            path={value.path}\n            component={value.component}\n            exact={value.exact || false}\n          />\n        )\n      }\n      <Redirect to=\"/text-roleplay/chat\"/>\n    </Switch>\n  );\n}\n\nexport default connect((state: IState) => ({ isLoggedIn: state.isLoggedIn }))(Router);\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'antd/dist/antd.css';\n\nimport Menu from './components/Menu';\nimport Router from './components/Router';\n\nimport './App.css';\nimport './styles/antd-dark.scss';\nimport './styles/components.scss';\nimport { listenForActivity } from './helpers/utils';\n\n// @ts-ignore\nconst buildDate = (<div className=\"build-date\">build date {window.buildDate.replace('_', ' ')}</div>);\n\nfunction App() {\n  listenForActivity();\n\n  return (\n    <>\n      {buildDate}\n      <BrowserRouter>\n        <Menu/>\n        <div className=\"app\">\n          <Router/>\n        </div>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","import _firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nimport firebaseConfig from '../configs/firebase.json';\nimport actions from '../actions';\n\nconst firebase = _firebase.initializeApp(firebaseConfig);\nconst auth = firebase.auth();\nconst database = firebase.database();\n\nauth.onAuthStateChanged((user) => {\n  if (user) {\n    actions.loginSuccess({ user });\n    actions.getUser({ uid: user.uid, currentUser: true });\n  } else {\n    actions.logout({});\n  }\n});\n\nexport {\n  auth,\n  database,\n  firebase,\n}\n","import { AnyAction } from 'redux';\nimport { all, takeLatest } from 'redux-saga/effects';\n\nimport { auth } from '../helpers/firebase';\nimport actions from '../actions';\n\nfunction* login(action: AnyAction) {\n  const { email, password } = action;\n\n  try {\n    const user = yield auth.signInWithEmailAndPassword(email, password);\n    actions.loginSuccess({ user });\n    localStorage.setItem('user', JSON.stringify(user.user));\n    localStorage.setItem('uid', user.user.uid);\n  } catch (error) {\n    console.error(error);\n    if (error.code === 'auth/user-not-found') {\n      const user = yield auth.createUserWithEmailAndPassword(email, password);\n      actions.loginSuccess({ user });\n      localStorage.setItem('user', JSON.stringify(user.user));\n      localStorage.setItem('uid', user.uid);\n    } else {\n      actions.loginFail({ error });\n    }\n  }\n}\n\nfunction* logout() {\n  localStorage.removeItem('user');\n  localStorage.removeItem('uid');\n  localStorage.removeItem('loggedIn');\n  yield auth.signOut();\n}\n\nexport default function* watchForActions() {\n  yield all([\n    takeLatest('LOGIN', login),\n    takeLatest('LOGOUT', logout),\n  ])\n}\n","import { all, takeLatest } from 'redux-saga/effects';\n\nimport { database } from '../helpers/firebase';\nimport actions, { IPayload } from '../actions/index';\n\nfunction* setUser(payload: IPayload) {\n  const { uid, user } = payload;\n\n  yield database\n    .ref('users')\n    .child(uid)\n    .set({\n      ...user,\n      lastOnline: new Date().getTime(),\n      uid,\n    });\n\n  actions.setUserSuccess({});\n  actions.getUser({ uid });\n}\n\nconst requestedUsers: { [key: string]: true } = {};\n\nfunction getUser(payload: IPayload) {\n  const { uid, currentUser } = payload;\n\n  if (requestedUsers[uid] && !currentUser) return;\n  requestedUsers[uid] = true;\n  database\n    .ref('users')\n    .child(uid)\n    .on('value', (rawUser) => {\n      const user = rawUser.val() || {};\n      actions.getUserSuccess({ user, uid, currentUser });\n    });\n}\n\nfunction* updateLastOnline() {\n  const uid = localStorage.getItem('uid');\n  if (!uid || uid === 'undefined') return;\n  const time = new Date().getTime();\n\n  localStorage.setItem('lastActivity', `${time}`);\n  yield database\n    .ref('users')\n    .child(`${uid}`)\n    .child('lastOnline')\n    .set(time);\n}\n\nexport default function* watchForActions() {\n  yield all([\n    takeLatest('GET_USER', getUser),\n    takeLatest('SET_USER', setUser),\n    takeLatest('UPDATE_LAST_ONLINE', updateLastOnline)\n  ]);\n}\n","import { all, takeLatest } from 'redux-saga/effects';\n\nimport { IPayload } from '../actions';\nimport actions from '../actions';\nimport { database } from '../helpers/firebase';\nimport { formatMessage } from '../helpers/utils';\n\nfunction* sendMessage(payload: IPayload) {\n  const { uid, message, data} = payload;\n  const time = new Date().getTime();\n\n  yield database\n    .ref('messages')\n    .child(`${time}`)\n    .set(formatMessage({\n      time,\n      author: uid,\n      body: `${message} `,\n      data,\n    }));\n  localStorage.setItem('message', '');\n  actions.sendMessageSuccess({});\n}\n\nfunction subscribe() {\n  database\n    .ref('messages')\n    .orderByKey()\n    .limitToLast(1)\n    .on('value', (rawMessages) => {\n      const messages = Object.values(rawMessages.val() || {});\n      actions.getMessagesSuccess({\n        messages,\n        concat: true\n      });\n    });\n}\n\nfunction unsubscribe() {\n  database.ref('messages').off();\n}\n\nfunction* getMessages() {\n  const rawMessages = yield database\n    .ref('messages')\n    .orderByKey()\n    .limitToLast(30)\n    .once('value');\n\n  const messages = Object.values(rawMessages.val() || {});\n  actions.getMessagesSuccess({ messages });\n}\n\nfunction* getMoreMessages(payload: IPayload) {\n  const { firstMessage } = payload;\n\n  const rawMessages = yield database\n    .ref('messages')\n    .orderByKey()\n    .endAt(`${firstMessage.time}`)\n    .limitToLast(30)\n    .once('value');\n\n  const messages = Object.values(rawMessages.val() || {});\n  actions.getMessagesSuccess({ messages, concat: true });\n}\n\nfunction uploadFile(payload: IPayload) {\n  const { file, uid } = payload;\n\n  const request = new XMLHttpRequest();\n  const formData = new FormData();\n\n  formData.append('image', file);\n\n  request.open('POST', 'https://api.imgur.com/3/image/');\n  request.setRequestHeader('Authorization', `Client-ID ea2c833b74d4583`);\n  request.onreadystatechange = () => {\n    if (request.status === 200 && request.readyState === 4) {\n      let res = JSON.parse(request.responseText);\n\n      actions.sendMessage({\n        uid,\n        message: res.data.link,\n      });\n    }\n  };\n\n  request.send(formData);\n}\n\nexport default function* watchForActions() {\n  yield all([\n    takeLatest('SEND_MESSAGE', sendMessage),\n    takeLatest('GET_MESSAGES', getMessages),\n    takeLatest('GET_MORE_MESSAGES', getMoreMessages),\n    takeLatest('SUBSCRIBE', subscribe),\n    takeLatest('UNSUBSCRIBE', unsubscribe),\n    takeLatest('UPLOAD_FILE', uploadFile),\n  ]);\n}\n","import { all, takeLatest, takeEvery } from 'redux-saga/effects';\n\nimport { IPayload } from '../actions';\nimport actions from '../actions';\nimport { database } from '../helpers/firebase';\nimport { generateID } from '../helpers/utils';\nimport { IInventory, IInventoryItem, IItem } from \"../reducers/interfaces\";\n\nfunction* setItem(payload: IPayload) {\n  const { item } = payload;\n  const time = new Date().getTime();\n  const id = item.id || generateID();\n  const author = localStorage.getItem('uid');\n\n  const itemData = {\n    ...item,\n    id,\n    time,\n    author,\n  };\n\n  yield database\n    .ref('items')\n    .child(`${id}`)\n    .set(itemData);\n\n  actions.setItemSuccess({ itemData });\n  actions.getItemById({ id });\n}\n\nfunction* getItems() {\n  const rawItems = yield database\n    .ref('items')\n    .orderByKey()\n    .limitToFirst(30)\n    .once('value');\n\n  const items = Object.values(rawItems.val() || {});\n  actions.getItemsSuccess({ items });\n}\n\nfunction* getItemById(payload: IPayload) {\n  const { id } = payload;\n\n  const rawItem = yield database\n    .ref('items')\n    .child(id)\n    .once('value');\n\n  const item = rawItem.val();\n  actions.getItemsSuccess({ items: [item] });\n}\n\nfunction* getMoreItems(payload: IPayload) {\n  const { amount = 1, lastItem } = payload;\n\n  const rawItems = yield database\n    .ref('items')\n    .orderByKey()\n    .startAt(`${lastItem.id}`)\n    .limitToFirst(amount + 1)\n    .once('value');\n\n  const a = rawItems.val();\n  console.log(a);\n  const items = Object.values(a || {}).splice(1);\n  actions.getItemsSuccess({ items });\n}\n\nfunction* deleteItem(payload: IPayload) {\n  const { id } = payload;\n\n  yield database\n    .ref('items')\n    .child(id)\n    .remove();\n\n  actions.deleteItemSuccess({ id });\n}\n\nfunction* passItem(payload: IPayload) {\n  const { id, uid, demonstrate, use, item } = payload;\n\n  if (id && uid) {\n    if (demonstrate) {\n      actions.sendMessage({\n        uid,\n        message: '*показывает предмет',\n        data: { itemId: id },\n      });\n      actions.passItemSuccess({});\n      return true;\n    }\n\n    const removed = yield removeItem({ id, uid });\n    if (!removed) {\n      actions.passItemFail({ id, uid });\n      console.error(`Pass item error`, payload);\n      return false;\n    }\n\n    if (use) {\n      actions.sendMessage({\n        uid,\n        message: '*использовал предмет',\n        data: { itemId: id },\n      });\n      actions.passItemSuccess({});\n      return true;\n    }\n\n    if (removed && item) {\n      actions.sendMessage({\n        uid,\n        message: '*выбросил предмет',\n        data: { itemId: id, item },\n      });\n      actions.passItemSuccess({});\n      return true;\n    }\n  }\n\n  actions.passItemFail({ id, uid });\n  console.error(`Pass item error. id and uid are not defined`, payload);\n  return false;\n}\n\nfunction* removeItem(payload: IPayload) {\n  const { id, uid, all } = payload;\n  const ref = database\n    .ref(`users`)\n    .child(uid)\n    .child('inventory');\n\n  const sameItem = yield getInventoryItem({ id, uid });\n  if (sameItem) {\n    if (!all && sameItem.amount >= 2) {\n      const item = {\n        ...sameItem,\n        amount: sameItem.amount - 1,\n      };\n\n      yield ref.child(`${id}|${sameItem.time}`).set(item);\n      actions.removeItemSuccess({ id, uid });\n      return true;\n    }\n\n    yield ref.child(`${id}|${sameItem.time}`).set({});\n    actions.removeItemSuccess({ id, uid });\n    return true;\n  }\n\n  console.error(`Remove item error: User '${uid}' doesn't have item '${id}'`);\n  actions.removeItemFail({ id, uid, error: 'has-no-item' });\n  return false;\n}\n\nfunction* getInventoryItem(payload: IPayload) {\n  const { id, uid } = payload;\n\n  const rawItems = yield database\n    .ref('users')\n    .child(uid)\n    .child('inventory')\n    .once('value');\n  const items: IInventoryItem[] = Object.values(rawItems.val() || {});\n  if (items.length) {\n    // @ts-ignore\n    const item: IItem = items.find(item => item.id === id);\n    if (item)\n      return item;\n  }\n  return;\n}\n\nfunction* giveItem(payload: IPayload) {\n  const { id, uid, itemType } = payload;\n  if (!id || !uid || !itemType) {\n    console.error('Cant give item. One of properties are not defined', id, uid, itemType);\n    actions.giveItemFail({});\n    return;\n  }\n\n  const time = new Date().getTime();\n  const item: IInventoryItem = { id, time, type: itemType, amount: 1 };\n\n  if (itemType !== 'weapon' && itemType !== 'wearable') {\n    const sameItem = yield getInventoryItem({ id, uid });\n    if (sameItem) {\n      item.amount = (sameItem.amount || 1) + 1;\n      item.time = sameItem.time;\n    }\n  }\n\n  const fullId = `${item.id}|${item.time}`;\n  yield database\n    .ref('users')\n    .child(uid)\n    .child('inventory')\n    .child(fullId)\n    .set(item);\n\n  actions.giveItemSuccess({ id, uid });\n  return true;\n}\n\nfunction* takeItem(payload: IPayload) {\n  const { itemId, ownerId, uid } = payload;\n  const took = yield removeItem({ id: itemId, uid: ownerId });\n  if (took) {\n    giveItem({ id: itemId, uid });\n    actions.sendMessage({ uid, message: '*подобрал предмет' });\n  }\n}\n\nexport default function* watchForActions() {\n  yield all([\n    takeLatest('SET_ITEM', setItem),\n    takeLatest('GET_ITEMS', getItems),\n    takeLatest('GET_MORE_ITEMS', getMoreItems),\n    takeEvery('GET_ITEM_BY_ID', getItemById),\n    takeLatest('DELETE_ITEM', deleteItem),\n    takeLatest('GIVE_ITEM', giveItem),\n    takeLatest('REMOVE_ITEM', removeItem),\n    takeLatest('PASS_ITEM', passItem),\n    takeLatest('TAKE_ITEM', takeItem),\n  ]);\n}\n","import { all } from 'redux-saga/effects';\n\nimport auth from './auth';\nimport users from './users';\nimport messages from './messages';\nimport items from './items';\n\nexport default function* watchAll() {\n  yield all([\n    auth(),\n    users(),\n    messages(),\n    items(),\n  ])\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport saga from './sagas/index';\nimport store, { sagaMiddleware } from './helpers/store';\nimport * as serviceWorker from './serviceWorker';\n\nsagaMiddleware.run(saga);\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}